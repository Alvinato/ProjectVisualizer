{"path": "/home/asumal/git/cs410/plumbum/plumbum/commands/processes.py", "lines": [{"index": "1", "colour": "orange", "code": "from __future__ import with_statement\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "2", "colour": "orange", "code": "import time\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "3", "colour": "orange", "code": "import atexit\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "4", "colour": "orange", "code": "import heapq\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "5", "colour": "orange", "code": "from subprocess import Popen\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "6", "colour": "orange", "code": "from threading import Thread\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "7", "colour": "orange", "code": "from plumbum.lib import IS_WIN32, six\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "8", "colour": "orange", "code": "try:\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "9", "colour": "orange", "code": "    from queue import Queue, Empty as QueueEmpty\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "10", "colour": "orange", "code": "except ImportError:\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "11", "colour": "orange", "code": "    from Queue import Queue, Empty as QueueEmpty\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "12", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "13", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "14", "colour": "orange", "code": "if not hasattr(Popen, \"kill\"):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "15", "colour": "orange", "code": "    # python 2.5 compatibility\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "16", "colour": "orange", "code": "    import os\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "17", "colour": "orange", "code": "    import sys\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "18", "colour": "orange", "code": "    import signal\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "19", "colour": "orange", "code": "    if IS_WIN32:\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "20", "colour": "orange", "code": "        import _subprocess\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "21", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "22", "colour": "orange", "code": "        def _Popen_terminate(self):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "23", "colour": "orange", "code": "            \"\"\"taken from subprocess.py of python 2.7\"\"\"\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "24", "colour": "orange", "code": "            try:\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "25", "colour": "green", "code": "                _subprocess.TerminateProcess(self._handle, 1)\n", "error": "W", "author": "Tomer.Filiba@emc.com"}, {"index": "26", "colour": "orange", "code": "            except OSError:\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "27", "colour": "orange", "code": "                ex = sys.exc_info()[1]\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "28", "colour": "orange", "code": "                # ERROR_ACCESS_DENIED (winerror 5) is received when the\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "29", "colour": "orange", "code": "                # process already died.\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "30", "colour": "orange", "code": "                if ex.winerror != 5:\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "31", "colour": "orange", "code": "                    raise\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "32", "colour": "green", "code": "                rc = _subprocess.GetExitCodeProcess(self._handle)\n", "error": "W", "author": "Tomer.Filiba@emc.com"}, {"index": "33", "colour": "orange", "code": "                if rc == _subprocess.STILL_ACTIVE:\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "34", "colour": "orange", "code": "                    raise\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "35", "colour": "orange", "code": "                self.returncode = rc\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "36", "colour": "orange", "code": "\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "37", "colour": "orange", "code": "        Popen.kill = _Popen_terminate\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "38", "colour": "orange", "code": "        Popen.terminate = _Popen_terminate\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "39", "colour": "orange", "code": "    else:\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "40", "colour": "orange", "code": "        def _Popen_kill(self):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "41", "colour": "orange", "code": "            os.kill(self.pid, signal.SIGKILL)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "42", "colour": "orange", "code": "        def _Popen_terminate(self):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "43", "colour": "orange", "code": "            os.kill(self.pid, signal.SIGTERM)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "44", "colour": "orange", "code": "        def _Popen_send_signal(self, sig):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "45", "colour": "orange", "code": "            os.kill(self.pid, sig)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "46", "colour": "orange", "code": "        Popen.kill = _Popen_kill\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "47", "colour": "orange", "code": "        Popen.terminate = _Popen_kill\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "48", "colour": "orange", "code": "        Popen.send_signal = _Popen_send_signal\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "49", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "50", "colour": "orange", "code": "#===================================================================================================\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "51", "colour": "orange", "code": "# Exceptions\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "52", "colour": "orange", "code": "#===================================================================================================\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "53", "colour": "orange", "code": "class ProcessExecutionError(EnvironmentError):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "54", "colour": "orange", "code": "    \"\"\"Represents the failure of a process. When the exit code of a terminated process does not\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "55", "colour": "orange", "code": "    match the expected result, this exception is raised by :func:`run_proc\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "56", "colour": "orange", "code": "    <plumbum.commands.run_proc>`. It contains the process' return code, stdout, and stderr, as\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "57", "colour": "orange", "code": "    well as the command line used to create the process (``argv``)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "58", "colour": "orange", "code": "    \"\"\"\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "59", "colour": "green", "code": "    def __init__(self, argv, retcode, stdout, stderr):\n", "error": "W", "author": "Tomer.Filiba@emc.com"}, {"index": "60", "colour": "green", "code": "        Exception.__init__(self, argv, retcode, stdout, stderr)\n", "error": "W", "author": "Tomer.Filiba@emc.com"}, {"index": "61", "colour": "orange", "code": "        self.argv = argv\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "62", "colour": "orange", "code": "        self.retcode = retcode\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "63", "colour": "orange", "code": "        if six.PY3 and isinstance(stdout, six.bytes):\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "64", "colour": "orange", "code": "            stdout = six.ascii(stdout)\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "65", "colour": "orange", "code": "        if six.PY3 and isinstance(stderr, six.bytes):\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "66", "colour": "orange", "code": "            stderr = six.ascii(stderr)\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "67", "colour": "orange", "code": "        self.stdout = stdout\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "68", "colour": "orange", "code": "        self.stderr = stderr\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "69", "colour": "orange", "code": "    def __str__(self):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "70", "colour": "orange", "code": "        stdout = \"\\n         | \".join(str(self.stdout).splitlines())\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "71", "colour": "orange", "code": "        stderr = \"\\n         | \".join(str(self.stderr).splitlines())\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "72", "colour": "orange", "code": "        lines = [\"Command line: %r\" % (self.argv,), \"Exit code: %s\" % (self.retcode)]\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "73", "colour": "orange", "code": "        if stdout:\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "74", "colour": "orange", "code": "            lines.append(\"Stdout:  | %s\" % (stdout,))\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "75", "colour": "orange", "code": "        if stderr:\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "76", "colour": "orange", "code": "            lines.append(\"Stderr:  | %s\" % (stderr,))\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "77", "colour": "orange", "code": "        return \"\\n\".join(lines)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "78", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "79", "colour": "orange", "code": "class ProcessTimedOut(Exception):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "80", "colour": "orange", "code": "    \"\"\"Raises by :func:`run_proc <plumbum.commands.run_proc>` when a ``timeout`` has been\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "81", "colour": "orange", "code": "    specified and it has elapsed before the process terminated\"\"\"\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "82", "colour": "orange", "code": "    def __init__(self, msg, argv):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "83", "colour": "orange", "code": "        Exception.__init__(self, msg, argv)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "84", "colour": "orange", "code": "        self.argv = argv\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "85", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "86", "colour": "orange", "code": "class CommandNotFound(Exception):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "87", "colour": "orange", "code": "    \"\"\"Raised by :func:`local.which <plumbum.machines.local.LocalMachine.which>` and\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "88", "colour": "orange", "code": "    :func:`RemoteMachine.which <plumbum.machines.remote.RemoteMachine.which>` when a\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "89", "colour": "orange", "code": "    command was not found in the system's ``PATH``\"\"\"\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "90", "colour": "orange", "code": "    def __init__(self, program, path):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "91", "colour": "orange", "code": "        Exception.__init__(self, program, path)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "92", "colour": "orange", "code": "        self.program = program\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "93", "colour": "orange", "code": "        self.path = path\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "94", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "95", "colour": "orange", "code": "#===================================================================================================\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "96", "colour": "orange", "code": "# Timeout thread\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "97", "colour": "orange", "code": "#===================================================================================================\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "98", "colour": "orange", "code": "class MinHeap(object):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "99", "colour": "orange", "code": "    def __init__(self, items = ()):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "100", "colour": "orange", "code": "        self._items = list(items)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "101", "colour": "orange", "code": "        heapq.heapify(self._items)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "102", "colour": "orange", "code": "    def __len__(self):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "103", "colour": "orange", "code": "        return len(self._items)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "104", "colour": "orange", "code": "    def push(self, item):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "105", "colour": "orange", "code": "        heapq.heappush(self._items, item)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "106", "colour": "orange", "code": "    def pop(self):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "107", "colour": "orange", "code": "        heapq.heappop(self._items)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "108", "colour": "orange", "code": "    def peek(self):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "109", "colour": "orange", "code": "        return self._items[0]\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "110", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "111", "colour": "orange", "code": "_timeout_queue = Queue()\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "112", "colour": "orange", "code": "_shutting_down = False\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "113", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "114", "colour": "orange", "code": "def _timeout_thread_func():\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "115", "colour": "orange", "code": "    waiting = MinHeap()\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "116", "colour": "orange", "code": "    try:\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "117", "colour": "orange", "code": "        while not _shutting_down:\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "118", "colour": "orange", "code": "            if waiting:\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "119", "colour": "orange", "code": "                ttk, _ = waiting.peek()\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "120", "colour": "orange", "code": "                timeout = max(0, ttk - time.time())\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "121", "colour": "orange", "code": "            else:\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "122", "colour": "orange", "code": "                timeout = None\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "123", "colour": "orange", "code": "            try:\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "124", "colour": "orange", "code": "                proc, time_to_kill = _timeout_queue.get(timeout = timeout)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "125", "colour": "orange", "code": "                if proc is SystemExit:\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "126", "colour": "orange", "code": "                    # terminate\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "127", "colour": "orange", "code": "                    return\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "128", "colour": "orange", "code": "                waiting.push((time_to_kill, proc))\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "129", "colour": "orange", "code": "            except QueueEmpty:\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "130", "colour": "orange", "code": "                pass\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "131", "colour": "orange", "code": "            now = time.time()\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "132", "colour": "orange", "code": "            while waiting:\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "133", "colour": "orange", "code": "                ttk, proc = waiting.peek()\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "134", "colour": "orange", "code": "                if ttk > now:\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "135", "colour": "orange", "code": "                    break\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "136", "colour": "orange", "code": "                waiting.pop()\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "137", "colour": "orange", "code": "                try:\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "138", "colour": "orange", "code": "                    if proc.poll() is None:\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "139", "colour": "orange", "code": "                        proc.kill()\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "140", "colour": "green", "code": "                        proc._timed_out = True\n", "error": "W", "author": "Tomer.Filiba@emc.com"}, {"index": "141", "colour": "orange", "code": "                except EnvironmentError:\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "142", "colour": "orange", "code": "                    pass\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "143", "colour": "green", "code": "    except Exception:\n", "error": "W", "author": "Tomer.Filiba@emc.com"}, {"index": "144", "colour": "orange", "code": "        if _shutting_down:\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "145", "colour": "orange", "code": "            # to prevent all sorts of exceptions during interpreter shutdown\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "146", "colour": "orange", "code": "            pass\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "147", "colour": "orange", "code": "        else:\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "148", "colour": "orange", "code": "            raise\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "149", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "150", "colour": "orange", "code": "bgthd = Thread(target = _timeout_thread_func, name = \"PlumbumTimeoutThread\")\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "151", "colour": "orange", "code": "bgthd.setDaemon(True)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "152", "colour": "orange", "code": "bgthd.start()\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "153", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "154", "colour": "orange", "code": "def _shutdown_bg_threads():\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "155", "colour": "green", "code": "    global _shutting_down\n", "error": "W", "author": "Tomer.Filiba@emc.com"}, {"index": "156", "colour": "orange", "code": "    _shutting_down = True\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "157", "colour": "orange", "code": "    _timeout_queue.put((SystemExit, 0))\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "158", "colour": "orange", "code": "    # grace period\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "159", "colour": "orange", "code": "    bgthd.join(0.1)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "160", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "161", "colour": "orange", "code": "atexit.register(_shutdown_bg_threads)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "162", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "163", "colour": "orange", "code": "#===================================================================================================\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "164", "colour": "orange", "code": "# run_proc\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "165", "colour": "orange", "code": "#===================================================================================================\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "166", "colour": "orange", "code": "def run_proc(proc, retcode, timeout = None):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "167", "colour": "orange", "code": "    \"\"\"Waits for the given process to terminate, with the expected exit code\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "168", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "169", "colour": "orange", "code": "    :param proc: a running Popen-like object\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "170", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "171", "colour": "orange", "code": "    :param retcode: the expected return (exit) code of the process. It defaults to 0 (the\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "172", "colour": "orange", "code": "                    convention for success). If ``None``, the return code is ignored.\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "173", "colour": "orange", "code": "                    It may also be a tuple (or any object that supports ``__contains__``)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "174", "colour": "orange", "code": "                    of expected return codes.\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "175", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "176", "colour": "orange", "code": "    :param timeout: the number of seconds (a ``float``) to allow the process to run, before\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "177", "colour": "orange", "code": "                    forcefully terminating it. If ``None``, not timeout is imposed; otherwise\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "178", "colour": "orange", "code": "                    the process is expected to terminate within that timeout value, or it will\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "179", "colour": "orange", "code": "                    be killed and :class:`ProcessTimedOut <plumbum.cli.ProcessTimedOut>`\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "180", "colour": "orange", "code": "                    will be raised\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "181", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "182", "colour": "orange", "code": "    :returns: A tuple of (return code, stdout, stderr)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "183", "colour": "orange", "code": "    \"\"\"\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "184", "colour": "orange", "code": "    if timeout is not None:\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "185", "colour": "orange", "code": "        _timeout_queue.put((proc, time.time() + timeout))\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "186", "colour": "orange", "code": "    stdout, stderr = proc.communicate()\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "187", "colour": "green", "code": "    proc._end_time = time.time()\n", "error": "W", "author": "Tomer.Filiba@emc.com"}, {"index": "188", "colour": "orange", "code": "    if not stdout:\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "189", "colour": "orange", "code": "        stdout = six.b(\"\")\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "190", "colour": "orange", "code": "    if not stderr:\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "191", "colour": "orange", "code": "        stderr = six.b(\"\")\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "192", "colour": "orange", "code": "    if getattr(proc, \"encoding\", None):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "193", "colour": "orange", "code": "        stdout = stdout.decode(proc.encoding, \"ignore\")\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "194", "colour": "orange", "code": "        stderr = stderr.decode(proc.encoding, \"ignore\")\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "195", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "196", "colour": "orange", "code": "    if getattr(proc, \"_timed_out\", False):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "197", "colour": "orange", "code": "        raise ProcessTimedOut(\"Process did not terminate within %s seconds\" % (timeout,),\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "198", "colour": "orange", "code": "            getattr(proc, \"argv\", None))\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "199", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "200", "colour": "orange", "code": "    if retcode is not None:\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "201", "colour": "orange", "code": "        if hasattr(retcode, \"__contains__\"):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "202", "colour": "orange", "code": "            if proc.returncode not in retcode:\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "203", "colour": "orange", "code": "                raise ProcessExecutionError(getattr(proc, \"argv\", None), proc.returncode,\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "204", "colour": "orange", "code": "                    stdout, stderr)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "205", "colour": "orange", "code": "        elif proc.returncode != retcode:\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "206", "colour": "orange", "code": "            raise ProcessExecutionError(getattr(proc, \"argv\", None), proc.returncode,\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "207", "colour": "orange", "code": "                stdout, stderr)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "208", "colour": "orange", "code": "    return proc.returncode, stdout, stderr\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "209", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "210", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "211", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}]}