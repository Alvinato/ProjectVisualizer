{"path": "/home/asumal/git/cs410/pattern/pattern/server/cherrypy/cherrypy/lib/profiler.py", "lines": [{"index": "1", "colour": "orange", "code": "\"\"\"Profiler tools for CherryPy.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "2", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "3", "colour": "orange", "code": "CherryPy users\n", "error": "none", "author": "tom@organisms.be"}, {"index": "4", "colour": "orange", "code": "==============\n", "error": "none", "author": "tom@organisms.be"}, {"index": "5", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "6", "colour": "orange", "code": "You can profile any of your pages as follows::\n", "error": "none", "author": "tom@organisms.be"}, {"index": "7", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "8", "colour": "orange", "code": "    from cherrypy.lib import profiler\n", "error": "none", "author": "tom@organisms.be"}, {"index": "9", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "10", "colour": "orange", "code": "    class Root:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "11", "colour": "orange", "code": "        p = profile.Profiler(\"/path/to/profile/dir\")\n", "error": "none", "author": "tom@organisms.be"}, {"index": "12", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "13", "colour": "orange", "code": "        def index(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "14", "colour": "orange", "code": "            self.p.run(self._index)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "15", "colour": "orange", "code": "        index.exposed = True\n", "error": "none", "author": "tom@organisms.be"}, {"index": "16", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "17", "colour": "orange", "code": "        def _index(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "18", "colour": "orange", "code": "            return \"Hello, world!\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "19", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "20", "colour": "orange", "code": "    cherrypy.tree.mount(Root())\n", "error": "none", "author": "tom@organisms.be"}, {"index": "21", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "22", "colour": "orange", "code": "You can also turn on profiling for all requests\n", "error": "none", "author": "tom@organisms.be"}, {"index": "23", "colour": "orange", "code": "using the ``make_app`` function as WSGI middleware.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "24", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "25", "colour": "orange", "code": "CherryPy developers\n", "error": "none", "author": "tom@organisms.be"}, {"index": "26", "colour": "orange", "code": "===================\n", "error": "none", "author": "tom@organisms.be"}, {"index": "27", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "28", "colour": "orange", "code": "This module can be used whenever you make changes to CherryPy,\n", "error": "none", "author": "tom@organisms.be"}, {"index": "29", "colour": "orange", "code": "to get a quick sanity-check on overall CP performance. Use the\n", "error": "none", "author": "tom@organisms.be"}, {"index": "30", "colour": "orange", "code": "``--profile`` flag when running the test suite. Then, use the ``serve()``\n", "error": "none", "author": "tom@organisms.be"}, {"index": "31", "colour": "orange", "code": "function to browse the results in a web browser. If you run this\n", "error": "none", "author": "tom@organisms.be"}, {"index": "32", "colour": "orange", "code": "module from the command line, it will call ``serve()`` for you.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "33", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "34", "colour": "orange", "code": "\"\"\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "35", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "36", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "37", "colour": "orange", "code": "def new_func_strip_path(func_name):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "38", "colour": "orange", "code": "    \"\"\"Make profiler output more readable by adding ``__init__`` modules' parents\"\"\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "39", "colour": "orange", "code": "    filename, line, name = func_name\n", "error": "none", "author": "tom@organisms.be"}, {"index": "40", "colour": "orange", "code": "    if filename.endswith(\"__init__.py\"):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "41", "colour": "orange", "code": "        return os.path.basename(filename[:-12]) + filename[-12:], line, name\n", "error": "none", "author": "tom@organisms.be"}, {"index": "42", "colour": "orange", "code": "    return os.path.basename(filename), line, name\n", "error": "none", "author": "tom@organisms.be"}, {"index": "43", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "44", "colour": "orange", "code": "try:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "45", "colour": "orange", "code": "    import profile\n", "error": "none", "author": "tom@organisms.be"}, {"index": "46", "colour": "orange", "code": "    import pstats\n", "error": "none", "author": "tom@organisms.be"}, {"index": "47", "colour": "orange", "code": "    pstats.func_strip_path = new_func_strip_path\n", "error": "none", "author": "tom@organisms.be"}, {"index": "48", "colour": "orange", "code": "except ImportError:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "49", "colour": "orange", "code": "    profile = None\n", "error": "none", "author": "tom@organisms.be"}, {"index": "50", "colour": "orange", "code": "    pstats = None\n", "error": "none", "author": "tom@organisms.be"}, {"index": "51", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "52", "colour": "orange", "code": "import os, os.path\n", "error": "none", "author": "tom@organisms.be"}, {"index": "53", "colour": "orange", "code": "import sys\n", "error": "none", "author": "tom@organisms.be"}, {"index": "54", "colour": "orange", "code": "import warnings\n", "error": "none", "author": "tom@organisms.be"}, {"index": "55", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "56", "colour": "orange", "code": "from cherrypy._cpcompat import BytesIO\n", "error": "none", "author": "tom@organisms.be"}, {"index": "57", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "58", "colour": "orange", "code": "_count = 0\n", "error": "none", "author": "tom@organisms.be"}, {"index": "59", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "60", "colour": "orange", "code": "class Profiler(object):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "61", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "62", "colour": "orange", "code": "    def __init__(self, path=None):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "63", "colour": "orange", "code": "        if not path:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "64", "colour": "orange", "code": "            path = os.path.join(os.path.dirname(__file__), \"profile\")\n", "error": "none", "author": "tom@organisms.be"}, {"index": "65", "colour": "orange", "code": "        self.path = path\n", "error": "none", "author": "tom@organisms.be"}, {"index": "66", "colour": "orange", "code": "        if not os.path.exists(path):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "67", "colour": "orange", "code": "            os.makedirs(path)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "68", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "69", "colour": "orange", "code": "    def run(self, func, *args, **params):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "70", "colour": "orange", "code": "        \"\"\"Dump profile data into self.path.\"\"\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "71", "colour": "green", "code": "        global _count\n", "error": "W", "author": "tom@organisms.be"}, {"index": "72", "colour": "orange", "code": "        c = _count = _count + 1\n", "error": "none", "author": "tom@organisms.be"}, {"index": "73", "colour": "orange", "code": "        path = os.path.join(self.path, \"cp_%04d.prof\" % c)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "74", "colour": "orange", "code": "        prof = profile.Profile()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "75", "colour": "orange", "code": "        result = prof.runcall(func, *args, **params)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "76", "colour": "orange", "code": "        prof.dump_stats(path)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "77", "colour": "orange", "code": "        return result\n", "error": "none", "author": "tom@organisms.be"}, {"index": "78", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "79", "colour": "orange", "code": "    def statfiles(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "80", "colour": "orange", "code": "        \"\"\":rtype: list of available profiles.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "81", "colour": "orange", "code": "        \"\"\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "82", "colour": "orange", "code": "        return [f for f in os.listdir(self.path)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "83", "colour": "orange", "code": "                if f.startswith(\"cp_\") and f.endswith(\".prof\")]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "84", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "85", "colour": "orange", "code": "    def stats(self, filename, sortby='cumulative'):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "86", "colour": "orange", "code": "        \"\"\":rtype stats(index): output of print_stats() for the given profile.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "87", "colour": "orange", "code": "        \"\"\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "88", "colour": "orange", "code": "        sio = BytesIO()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "89", "colour": "orange", "code": "        if sys.version_info >= (2, 5):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "90", "colour": "orange", "code": "            s = pstats.Stats(os.path.join(self.path, filename), stream=sio)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "91", "colour": "orange", "code": "            s.strip_dirs()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "92", "colour": "orange", "code": "            s.sort_stats(sortby)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "93", "colour": "orange", "code": "            s.print_stats()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "94", "colour": "orange", "code": "        else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "95", "colour": "orange", "code": "            # pstats.Stats before Python 2.5 didn't take a 'stream' arg,\n", "error": "none", "author": "tom@organisms.be"}, {"index": "96", "colour": "orange", "code": "            # but just printed to stdout. So re-route stdout.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "97", "colour": "orange", "code": "            s = pstats.Stats(os.path.join(self.path, filename))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "98", "colour": "orange", "code": "            s.strip_dirs()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "99", "colour": "orange", "code": "            s.sort_stats(sortby)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "100", "colour": "orange", "code": "            oldout = sys.stdout\n", "error": "none", "author": "tom@organisms.be"}, {"index": "101", "colour": "orange", "code": "            try:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "102", "colour": "orange", "code": "                sys.stdout = sio\n", "error": "none", "author": "tom@organisms.be"}, {"index": "103", "colour": "orange", "code": "                s.print_stats()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "104", "colour": "orange", "code": "            finally:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "105", "colour": "orange", "code": "                sys.stdout = oldout\n", "error": "none", "author": "tom@organisms.be"}, {"index": "106", "colour": "orange", "code": "        response = sio.getvalue()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "107", "colour": "orange", "code": "        sio.close()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "108", "colour": "orange", "code": "        return response\n", "error": "none", "author": "tom@organisms.be"}, {"index": "109", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "110", "colour": "blue", "code": "    def index(self):\n", "error": "R", "author": "tom@organisms.be"}, {"index": "111", "colour": "orange", "code": "        return \"\"\"<html>\n", "error": "none", "author": "tom@organisms.be"}, {"index": "112", "colour": "orange", "code": "        <head><title>CherryPy profile data</title></head>\n", "error": "none", "author": "tom@organisms.be"}, {"index": "113", "colour": "orange", "code": "        <frameset cols='200, 1*'>\n", "error": "none", "author": "tom@organisms.be"}, {"index": "114", "colour": "orange", "code": "            <frame src='menu' />\n", "error": "none", "author": "tom@organisms.be"}, {"index": "115", "colour": "orange", "code": "            <frame name='main' src='' />\n", "error": "none", "author": "tom@organisms.be"}, {"index": "116", "colour": "orange", "code": "        </frameset>\n", "error": "none", "author": "tom@organisms.be"}, {"index": "117", "colour": "orange", "code": "        </html>\n", "error": "none", "author": "tom@organisms.be"}, {"index": "118", "colour": "orange", "code": "        \"\"\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "119", "colour": "orange", "code": "    index.exposed = True\n", "error": "none", "author": "tom@organisms.be"}, {"index": "120", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "121", "colour": "orange", "code": "    def menu(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "122", "colour": "orange", "code": "        yield \"<h2>Profiling runs</h2>\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "123", "colour": "orange", "code": "        yield \"<p>Click on one of the runs below to see profiling data.</p>\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "124", "colour": "orange", "code": "        runs = self.statfiles()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "125", "colour": "orange", "code": "        runs.sort()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "126", "colour": "orange", "code": "        for i in runs:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "127", "colour": "orange", "code": "            yield \"<a href='report?filename=%s' target='main'>%s</a><br />\" % (i, i)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "128", "colour": "orange", "code": "    menu.exposed = True\n", "error": "none", "author": "tom@organisms.be"}, {"index": "129", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "130", "colour": "orange", "code": "    def report(self, filename):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "131", "colour": "orange", "code": "        import cherrypy\n", "error": "none", "author": "tom@organisms.be"}, {"index": "132", "colour": "orange", "code": "        cherrypy.response.headers['Content-Type'] = 'text/plain'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "133", "colour": "orange", "code": "        return self.stats(filename)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "134", "colour": "orange", "code": "    report.exposed = True\n", "error": "none", "author": "tom@organisms.be"}, {"index": "135", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "136", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "137", "colour": "orange", "code": "class ProfileAggregator(Profiler):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "138", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "139", "colour": "orange", "code": "    def __init__(self, path=None):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "140", "colour": "orange", "code": "        Profiler.__init__(self, path)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "141", "colour": "green", "code": "        global _count\n", "error": "W", "author": "tom@organisms.be"}, {"index": "142", "colour": "orange", "code": "        self.count = _count = _count + 1\n", "error": "none", "author": "tom@organisms.be"}, {"index": "143", "colour": "orange", "code": "        self.profiler = profile.Profile()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "144", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "145", "colour": "orange", "code": "    def run(self, func, *args):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "146", "colour": "orange", "code": "        path = os.path.join(self.path, \"cp_%04d.prof\" % self.count)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "147", "colour": "orange", "code": "        result = self.profiler.runcall(func, *args)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "148", "colour": "orange", "code": "        self.profiler.dump_stats(path)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "149", "colour": "orange", "code": "        return result\n", "error": "none", "author": "tom@organisms.be"}, {"index": "150", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "151", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "152", "colour": "blue", "code": "class make_app:\n", "error": "R", "author": "tom@organisms.be"}, {"index": "153", "colour": "orange", "code": "    def __init__(self, nextapp, path=None, aggregate=False):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "154", "colour": "orange", "code": "        \"\"\"Make a WSGI middleware app which wraps 'nextapp' with profiling.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "155", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "156", "colour": "orange", "code": "        nextapp\n", "error": "none", "author": "tom@organisms.be"}, {"index": "157", "colour": "orange", "code": "            the WSGI application to wrap, usually an instance of\n", "error": "none", "author": "tom@organisms.be"}, {"index": "158", "colour": "orange", "code": "            cherrypy.Application.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "159", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "160", "colour": "orange", "code": "        path\n", "error": "none", "author": "tom@organisms.be"}, {"index": "161", "colour": "orange", "code": "            where to dump the profiling output.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "162", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "163", "colour": "orange", "code": "        aggregate\n", "error": "none", "author": "tom@organisms.be"}, {"index": "164", "colour": "orange", "code": "            if True, profile data for all HTTP requests will go in\n", "error": "none", "author": "tom@organisms.be"}, {"index": "165", "colour": "orange", "code": "            a single file. If False (the default), each HTTP request will\n", "error": "none", "author": "tom@organisms.be"}, {"index": "166", "colour": "orange", "code": "            dump its profile data into a separate file.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "167", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "168", "colour": "orange", "code": "        \"\"\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "169", "colour": "orange", "code": "        if profile is None or pstats is None:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "170", "colour": "orange", "code": "            msg = (\"Your installation of Python does not have a profile module. \"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "171", "colour": "orange", "code": "                   \"If you're on Debian, try `sudo apt-get install python-profiler`. \"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "172", "colour": "orange", "code": "                   \"See http://www.cherrypy.org/wiki/ProfilingOnDebian for details.\")\n", "error": "none", "author": "tom@organisms.be"}, {"index": "173", "colour": "orange", "code": "            warnings.warn(msg)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "174", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "175", "colour": "orange", "code": "        self.nextapp = nextapp\n", "error": "none", "author": "tom@organisms.be"}, {"index": "176", "colour": "orange", "code": "        self.aggregate = aggregate\n", "error": "none", "author": "tom@organisms.be"}, {"index": "177", "colour": "orange", "code": "        if aggregate:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "178", "colour": "orange", "code": "            self.profiler = ProfileAggregator(path)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "179", "colour": "orange", "code": "        else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "180", "colour": "orange", "code": "            self.profiler = Profiler(path)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "181", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "182", "colour": "orange", "code": "    def __call__(self, environ, start_response):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "183", "colour": "orange", "code": "        def gather():\n", "error": "none", "author": "tom@organisms.be"}, {"index": "184", "colour": "orange", "code": "            result = []\n", "error": "none", "author": "tom@organisms.be"}, {"index": "185", "colour": "orange", "code": "            for line in self.nextapp(environ, start_response):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "186", "colour": "orange", "code": "                result.append(line)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "187", "colour": "orange", "code": "            return result\n", "error": "none", "author": "tom@organisms.be"}, {"index": "188", "colour": "orange", "code": "        return self.profiler.run(gather)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "189", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "190", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "191", "colour": "orange", "code": "def serve(path=None, port=8080):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "192", "colour": "orange", "code": "    if profile is None or pstats is None:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "193", "colour": "orange", "code": "        msg = (\"Your installation of Python does not have a profile module. \"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "194", "colour": "orange", "code": "               \"If you're on Debian, try `sudo apt-get install python-profiler`. \"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "195", "colour": "orange", "code": "               \"See http://www.cherrypy.org/wiki/ProfilingOnDebian for details.\")\n", "error": "none", "author": "tom@organisms.be"}, {"index": "196", "colour": "orange", "code": "        warnings.warn(msg)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "197", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "198", "colour": "orange", "code": "    import cherrypy\n", "error": "none", "author": "tom@organisms.be"}, {"index": "199", "colour": "orange", "code": "    cherrypy.config.update({'server.socket_port': int(port),\n", "error": "none", "author": "tom@organisms.be"}, {"index": "200", "colour": "orange", "code": "                            'server.thread_pool': 10,\n", "error": "none", "author": "tom@organisms.be"}, {"index": "201", "colour": "orange", "code": "                            'environment': \"production\",\n", "error": "none", "author": "tom@organisms.be"}, {"index": "202", "colour": "orange", "code": "                            })\n", "error": "none", "author": "tom@organisms.be"}, {"index": "203", "colour": "orange", "code": "    cherrypy.quickstart(Profiler(path))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "204", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "205", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "206", "colour": "orange", "code": "if __name__ == \"__main__\":\n", "error": "none", "author": "tom@organisms.be"}, {"index": "207", "colour": "green", "code": "    serve(*tuple(sys.argv[1:]))\n", "error": "W", "author": "tom@organisms.be"}, {"index": "208", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}]}