{"path": "/home/asumal/git/cs410/pattern/pattern/web/pdf/pdfinterp.py", "lines": [{"index": "1", "colour": "orange", "code": "#!/usr/bin/env python2\n", "error": "none", "author": "tom@organisms.be"}, {"index": "2", "colour": "orange", "code": "import sys\n", "error": "none", "author": "tom@organisms.be"}, {"index": "3", "colour": "orange", "code": "import re\n", "error": "none", "author": "tom@organisms.be"}, {"index": "4", "colour": "orange", "code": "try:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "5", "colour": "orange", "code": "    from cStringIO import StringIO\n", "error": "none", "author": "tom@organisms.be"}, {"index": "6", "colour": "orange", "code": "except ImportError:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "7", "colour": "orange", "code": "    from StringIO import StringIO\n", "error": "none", "author": "tom@organisms.be"}, {"index": "8", "colour": "green", "code": "from cmapdb import CMapDB, CMap\n", "error": "W", "author": "tom@organisms.be"}, {"index": "9", "colour": "green", "code": "from psparser import PSException, PSTypeError, PSEOF\n", "error": "W", "author": "tom@organisms.be"}, {"index": "10", "colour": "green", "code": "from psparser import PSKeyword, literal_name, keyword_name\n", "error": "W", "author": "tom@organisms.be"}, {"index": "11", "colour": "green", "code": "from psparser import PSStackParser\n", "error": "W", "author": "tom@organisms.be"}, {"index": "12", "colour": "green", "code": "from psparser import LIT, KWD, STRICT\n", "error": "W", "author": "tom@organisms.be"}, {"index": "13", "colour": "green", "code": "from pdftypes import PDFException, PDFStream, PDFObjRef\n", "error": "W", "author": "tom@organisms.be"}, {"index": "14", "colour": "green", "code": "from pdftypes import resolve1\n", "error": "W", "author": "tom@organisms.be"}, {"index": "15", "colour": "green", "code": "from pdftypes import int_value, float_value, num_value\n", "error": "W", "author": "tom@organisms.be"}, {"index": "16", "colour": "green", "code": "from pdftypes import str_value, list_value, dict_value, stream_value\n", "error": "W", "author": "tom@organisms.be"}, {"index": "17", "colour": "green", "code": "from pdffont import PDFFontError\n", "error": "W", "author": "tom@organisms.be"}, {"index": "18", "colour": "green", "code": "from pdffont import PDFType1Font, PDFTrueTypeFont, PDFType3Font\n", "error": "W", "author": "tom@organisms.be"}, {"index": "19", "colour": "green", "code": "from pdffont import PDFCIDFont\n", "error": "W", "author": "tom@organisms.be"}, {"index": "20", "colour": "green", "code": "from pdfparser import PDFDocument, PDFParser\n", "error": "W", "author": "tom@organisms.be"}, {"index": "21", "colour": "green", "code": "from pdfparser import PDFPasswordIncorrect\n", "error": "W", "author": "tom@organisms.be"}, {"index": "22", "colour": "green", "code": "from pdfcolor import PDFColorSpace\n", "error": "W", "author": "tom@organisms.be"}, {"index": "23", "colour": "green", "code": "from pdfcolor import PREDEFINED_COLORSPACE\n", "error": "W", "author": "tom@organisms.be"}, {"index": "24", "colour": "green", "code": "from pdfcolor import LITERAL_DEVICE_GRAY, LITERAL_DEVICE_RGB\n", "error": "W", "author": "tom@organisms.be"}, {"index": "25", "colour": "green", "code": "from pdfcolor import LITERAL_DEVICE_CMYK\n", "error": "W", "author": "tom@organisms.be"}, {"index": "26", "colour": "green", "code": "from utils import choplist\n", "error": "W", "author": "tom@organisms.be"}, {"index": "27", "colour": "green", "code": "from utils import mult_matrix, MATRIX_IDENTITY\n", "error": "W", "author": "tom@organisms.be"}, {"index": "28", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "29", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "30", "colour": "orange", "code": "##  Exceptions\n", "error": "none", "author": "tom@organisms.be"}, {"index": "31", "colour": "orange", "code": "##\n", "error": "none", "author": "tom@organisms.be"}, {"index": "32", "colour": "orange", "code": "class PDFResourceError(PDFException): pass\n", "error": "none", "author": "tom@organisms.be"}, {"index": "33", "colour": "orange", "code": "class PDFInterpreterError(PDFException): pass\n", "error": "none", "author": "tom@organisms.be"}, {"index": "34", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "35", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "36", "colour": "orange", "code": "##  Constants\n", "error": "none", "author": "tom@organisms.be"}, {"index": "37", "colour": "orange", "code": "##\n", "error": "none", "author": "tom@organisms.be"}, {"index": "38", "colour": "orange", "code": "LITERAL_PDF = LIT('PDF')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "39", "colour": "orange", "code": "LITERAL_TEXT = LIT('Text')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "40", "colour": "orange", "code": "LITERAL_FONT = LIT('Font')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "41", "colour": "orange", "code": "LITERAL_FORM = LIT('Form')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "42", "colour": "orange", "code": "LITERAL_IMAGE = LIT('Image')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "43", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "44", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "45", "colour": "orange", "code": "##  PDFTextState\n", "error": "none", "author": "tom@organisms.be"}, {"index": "46", "colour": "orange", "code": "##\n", "error": "none", "author": "tom@organisms.be"}, {"index": "47", "colour": "blue", "code": "class PDFTextState(object):\n", "error": "R", "author": "tom@organisms.be"}, {"index": "48", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "49", "colour": "orange", "code": "    def __init__(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "50", "colour": "orange", "code": "        self.font = None\n", "error": "none", "author": "tom@organisms.be"}, {"index": "51", "colour": "orange", "code": "        self.fontsize = 0\n", "error": "none", "author": "tom@organisms.be"}, {"index": "52", "colour": "orange", "code": "        self.charspace = 0\n", "error": "none", "author": "tom@organisms.be"}, {"index": "53", "colour": "orange", "code": "        self.wordspace = 0\n", "error": "none", "author": "tom@organisms.be"}, {"index": "54", "colour": "orange", "code": "        self.scaling = 100\n", "error": "none", "author": "tom@organisms.be"}, {"index": "55", "colour": "orange", "code": "        self.leading = 0\n", "error": "none", "author": "tom@organisms.be"}, {"index": "56", "colour": "orange", "code": "        self.render = 0\n", "error": "none", "author": "tom@organisms.be"}, {"index": "57", "colour": "orange", "code": "        self.rise = 0\n", "error": "none", "author": "tom@organisms.be"}, {"index": "58", "colour": "orange", "code": "        self.reset()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "59", "colour": "orange", "code": "        # self.matrix is set\n", "error": "none", "author": "tom@organisms.be"}, {"index": "60", "colour": "orange", "code": "        # self.linematrix is set\n", "error": "none", "author": "tom@organisms.be"}, {"index": "61", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "62", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "63", "colour": "orange", "code": "    def __repr__(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "64", "colour": "orange", "code": "        return ('<PDFTextState: font=%r, fontsize=%r, charspace=%r, wordspace=%r, '\n", "error": "none", "author": "tom@organisms.be"}, {"index": "65", "colour": "orange", "code": "                ' scaling=%r, leading=%r, render=%r, rise=%r, '\n", "error": "none", "author": "tom@organisms.be"}, {"index": "66", "colour": "orange", "code": "                ' matrix=%r, linematrix=%r>' %\n", "error": "none", "author": "tom@organisms.be"}, {"index": "67", "colour": "orange", "code": "                (self.font, self.fontsize, self.charspace, self.wordspace,\n", "error": "none", "author": "tom@organisms.be"}, {"index": "68", "colour": "orange", "code": "                 self.scaling, self.leading, self.render, self.rise,\n", "error": "none", "author": "tom@organisms.be"}, {"index": "69", "colour": "orange", "code": "                 self.matrix, self.linematrix))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "70", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "71", "colour": "orange", "code": "    def copy(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "72", "colour": "orange", "code": "        obj = PDFTextState()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "73", "colour": "orange", "code": "        obj.font = self.font\n", "error": "none", "author": "tom@organisms.be"}, {"index": "74", "colour": "orange", "code": "        obj.fontsize = self.fontsize\n", "error": "none", "author": "tom@organisms.be"}, {"index": "75", "colour": "orange", "code": "        obj.charspace = self.charspace\n", "error": "none", "author": "tom@organisms.be"}, {"index": "76", "colour": "orange", "code": "        obj.wordspace = self.wordspace\n", "error": "none", "author": "tom@organisms.be"}, {"index": "77", "colour": "orange", "code": "        obj.scaling = self.scaling\n", "error": "none", "author": "tom@organisms.be"}, {"index": "78", "colour": "orange", "code": "        obj.leading = self.leading\n", "error": "none", "author": "tom@organisms.be"}, {"index": "79", "colour": "orange", "code": "        obj.render = self.render\n", "error": "none", "author": "tom@organisms.be"}, {"index": "80", "colour": "orange", "code": "        obj.rise = self.rise\n", "error": "none", "author": "tom@organisms.be"}, {"index": "81", "colour": "green", "code": "        obj.matrix = self.matrix\n", "error": "W", "author": "tom@organisms.be"}, {"index": "82", "colour": "green", "code": "        obj.linematrix = self.linematrix\n", "error": "W", "author": "tom@organisms.be"}, {"index": "83", "colour": "orange", "code": "        return obj\n", "error": "none", "author": "tom@organisms.be"}, {"index": "84", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "85", "colour": "orange", "code": "    def reset(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "86", "colour": "green", "code": "        self.matrix = MATRIX_IDENTITY\n", "error": "W", "author": "tom@organisms.be"}, {"index": "87", "colour": "green", "code": "        self.linematrix = (0, 0)\n", "error": "W", "author": "tom@organisms.be"}, {"index": "88", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "89", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "90", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "91", "colour": "orange", "code": "##  PDFGraphicState\n", "error": "none", "author": "tom@organisms.be"}, {"index": "92", "colour": "orange", "code": "##\n", "error": "none", "author": "tom@organisms.be"}, {"index": "93", "colour": "blue", "code": "class PDFGraphicState(object):\n", "error": "R", "author": "tom@organisms.be"}, {"index": "94", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "95", "colour": "orange", "code": "    def __init__(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "96", "colour": "orange", "code": "        self.linewidth = 0\n", "error": "none", "author": "tom@organisms.be"}, {"index": "97", "colour": "orange", "code": "        self.linecap = None\n", "error": "none", "author": "tom@organisms.be"}, {"index": "98", "colour": "orange", "code": "        self.linejoin = None\n", "error": "none", "author": "tom@organisms.be"}, {"index": "99", "colour": "orange", "code": "        self.miterlimit = None\n", "error": "none", "author": "tom@organisms.be"}, {"index": "100", "colour": "orange", "code": "        self.dash = None\n", "error": "none", "author": "tom@organisms.be"}, {"index": "101", "colour": "orange", "code": "        self.intent = None\n", "error": "none", "author": "tom@organisms.be"}, {"index": "102", "colour": "orange", "code": "        self.flatness = None\n", "error": "none", "author": "tom@organisms.be"}, {"index": "103", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "104", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "105", "colour": "orange", "code": "    def copy(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "106", "colour": "orange", "code": "        obj = PDFGraphicState()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "107", "colour": "orange", "code": "        obj.linewidth = self.linewidth\n", "error": "none", "author": "tom@organisms.be"}, {"index": "108", "colour": "orange", "code": "        obj.linecap = self.linecap\n", "error": "none", "author": "tom@organisms.be"}, {"index": "109", "colour": "orange", "code": "        obj.linejoin = self.linejoin\n", "error": "none", "author": "tom@organisms.be"}, {"index": "110", "colour": "orange", "code": "        obj.miterlimit = self.miterlimit\n", "error": "none", "author": "tom@organisms.be"}, {"index": "111", "colour": "orange", "code": "        obj.dash = self.dash\n", "error": "none", "author": "tom@organisms.be"}, {"index": "112", "colour": "orange", "code": "        obj.intent = self.intent\n", "error": "none", "author": "tom@organisms.be"}, {"index": "113", "colour": "orange", "code": "        obj.flatness = self.flatness\n", "error": "none", "author": "tom@organisms.be"}, {"index": "114", "colour": "orange", "code": "        return obj\n", "error": "none", "author": "tom@organisms.be"}, {"index": "115", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "116", "colour": "orange", "code": "    def __repr__(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "117", "colour": "orange", "code": "        return ('<PDFGraphicState: linewidth=%r, linecap=%r, linejoin=%r, '\n", "error": "none", "author": "tom@organisms.be"}, {"index": "118", "colour": "orange", "code": "                ' miterlimit=%r, dash=%r, intent=%r, flatness=%r>' %\n", "error": "none", "author": "tom@organisms.be"}, {"index": "119", "colour": "orange", "code": "                (self.linewidth, self.linecap, self.linejoin,\n", "error": "none", "author": "tom@organisms.be"}, {"index": "120", "colour": "orange", "code": "                 self.miterlimit, self.dash, self.intent, self.flatness))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "121", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "122", "colour": "orange", "code": "##  Resource Manager\n", "error": "none", "author": "tom@organisms.be"}, {"index": "123", "colour": "orange", "code": "##\n", "error": "none", "author": "tom@organisms.be"}, {"index": "124", "colour": "orange", "code": "class PDFResourceManager(object):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "125", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "126", "colour": "orange", "code": "    \"\"\"Repository of shared resources.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "127", "colour": "orange", "code": "    \n", "error": "none", "author": "tom@organisms.be"}, {"index": "128", "colour": "orange", "code": "    ResourceManager facilitates reuse of shared resources\n", "error": "none", "author": "tom@organisms.be"}, {"index": "129", "colour": "orange", "code": "    such as fonts and images so that large objects are not\n", "error": "none", "author": "tom@organisms.be"}, {"index": "130", "colour": "orange", "code": "    allocated multiple times.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "131", "colour": "orange", "code": "    \"\"\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "132", "colour": "orange", "code": "    debug = 0\n", "error": "none", "author": "tom@organisms.be"}, {"index": "133", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "134", "colour": "orange", "code": "    def __init__(self, caching=True):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "135", "colour": "orange", "code": "        self.caching = caching\n", "error": "none", "author": "tom@organisms.be"}, {"index": "136", "colour": "orange", "code": "        self._cached_fonts = {}\n", "error": "none", "author": "tom@organisms.be"}, {"index": "137", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "138", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "139", "colour": "blue", "code": "    def get_procset(self, procs):\n", "error": "R", "author": "tom@organisms.be"}, {"index": "140", "colour": "orange", "code": "        for proc in procs:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "141", "colour": "orange", "code": "            if proc is LITERAL_PDF:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "142", "colour": "orange", "code": "                pass\n", "error": "none", "author": "tom@organisms.be"}, {"index": "143", "colour": "orange", "code": "            elif proc is LITERAL_TEXT:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "144", "colour": "orange", "code": "                pass\n", "error": "none", "author": "tom@organisms.be"}, {"index": "145", "colour": "orange", "code": "            else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "146", "colour": "orange", "code": "                #raise PDFResourceError('ProcSet %r is not supported.' % proc)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "147", "colour": "orange", "code": "                pass\n", "error": "none", "author": "tom@organisms.be"}, {"index": "148", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "149", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "150", "colour": "blue", "code": "    def get_cmap(self, cmapname, strict=False):\n", "error": "R", "author": "tom@organisms.be"}, {"index": "151", "colour": "orange", "code": "        try:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "152", "colour": "orange", "code": "            return CMapDB.get_cmap(cmapname)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "153", "colour": "orange", "code": "        except CMapDB.CMapNotFound:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "154", "colour": "orange", "code": "            if strict: raise\n", "error": "none", "author": "tom@organisms.be"}, {"index": "155", "colour": "orange", "code": "            return CMap()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "156", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "157", "colour": "blue", "code": "    def get_font(self, objid, spec):\n", "error": "R", "author": "tom@organisms.be"}, {"index": "158", "colour": "orange", "code": "        if objid and objid in self._cached_fonts:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "159", "colour": "orange", "code": "            font = self._cached_fonts[objid]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "160", "colour": "orange", "code": "        else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "161", "colour": "orange", "code": "            if 2 <= self.debug:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "162", "colour": "orange", "code": "                print >>sys.stderr, 'get_font: create: objid=%r, spec=%r' % (objid, spec)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "163", "colour": "orange", "code": "            if STRICT:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "164", "colour": "orange", "code": "                if spec['Type'] is not LITERAL_FONT:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "165", "colour": "orange", "code": "                    raise PDFFontError('Type is not /Font')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "166", "colour": "orange", "code": "            # Create a Font object.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "167", "colour": "orange", "code": "            if 'Subtype' in spec:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "168", "colour": "orange", "code": "                subtype = literal_name(spec['Subtype'])\n", "error": "none", "author": "tom@organisms.be"}, {"index": "169", "colour": "orange", "code": "            else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "170", "colour": "orange", "code": "                if STRICT:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "171", "colour": "orange", "code": "                    raise PDFFontError('Font Subtype is not specified.')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "172", "colour": "orange", "code": "                subtype = 'Type1'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "173", "colour": "orange", "code": "            if subtype in ('Type1', 'MMType1'):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "174", "colour": "orange", "code": "                # Type1 Font\n", "error": "none", "author": "tom@organisms.be"}, {"index": "175", "colour": "orange", "code": "                font = PDFType1Font(self, spec)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "176", "colour": "orange", "code": "            elif subtype == 'TrueType':\n", "error": "none", "author": "tom@organisms.be"}, {"index": "177", "colour": "orange", "code": "                # TrueType Font\n", "error": "none", "author": "tom@organisms.be"}, {"index": "178", "colour": "orange", "code": "                font = PDFTrueTypeFont(self, spec)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "179", "colour": "orange", "code": "            elif subtype == 'Type3':\n", "error": "none", "author": "tom@organisms.be"}, {"index": "180", "colour": "orange", "code": "                # Type3 Font\n", "error": "none", "author": "tom@organisms.be"}, {"index": "181", "colour": "orange", "code": "                font = PDFType3Font(self, spec)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "182", "colour": "orange", "code": "            elif subtype in ('CIDFontType0', 'CIDFontType2'):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "183", "colour": "orange", "code": "                # CID Font\n", "error": "none", "author": "tom@organisms.be"}, {"index": "184", "colour": "orange", "code": "                font = PDFCIDFont(self, spec)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "185", "colour": "orange", "code": "            elif subtype == 'Type0':\n", "error": "none", "author": "tom@organisms.be"}, {"index": "186", "colour": "orange", "code": "                # Type0 Font\n", "error": "none", "author": "tom@organisms.be"}, {"index": "187", "colour": "orange", "code": "                dfonts = list_value(spec['DescendantFonts'])\n", "error": "none", "author": "tom@organisms.be"}, {"index": "188", "colour": "orange", "code": "                assert dfonts\n", "error": "none", "author": "tom@organisms.be"}, {"index": "189", "colour": "orange", "code": "                subspec = dict_value(dfonts[0]).copy()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "190", "colour": "orange", "code": "                for k in ('Encoding', 'ToUnicode'):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "191", "colour": "orange", "code": "                    if k in spec:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "192", "colour": "orange", "code": "                        subspec[k] = resolve1(spec[k])\n", "error": "none", "author": "tom@organisms.be"}, {"index": "193", "colour": "orange", "code": "                font = self.get_font(None, subspec)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "194", "colour": "orange", "code": "            else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "195", "colour": "orange", "code": "                if STRICT:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "196", "colour": "orange", "code": "                    raise PDFFontError('Invalid Font spec: %r' % spec)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "197", "colour": "orange", "code": "                font = PDFType1Font(self, spec) # this is so wrong!\n", "error": "none", "author": "tom@organisms.be"}, {"index": "198", "colour": "orange", "code": "            if objid and self.caching:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "199", "colour": "orange", "code": "                self._cached_fonts[objid] = font\n", "error": "none", "author": "tom@organisms.be"}, {"index": "200", "colour": "orange", "code": "        return font\n", "error": "none", "author": "tom@organisms.be"}, {"index": "201", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "202", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "203", "colour": "orange", "code": "##  PDFContentParser\n", "error": "none", "author": "tom@organisms.be"}, {"index": "204", "colour": "orange", "code": "##\n", "error": "none", "author": "tom@organisms.be"}, {"index": "205", "colour": "orange", "code": "class PDFContentParser(PSStackParser):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "206", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "207", "colour": "orange", "code": "    def __init__(self, streams):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "208", "colour": "orange", "code": "        self.streams = streams\n", "error": "none", "author": "tom@organisms.be"}, {"index": "209", "colour": "orange", "code": "        self.istream = 0\n", "error": "none", "author": "tom@organisms.be"}, {"index": "210", "colour": "orange", "code": "        PSStackParser.__init__(self, None)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "211", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "212", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "213", "colour": "orange", "code": "    def fillfp(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "214", "colour": "orange", "code": "        if not self.fp:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "215", "colour": "orange", "code": "            if self.istream < len(self.streams):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "216", "colour": "orange", "code": "                strm = stream_value(self.streams[self.istream])\n", "error": "none", "author": "tom@organisms.be"}, {"index": "217", "colour": "orange", "code": "                self.istream += 1\n", "error": "none", "author": "tom@organisms.be"}, {"index": "218", "colour": "orange", "code": "            else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "219", "colour": "orange", "code": "                raise PSEOF('Unexpected EOF, file truncated?')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "220", "colour": "orange", "code": "            self.fp = StringIO(strm.get_data())\n", "error": "none", "author": "tom@organisms.be"}, {"index": "221", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "222", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "223", "colour": "orange", "code": "    def seek(self, pos):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "224", "colour": "orange", "code": "        self.fillfp()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "225", "colour": "orange", "code": "        PSStackParser.seek(self, pos)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "226", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "227", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "228", "colour": "orange", "code": "    def fillbuf(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "229", "colour": "orange", "code": "        if self.charpos < len(self.buf): return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "230", "colour": "orange", "code": "        while 1:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "231", "colour": "orange", "code": "            self.fillfp()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "232", "colour": "green", "code": "            self.bufpos = self.fp.tell()\n", "error": "W", "author": "tom@organisms.be"}, {"index": "233", "colour": "green", "code": "            self.buf = self.fp.read(self.BUFSIZ)\n", "error": "W", "author": "tom@organisms.be"}, {"index": "234", "colour": "orange", "code": "            if self.buf: break\n", "error": "none", "author": "tom@organisms.be"}, {"index": "235", "colour": "orange", "code": "            self.fp = None\n", "error": "none", "author": "tom@organisms.be"}, {"index": "236", "colour": "green", "code": "        self.charpos = 0\n", "error": "W", "author": "tom@organisms.be"}, {"index": "237", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "238", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "239", "colour": "orange", "code": "    def get_inline_data(self, pos, target='EI'):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "240", "colour": "orange", "code": "        self.seek(pos)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "241", "colour": "orange", "code": "        i = 0\n", "error": "none", "author": "tom@organisms.be"}, {"index": "242", "colour": "orange", "code": "        data = ''\n", "error": "none", "author": "tom@organisms.be"}, {"index": "243", "colour": "orange", "code": "        while i <= len(target):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "244", "colour": "orange", "code": "            self.fillbuf()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "245", "colour": "orange", "code": "            if i:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "246", "colour": "orange", "code": "                c = self.buf[self.charpos]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "247", "colour": "orange", "code": "                data += c\n", "error": "none", "author": "tom@organisms.be"}, {"index": "248", "colour": "orange", "code": "                self.charpos += 1\n", "error": "none", "author": "tom@organisms.be"}, {"index": "249", "colour": "orange", "code": "                if len(target) <= i and c.isspace():\n", "error": "none", "author": "tom@organisms.be"}, {"index": "250", "colour": "orange", "code": "                    i += 1\n", "error": "none", "author": "tom@organisms.be"}, {"index": "251", "colour": "orange", "code": "                elif i < len(target) and c == target[i]:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "252", "colour": "orange", "code": "                    i += 1\n", "error": "none", "author": "tom@organisms.be"}, {"index": "253", "colour": "orange", "code": "                else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "254", "colour": "orange", "code": "                    i = 0\n", "error": "none", "author": "tom@organisms.be"}, {"index": "255", "colour": "orange", "code": "            else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "256", "colour": "orange", "code": "                try:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "257", "colour": "orange", "code": "                    j = self.buf.index(target[0], self.charpos)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "258", "colour": "orange", "code": "                    #print 'found', (0, self.buf[j:j+10])\n", "error": "none", "author": "tom@organisms.be"}, {"index": "259", "colour": "orange", "code": "                    data += self.buf[self.charpos:j+1]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "260", "colour": "green", "code": "                    self.charpos = j+1\n", "error": "W", "author": "tom@organisms.be"}, {"index": "261", "colour": "orange", "code": "                    i = 1\n", "error": "none", "author": "tom@organisms.be"}, {"index": "262", "colour": "orange", "code": "                except ValueError:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "263", "colour": "orange", "code": "                    data += self.buf[self.charpos:]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "264", "colour": "green", "code": "                    self.charpos = len(self.buf)\n", "error": "W", "author": "tom@organisms.be"}, {"index": "265", "colour": "orange", "code": "        data = data[:-(len(target)+1)] # strip the last part\n", "error": "none", "author": "tom@organisms.be"}, {"index": "266", "colour": "orange", "code": "        data = re.sub(r'(\\x0d\\x0a|[\\x0d\\x0a])$', '', data)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "267", "colour": "orange", "code": "        return (pos, data)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "268", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "269", "colour": "orange", "code": "    def flush(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "270", "colour": "orange", "code": "        self.add_results(*self.popall())\n", "error": "none", "author": "tom@organisms.be"}, {"index": "271", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "272", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "273", "colour": "orange", "code": "    KEYWORD_BI = KWD('BI')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "274", "colour": "orange", "code": "    KEYWORD_ID = KWD('ID')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "275", "colour": "orange", "code": "    KEYWORD_EI = KWD('EI')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "276", "colour": "orange", "code": "    def do_keyword(self, pos, token):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "277", "colour": "orange", "code": "        if token is self.KEYWORD_BI:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "278", "colour": "orange", "code": "            # inline image within a content stream\n", "error": "none", "author": "tom@organisms.be"}, {"index": "279", "colour": "orange", "code": "            self.start_type(pos, 'inline')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "280", "colour": "orange", "code": "        elif token is self.KEYWORD_ID:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "281", "colour": "orange", "code": "            try:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "282", "colour": "orange", "code": "                (_, objs) = self.end_type('inline')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "283", "colour": "orange", "code": "                if len(objs) % 2 != 0:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "284", "colour": "orange", "code": "                    raise PSTypeError('Invalid dictionary construct: %r' % objs)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "285", "colour": "orange", "code": "                d = dict( (literal_name(k), v) for (k,v) in choplist(2, objs) )\n", "error": "none", "author": "tom@organisms.be"}, {"index": "286", "colour": "orange", "code": "                (pos, data) = self.get_inline_data(pos+len('ID '))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "287", "colour": "orange", "code": "                obj = PDFStream(d, data)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "288", "colour": "orange", "code": "                self.push((pos, obj))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "289", "colour": "orange", "code": "                self.push((pos, self.KEYWORD_EI))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "290", "colour": "orange", "code": "            except PSTypeError:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "291", "colour": "orange", "code": "                if STRICT: raise\n", "error": "none", "author": "tom@organisms.be"}, {"index": "292", "colour": "orange", "code": "        else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "293", "colour": "orange", "code": "            self.push((pos, token))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "294", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "295", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "296", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "297", "colour": "orange", "code": "##  Interpreter\n", "error": "none", "author": "tom@organisms.be"}, {"index": "298", "colour": "orange", "code": "##\n", "error": "none", "author": "tom@organisms.be"}, {"index": "299", "colour": "blue", "code": "class PDFPageInterpreter(object):\n", "error": "R", "author": "tom@organisms.be"}, {"index": "300", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "301", "colour": "orange", "code": "    debug = 0\n", "error": "none", "author": "tom@organisms.be"}, {"index": "302", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "303", "colour": "orange", "code": "    def __init__(self, rsrcmgr, device):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "304", "colour": "orange", "code": "        self.rsrcmgr = rsrcmgr\n", "error": "none", "author": "tom@organisms.be"}, {"index": "305", "colour": "orange", "code": "        self.device = device\n", "error": "none", "author": "tom@organisms.be"}, {"index": "306", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "307", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "308", "colour": "orange", "code": "    def dup(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "309", "colour": "orange", "code": "        return PDFPageInterpreter(self.rsrcmgr, self.device)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "310", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "311", "colour": "orange", "code": "    # init_resources(resources):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "312", "colour": "orange", "code": "    #   Prepare the fonts and XObjects listed in the Resource attribute.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "313", "colour": "blue", "code": "    def init_resources(self, resources):\n", "error": "R", "author": "tom@organisms.be"}, {"index": "314", "colour": "green", "code": "        self.resources = resources\n", "error": "W", "author": "tom@organisms.be"}, {"index": "315", "colour": "green", "code": "        self.fontmap = {}\n", "error": "W", "author": "tom@organisms.be"}, {"index": "316", "colour": "green", "code": "        self.xobjmap = {}\n", "error": "W", "author": "tom@organisms.be"}, {"index": "317", "colour": "green", "code": "        self.csmap = PREDEFINED_COLORSPACE.copy()\n", "error": "W", "author": "tom@organisms.be"}, {"index": "318", "colour": "orange", "code": "        if not resources: return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "319", "colour": "orange", "code": "        def get_colorspace(spec):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "320", "colour": "orange", "code": "            if isinstance(spec, list):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "321", "colour": "orange", "code": "                name = literal_name(spec[0])\n", "error": "none", "author": "tom@organisms.be"}, {"index": "322", "colour": "orange", "code": "            else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "323", "colour": "orange", "code": "                name = literal_name(spec)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "324", "colour": "orange", "code": "            if name == 'ICCBased' and isinstance(spec, list) and 2 <= len(spec):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "325", "colour": "orange", "code": "                return PDFColorSpace(name, stream_value(spec[1])['N'])\n", "error": "none", "author": "tom@organisms.be"}, {"index": "326", "colour": "orange", "code": "            elif name == 'DeviceN' and isinstance(spec, list) and 2 <= len(spec):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "327", "colour": "orange", "code": "                return PDFColorSpace(name, len(list_value(spec[1])))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "328", "colour": "orange", "code": "            else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "329", "colour": "orange", "code": "                return PREDEFINED_COLORSPACE[name]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "330", "colour": "orange", "code": "        for (k,v) in dict_value(resources).iteritems():\n", "error": "none", "author": "tom@organisms.be"}, {"index": "331", "colour": "orange", "code": "            if 2 <= self.debug:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "332", "colour": "orange", "code": "                print >>sys.stderr, 'Resource: %r: %r' % (k,v)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "333", "colour": "orange", "code": "            if k == 'Font':\n", "error": "none", "author": "tom@organisms.be"}, {"index": "334", "colour": "orange", "code": "                for (fontid,spec) in dict_value(v).iteritems():\n", "error": "none", "author": "tom@organisms.be"}, {"index": "335", "colour": "orange", "code": "                    objid = None\n", "error": "none", "author": "tom@organisms.be"}, {"index": "336", "colour": "orange", "code": "                    if isinstance(spec, PDFObjRef):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "337", "colour": "orange", "code": "                        objid = spec.objid\n", "error": "none", "author": "tom@organisms.be"}, {"index": "338", "colour": "orange", "code": "                    spec = dict_value(spec)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "339", "colour": "orange", "code": "                    self.fontmap[fontid] = self.rsrcmgr.get_font(objid, spec)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "340", "colour": "orange", "code": "            elif k == 'ColorSpace':\n", "error": "none", "author": "tom@organisms.be"}, {"index": "341", "colour": "orange", "code": "                for (csid,spec) in dict_value(v).iteritems():\n", "error": "none", "author": "tom@organisms.be"}, {"index": "342", "colour": "orange", "code": "                    self.csmap[csid] = get_colorspace(resolve1(spec))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "343", "colour": "orange", "code": "            elif k == 'ProcSet':\n", "error": "none", "author": "tom@organisms.be"}, {"index": "344", "colour": "orange", "code": "                self.rsrcmgr.get_procset(list_value(v))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "345", "colour": "orange", "code": "            elif k == 'XObject':\n", "error": "none", "author": "tom@organisms.be"}, {"index": "346", "colour": "orange", "code": "                for (xobjid,xobjstrm) in dict_value(v).iteritems():\n", "error": "none", "author": "tom@organisms.be"}, {"index": "347", "colour": "orange", "code": "                    self.xobjmap[xobjid] = xobjstrm\n", "error": "none", "author": "tom@organisms.be"}, {"index": "348", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "349", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "350", "colour": "orange", "code": "    # init_state(ctm)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "351", "colour": "orange", "code": "    #   Initialize the text and graphic states for rendering a page.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "352", "colour": "orange", "code": "    def init_state(self, ctm):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "353", "colour": "orange", "code": "        # gstack: stack for graphical states.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "354", "colour": "green", "code": "        self.gstack = []\n", "error": "W", "author": "tom@organisms.be"}, {"index": "355", "colour": "green", "code": "        self.ctm = ctm\n", "error": "W", "author": "tom@organisms.be"}, {"index": "356", "colour": "orange", "code": "        self.device.set_ctm(self.ctm)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "357", "colour": "green", "code": "        self.textstate = PDFTextState()\n", "error": "W", "author": "tom@organisms.be"}, {"index": "358", "colour": "green", "code": "        self.graphicstate = PDFGraphicState()\n", "error": "W", "author": "tom@organisms.be"}, {"index": "359", "colour": "green", "code": "        self.curpath = []\n", "error": "W", "author": "tom@organisms.be"}, {"index": "360", "colour": "orange", "code": "        # argstack: stack for command arguments.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "361", "colour": "green", "code": "        self.argstack = []\n", "error": "W", "author": "tom@organisms.be"}, {"index": "362", "colour": "orange", "code": "        # set some global states.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "363", "colour": "green", "code": "        self.scs = self.ncs = None\n", "error": "W", "author": "tom@organisms.be"}, {"index": "364", "colour": "orange", "code": "        if self.csmap:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "365", "colour": "green", "code": "            self.scs = self.ncs = self.csmap.values()[0]\n", "error": "W", "author": "tom@organisms.be"}, {"index": "366", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "367", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "368", "colour": "orange", "code": "    def push(self, obj):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "369", "colour": "orange", "code": "        self.argstack.append(obj)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "370", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "371", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "372", "colour": "orange", "code": "    def pop(self, n):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "373", "colour": "orange", "code": "        if n == 0: return []\n", "error": "none", "author": "tom@organisms.be"}, {"index": "374", "colour": "orange", "code": "        x = self.argstack[-n:]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "375", "colour": "green", "code": "        self.argstack = self.argstack[:-n]\n", "error": "W", "author": "tom@organisms.be"}, {"index": "376", "colour": "orange", "code": "        return x\n", "error": "none", "author": "tom@organisms.be"}, {"index": "377", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "378", "colour": "orange", "code": "    def get_current_state(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "379", "colour": "orange", "code": "        return (self.ctm, self.textstate.copy(), self.graphicstate.copy())\n", "error": "none", "author": "tom@organisms.be"}, {"index": "380", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "381", "colour": "orange", "code": "    def set_current_state(self, state):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "382", "colour": "green", "code": "        (self.ctm, self.textstate, self.graphicstate) = state\n", "error": "W", "author": "tom@organisms.be"}, {"index": "383", "colour": "orange", "code": "        self.device.set_ctm(self.ctm)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "384", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "385", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "386", "colour": "orange", "code": "    # gsave\n", "error": "none", "author": "tom@organisms.be"}, {"index": "387", "colour": "orange", "code": "    def do_q(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "388", "colour": "orange", "code": "        self.gstack.append(self.get_current_state())\n", "error": "none", "author": "tom@organisms.be"}, {"index": "389", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "390", "colour": "orange", "code": "    # grestore\n", "error": "none", "author": "tom@organisms.be"}, {"index": "391", "colour": "orange", "code": "    def do_Q(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "392", "colour": "orange", "code": "        if self.gstack:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "393", "colour": "orange", "code": "            self.set_current_state(self.gstack.pop())\n", "error": "none", "author": "tom@organisms.be"}, {"index": "394", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "395", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "396", "colour": "orange", "code": "    # concat-matrix\n", "error": "none", "author": "tom@organisms.be"}, {"index": "397", "colour": "blue", "code": "    def do_cm(self, a1, b1, c1, d1, e1, f1):\n", "error": "R", "author": "tom@organisms.be"}, {"index": "398", "colour": "green", "code": "        self.ctm = mult_matrix((a1,b1,c1,d1,e1,f1), self.ctm)\n", "error": "W", "author": "tom@organisms.be"}, {"index": "399", "colour": "orange", "code": "        self.device.set_ctm(self.ctm)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "400", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "401", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "402", "colour": "orange", "code": "    # setlinewidth\n", "error": "none", "author": "tom@organisms.be"}, {"index": "403", "colour": "orange", "code": "    def do_w(self, linewidth):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "404", "colour": "orange", "code": "        self.graphicstate.linewidth = linewidth\n", "error": "none", "author": "tom@organisms.be"}, {"index": "405", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "406", "colour": "orange", "code": "    # setlinecap\n", "error": "none", "author": "tom@organisms.be"}, {"index": "407", "colour": "orange", "code": "    def do_J(self, linecap):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "408", "colour": "orange", "code": "        self.graphicstate.linecap = linecap\n", "error": "none", "author": "tom@organisms.be"}, {"index": "409", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "410", "colour": "orange", "code": "    # setlinejoin\n", "error": "none", "author": "tom@organisms.be"}, {"index": "411", "colour": "orange", "code": "    def do_j(self, linejoin):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "412", "colour": "orange", "code": "        self.graphicstate.linejoin = linejoin\n", "error": "none", "author": "tom@organisms.be"}, {"index": "413", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "414", "colour": "orange", "code": "    # setmiterlimit\n", "error": "none", "author": "tom@organisms.be"}, {"index": "415", "colour": "orange", "code": "    def do_M(self, miterlimit):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "416", "colour": "orange", "code": "        self.graphicstate.miterlimit = miterlimit\n", "error": "none", "author": "tom@organisms.be"}, {"index": "417", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "418", "colour": "orange", "code": "    # setdash\n", "error": "none", "author": "tom@organisms.be"}, {"index": "419", "colour": "orange", "code": "    def do_d(self, dash, phase):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "420", "colour": "orange", "code": "        self.graphicstate.dash = (dash, phase)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "421", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "422", "colour": "orange", "code": "    # setintent\n", "error": "none", "author": "tom@organisms.be"}, {"index": "423", "colour": "orange", "code": "    def do_ri(self, intent):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "424", "colour": "orange", "code": "        self.graphicstate.intent = intent\n", "error": "none", "author": "tom@organisms.be"}, {"index": "425", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "426", "colour": "orange", "code": "    # setflatness\n", "error": "none", "author": "tom@organisms.be"}, {"index": "427", "colour": "orange", "code": "    def do_i(self, flatness):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "428", "colour": "orange", "code": "        self.graphicstate.flatness = flatness\n", "error": "none", "author": "tom@organisms.be"}, {"index": "429", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "430", "colour": "orange", "code": "    # load-gstate\n", "error": "none", "author": "tom@organisms.be"}, {"index": "431", "colour": "blue", "code": "    def do_gs(self, name):\n", "error": "R", "author": "tom@organisms.be"}, {"index": "432", "colour": "orange", "code": "        #XXX\n", "error": "none", "author": "tom@organisms.be"}, {"index": "433", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "434", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "435", "colour": "orange", "code": "    # moveto\n", "error": "none", "author": "tom@organisms.be"}, {"index": "436", "colour": "orange", "code": "    def do_m(self, x, y):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "437", "colour": "orange", "code": "        self.curpath.append(('m',x,y))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "438", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "439", "colour": "orange", "code": "    # lineto\n", "error": "none", "author": "tom@organisms.be"}, {"index": "440", "colour": "orange", "code": "    def do_l(self, x, y):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "441", "colour": "orange", "code": "        self.curpath.append(('l',x,y))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "442", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "443", "colour": "orange", "code": "    # curveto\n", "error": "none", "author": "tom@organisms.be"}, {"index": "444", "colour": "blue", "code": "    def do_c(self, x1, y1, x2, y2, x3, y3):\n", "error": "R", "author": "tom@organisms.be"}, {"index": "445", "colour": "orange", "code": "        self.curpath.append(('c',x1,y1,x2,y2,x3,y3))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "446", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "447", "colour": "orange", "code": "    # urveto\n", "error": "none", "author": "tom@organisms.be"}, {"index": "448", "colour": "orange", "code": "    def do_v(self, x2, y2, x3, y3):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "449", "colour": "orange", "code": "        self.curpath.append(('v',x2,y2,x3,y3))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "450", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "451", "colour": "orange", "code": "    # rveto\n", "error": "none", "author": "tom@organisms.be"}, {"index": "452", "colour": "orange", "code": "    def do_y(self, x1, y1, x3, y3):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "453", "colour": "orange", "code": "        self.curpath.append(('y',x1,y1,x3,y3))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "454", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "455", "colour": "orange", "code": "    # closepath\n", "error": "none", "author": "tom@organisms.be"}, {"index": "456", "colour": "orange", "code": "    def do_h(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "457", "colour": "orange", "code": "        self.curpath.append(('h',))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "458", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "459", "colour": "orange", "code": "    # rectangle\n", "error": "none", "author": "tom@organisms.be"}, {"index": "460", "colour": "orange", "code": "    def do_re(self, x, y, w, h):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "461", "colour": "orange", "code": "        self.curpath.append(('m',x,y))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "462", "colour": "orange", "code": "        self.curpath.append(('l',x+w,y))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "463", "colour": "orange", "code": "        self.curpath.append(('l',x+w,y+h))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "464", "colour": "orange", "code": "        self.curpath.append(('l',x,y+h))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "465", "colour": "orange", "code": "        self.curpath.append(('h',))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "466", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "467", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "468", "colour": "orange", "code": "    # stroke\n", "error": "none", "author": "tom@organisms.be"}, {"index": "469", "colour": "orange", "code": "    def do_S(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "470", "colour": "orange", "code": "        self.device.paint_path(self.graphicstate, True, False, False, self.curpath)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "471", "colour": "green", "code": "        self.curpath = []\n", "error": "W", "author": "tom@organisms.be"}, {"index": "472", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "473", "colour": "orange", "code": "    # close-and-stroke\n", "error": "none", "author": "tom@organisms.be"}, {"index": "474", "colour": "orange", "code": "    def do_s(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "475", "colour": "orange", "code": "        self.do_h()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "476", "colour": "orange", "code": "        self.do_S()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "477", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "478", "colour": "orange", "code": "    # fill\n", "error": "none", "author": "tom@organisms.be"}, {"index": "479", "colour": "orange", "code": "    def do_f(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "480", "colour": "orange", "code": "        self.device.paint_path(self.graphicstate, False, True, False, self.curpath)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "481", "colour": "green", "code": "        self.curpath = []\n", "error": "W", "author": "tom@organisms.be"}, {"index": "482", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "483", "colour": "orange", "code": "    # fill (obsolete)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "484", "colour": "orange", "code": "    do_F = do_f\n", "error": "none", "author": "tom@organisms.be"}, {"index": "485", "colour": "orange", "code": "    # fill-even-odd\n", "error": "none", "author": "tom@organisms.be"}, {"index": "486", "colour": "orange", "code": "    def do_f_a(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "487", "colour": "orange", "code": "        self.device.paint_path(self.graphicstate, False, True, True, self.curpath)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "488", "colour": "green", "code": "        self.curpath = []\n", "error": "W", "author": "tom@organisms.be"}, {"index": "489", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "490", "colour": "orange", "code": "    # fill-and-stroke\n", "error": "none", "author": "tom@organisms.be"}, {"index": "491", "colour": "orange", "code": "    def do_B(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "492", "colour": "orange", "code": "        self.device.paint_path(self.graphicstate, True, True, False, self.curpath)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "493", "colour": "green", "code": "        self.curpath = []\n", "error": "W", "author": "tom@organisms.be"}, {"index": "494", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "495", "colour": "orange", "code": "    # fill-and-stroke-even-odd\n", "error": "none", "author": "tom@organisms.be"}, {"index": "496", "colour": "orange", "code": "    def do_B_a(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "497", "colour": "orange", "code": "        self.device.paint_path(self.graphicstate, True, True, True, self.curpath)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "498", "colour": "green", "code": "        self.curpath = []\n", "error": "W", "author": "tom@organisms.be"}, {"index": "499", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "500", "colour": "orange", "code": "    # close-fill-and-stroke\n", "error": "none", "author": "tom@organisms.be"}, {"index": "501", "colour": "orange", "code": "    def do_b(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "502", "colour": "orange", "code": "        self.do_h()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "503", "colour": "orange", "code": "        self.do_B()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "504", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "505", "colour": "orange", "code": "    # close-fill-and-stroke-even-odd\n", "error": "none", "author": "tom@organisms.be"}, {"index": "506", "colour": "orange", "code": "    def do_b_a(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "507", "colour": "orange", "code": "        self.do_h()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "508", "colour": "orange", "code": "        self.do_B_a()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "509", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "510", "colour": "orange", "code": "    # close-only\n", "error": "none", "author": "tom@organisms.be"}, {"index": "511", "colour": "orange", "code": "    def do_n(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "512", "colour": "green", "code": "        self.curpath = []\n", "error": "W", "author": "tom@organisms.be"}, {"index": "513", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "514", "colour": "orange", "code": "    # clip\n", "error": "none", "author": "tom@organisms.be"}, {"index": "515", "colour": "blue", "code": "    def do_W(self): return\n", "error": "R", "author": "tom@organisms.be"}, {"index": "516", "colour": "orange", "code": "    # clip-even-odd\n", "error": "none", "author": "tom@organisms.be"}, {"index": "517", "colour": "blue", "code": "    def do_W_a(self): return\n", "error": "R", "author": "tom@organisms.be"}, {"index": "518", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "519", "colour": "orange", "code": "    # setcolorspace-stroking\n", "error": "none", "author": "tom@organisms.be"}, {"index": "520", "colour": "orange", "code": "    def do_CS(self, name):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "521", "colour": "green", "code": "        self.scs = self.csmap[literal_name(name)]\n", "error": "W", "author": "tom@organisms.be"}, {"index": "522", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "523", "colour": "orange", "code": "    # setcolorspace-non-strokine\n", "error": "none", "author": "tom@organisms.be"}, {"index": "524", "colour": "orange", "code": "    def do_cs(self, name):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "525", "colour": "green", "code": "        self.ncs = self.csmap[literal_name(name)]\n", "error": "W", "author": "tom@organisms.be"}, {"index": "526", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "527", "colour": "orange", "code": "    # setgray-stroking\n", "error": "none", "author": "tom@organisms.be"}, {"index": "528", "colour": "blue", "code": "    def do_G(self, gray):\n", "error": "R", "author": "tom@organisms.be"}, {"index": "529", "colour": "orange", "code": "        #self.do_CS(LITERAL_DEVICE_GRAY)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "530", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "531", "colour": "orange", "code": "    # setgray-non-stroking\n", "error": "none", "author": "tom@organisms.be"}, {"index": "532", "colour": "blue", "code": "    def do_g(self, gray):\n", "error": "R", "author": "tom@organisms.be"}, {"index": "533", "colour": "orange", "code": "        #self.do_cs(LITERAL_DEVICE_GRAY)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "534", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "535", "colour": "orange", "code": "    # setrgb-stroking\n", "error": "none", "author": "tom@organisms.be"}, {"index": "536", "colour": "blue", "code": "    def do_RG(self, r, g, b):\n", "error": "R", "author": "tom@organisms.be"}, {"index": "537", "colour": "orange", "code": "        #self.do_CS(LITERAL_DEVICE_RGB)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "538", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "539", "colour": "orange", "code": "    # setrgb-non-stroking\n", "error": "none", "author": "tom@organisms.be"}, {"index": "540", "colour": "blue", "code": "    def do_rg(self, r, g, b):\n", "error": "R", "author": "tom@organisms.be"}, {"index": "541", "colour": "orange", "code": "        #self.do_cs(LITERAL_DEVICE_RGB)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "542", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "543", "colour": "orange", "code": "    # setcmyk-stroking\n", "error": "none", "author": "tom@organisms.be"}, {"index": "544", "colour": "blue", "code": "    def do_K(self, c, m, y, k):\n", "error": "R", "author": "tom@organisms.be"}, {"index": "545", "colour": "orange", "code": "        #self.do_CS(LITERAL_DEVICE_CMYK)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "546", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "547", "colour": "orange", "code": "    # setcmyk-non-stroking\n", "error": "none", "author": "tom@organisms.be"}, {"index": "548", "colour": "blue", "code": "    def do_k(self, c, m, y, k):\n", "error": "R", "author": "tom@organisms.be"}, {"index": "549", "colour": "orange", "code": "        #self.do_cs(LITERAL_DEVICE_CMYK)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "550", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "551", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "552", "colour": "orange", "code": "    # setcolor\n", "error": "none", "author": "tom@organisms.be"}, {"index": "553", "colour": "orange", "code": "    def do_SCN(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "554", "colour": "orange", "code": "        if self.scs:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "555", "colour": "orange", "code": "            n = self.scs.ncomponents\n", "error": "none", "author": "tom@organisms.be"}, {"index": "556", "colour": "orange", "code": "        else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "557", "colour": "orange", "code": "            if STRICT:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "558", "colour": "orange", "code": "                raise PDFInterpreterError('No colorspace specified!')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "559", "colour": "orange", "code": "            n = 1\n", "error": "none", "author": "tom@organisms.be"}, {"index": "560", "colour": "orange", "code": "        self.pop(n)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "561", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "562", "colour": "orange", "code": "    def do_scn(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "563", "colour": "orange", "code": "        if self.ncs:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "564", "colour": "orange", "code": "            n = self.ncs.ncomponents\n", "error": "none", "author": "tom@organisms.be"}, {"index": "565", "colour": "orange", "code": "        else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "566", "colour": "orange", "code": "            if STRICT:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "567", "colour": "orange", "code": "                raise PDFInterpreterError('No colorspace specified!')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "568", "colour": "orange", "code": "            n = 1\n", "error": "none", "author": "tom@organisms.be"}, {"index": "569", "colour": "orange", "code": "        self.pop(n)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "570", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "571", "colour": "orange", "code": "    def do_SC(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "572", "colour": "orange", "code": "        self.do_SCN()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "573", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "574", "colour": "orange", "code": "    def do_sc(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "575", "colour": "orange", "code": "        self.do_scn()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "576", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "577", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "578", "colour": "orange", "code": "    # sharing-name\n", "error": "none", "author": "tom@organisms.be"}, {"index": "579", "colour": "blue", "code": "    def do_sh(self, name): return\n", "error": "R", "author": "tom@organisms.be"}, {"index": "580", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "581", "colour": "orange", "code": "    # begin-text\n", "error": "none", "author": "tom@organisms.be"}, {"index": "582", "colour": "orange", "code": "    def do_BT(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "583", "colour": "orange", "code": "        self.textstate.reset()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "584", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "585", "colour": "orange", "code": "    # end-text\n", "error": "none", "author": "tom@organisms.be"}, {"index": "586", "colour": "blue", "code": "    def do_ET(self):\n", "error": "R", "author": "tom@organisms.be"}, {"index": "587", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "588", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "589", "colour": "orange", "code": "    # begin-compat\n", "error": "none", "author": "tom@organisms.be"}, {"index": "590", "colour": "blue", "code": "    def do_BX(self): return\n", "error": "R", "author": "tom@organisms.be"}, {"index": "591", "colour": "orange", "code": "    # end-compat\n", "error": "none", "author": "tom@organisms.be"}, {"index": "592", "colour": "blue", "code": "    def do_EX(self): return\n", "error": "R", "author": "tom@organisms.be"}, {"index": "593", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "594", "colour": "orange", "code": "    # marked content operators\n", "error": "none", "author": "tom@organisms.be"}, {"index": "595", "colour": "orange", "code": "    def do_MP(self, tag):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "596", "colour": "orange", "code": "        self.device.do_tag(tag)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "597", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "598", "colour": "orange", "code": "    def do_DP(self, tag, props):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "599", "colour": "orange", "code": "        self.device.do_tag(tag, props)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "600", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "601", "colour": "orange", "code": "    def do_BMC(self, tag):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "602", "colour": "orange", "code": "        self.device.begin_tag(tag)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "603", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "604", "colour": "orange", "code": "    def do_BDC(self, tag, props):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "605", "colour": "orange", "code": "        self.device.begin_tag(tag, props)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "606", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "607", "colour": "orange", "code": "    def do_EMC(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "608", "colour": "orange", "code": "        self.device.end_tag()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "609", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "610", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "611", "colour": "orange", "code": "    # setcharspace\n", "error": "none", "author": "tom@organisms.be"}, {"index": "612", "colour": "orange", "code": "    def do_Tc(self, space):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "613", "colour": "orange", "code": "        self.textstate.charspace = space\n", "error": "none", "author": "tom@organisms.be"}, {"index": "614", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "615", "colour": "orange", "code": "    # setwordspace\n", "error": "none", "author": "tom@organisms.be"}, {"index": "616", "colour": "orange", "code": "    def do_Tw(self, space):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "617", "colour": "orange", "code": "        self.textstate.wordspace = space\n", "error": "none", "author": "tom@organisms.be"}, {"index": "618", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "619", "colour": "orange", "code": "    # textscale\n", "error": "none", "author": "tom@organisms.be"}, {"index": "620", "colour": "orange", "code": "    def do_Tz(self, scale):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "621", "colour": "orange", "code": "        self.textstate.scaling = scale\n", "error": "none", "author": "tom@organisms.be"}, {"index": "622", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "623", "colour": "orange", "code": "    # setleading\n", "error": "none", "author": "tom@organisms.be"}, {"index": "624", "colour": "orange", "code": "    def do_TL(self, leading):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "625", "colour": "orange", "code": "        self.textstate.leading = -leading\n", "error": "none", "author": "tom@organisms.be"}, {"index": "626", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "627", "colour": "orange", "code": "    # selectfont\n", "error": "none", "author": "tom@organisms.be"}, {"index": "628", "colour": "orange", "code": "    def do_Tf(self, fontid, fontsize):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "629", "colour": "orange", "code": "        try:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "630", "colour": "orange", "code": "            self.textstate.font = self.fontmap[literal_name(fontid)]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "631", "colour": "orange", "code": "        except KeyError:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "632", "colour": "orange", "code": "            raise\n", "error": "none", "author": "tom@organisms.be"}, {"index": "633", "colour": "green", "code": "            if STRICT:\n", "error": "W", "author": "tom@organisms.be"}, {"index": "634", "colour": "orange", "code": "                raise PDFInterpreterError('Undefined Font id: %r' % fontid)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "635", "colour": "orange", "code": "            return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "636", "colour": "orange", "code": "        self.textstate.fontsize = fontsize\n", "error": "none", "author": "tom@organisms.be"}, {"index": "637", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "638", "colour": "orange", "code": "    # setrendering\n", "error": "none", "author": "tom@organisms.be"}, {"index": "639", "colour": "orange", "code": "    def do_Tr(self, render):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "640", "colour": "orange", "code": "        self.textstate.render = render\n", "error": "none", "author": "tom@organisms.be"}, {"index": "641", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "642", "colour": "orange", "code": "    # settextrise\n", "error": "none", "author": "tom@organisms.be"}, {"index": "643", "colour": "orange", "code": "    def do_Ts(self, rise):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "644", "colour": "orange", "code": "        self.textstate.rise = rise\n", "error": "none", "author": "tom@organisms.be"}, {"index": "645", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "646", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "647", "colour": "orange", "code": "    # text-move\n", "error": "none", "author": "tom@organisms.be"}, {"index": "648", "colour": "orange", "code": "    def do_Td(self, tx, ty):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "649", "colour": "orange", "code": "        (a,b,c,d,e,f) = self.textstate.matrix\n", "error": "none", "author": "tom@organisms.be"}, {"index": "650", "colour": "green", "code": "        self.textstate.matrix = (a,b,c,d,tx*a+ty*c+e,tx*b+ty*d+f)\n", "error": "W", "author": "tom@organisms.be"}, {"index": "651", "colour": "green", "code": "        self.textstate.linematrix = (0, 0)\n", "error": "W", "author": "tom@organisms.be"}, {"index": "652", "colour": "orange", "code": "        #print >>sys.stderr, 'Td(%r,%r): %r' % (tx,ty,self.textstate)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "653", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "654", "colour": "orange", "code": "    # text-move\n", "error": "none", "author": "tom@organisms.be"}, {"index": "655", "colour": "orange", "code": "    def do_TD(self, tx, ty):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "656", "colour": "orange", "code": "        (a,b,c,d,e,f) = self.textstate.matrix\n", "error": "none", "author": "tom@organisms.be"}, {"index": "657", "colour": "green", "code": "        self.textstate.matrix = (a,b,c,d,tx*a+ty*c+e,tx*b+ty*d+f)\n", "error": "W", "author": "tom@organisms.be"}, {"index": "658", "colour": "orange", "code": "        self.textstate.leading = ty\n", "error": "none", "author": "tom@organisms.be"}, {"index": "659", "colour": "green", "code": "        self.textstate.linematrix = (0, 0)\n", "error": "W", "author": "tom@organisms.be"}, {"index": "660", "colour": "orange", "code": "        #print >>sys.stderr, 'TD(%r,%r): %r' % (tx,ty,self.textstate)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "661", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "662", "colour": "orange", "code": "    # textmatrix\n", "error": "none", "author": "tom@organisms.be"}, {"index": "663", "colour": "blue", "code": "    def do_Tm(self, a,b,c,d,e,f):\n", "error": "R", "author": "tom@organisms.be"}, {"index": "664", "colour": "green", "code": "        self.textstate.matrix = (a,b,c,d,e,f)\n", "error": "W", "author": "tom@organisms.be"}, {"index": "665", "colour": "green", "code": "        self.textstate.linematrix = (0, 0)\n", "error": "W", "author": "tom@organisms.be"}, {"index": "666", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "667", "colour": "orange", "code": "    # nextline\n", "error": "none", "author": "tom@organisms.be"}, {"index": "668", "colour": "orange", "code": "    def do_T_a(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "669", "colour": "orange", "code": "        (a,b,c,d,e,f) = self.textstate.matrix\n", "error": "none", "author": "tom@organisms.be"}, {"index": "670", "colour": "green", "code": "        self.textstate.matrix = (a,b,c,d,self.textstate.leading*c+e,self.textstate.leading*d+f)\n", "error": "W", "author": "tom@organisms.be"}, {"index": "671", "colour": "green", "code": "        self.textstate.linematrix = (0, 0)\n", "error": "W", "author": "tom@organisms.be"}, {"index": "672", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "673", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "674", "colour": "orange", "code": "    # show-pos\n", "error": "none", "author": "tom@organisms.be"}, {"index": "675", "colour": "orange", "code": "    def do_TJ(self, seq):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "676", "colour": "orange", "code": "        #print >>sys.stderr, 'TJ(%r): %r' % (seq,self.textstate)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "677", "colour": "orange", "code": "        if self.textstate.font is None:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "678", "colour": "orange", "code": "            if STRICT:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "679", "colour": "orange", "code": "                raise PDFInterpreterError('No font specified!')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "680", "colour": "orange", "code": "            return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "681", "colour": "orange", "code": "        self.device.render_string(self.textstate, seq)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "682", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "683", "colour": "orange", "code": "    # show\n", "error": "none", "author": "tom@organisms.be"}, {"index": "684", "colour": "orange", "code": "    def do_Tj(self, s):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "685", "colour": "orange", "code": "        self.do_TJ([s])\n", "error": "none", "author": "tom@organisms.be"}, {"index": "686", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "687", "colour": "orange", "code": "    # quote\n", "error": "none", "author": "tom@organisms.be"}, {"index": "688", "colour": "orange", "code": "    def do__q(self, s):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "689", "colour": "orange", "code": "        self.do_T_a()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "690", "colour": "orange", "code": "        self.do_TJ([s])\n", "error": "none", "author": "tom@organisms.be"}, {"index": "691", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "692", "colour": "orange", "code": "    # doublequote\n", "error": "none", "author": "tom@organisms.be"}, {"index": "693", "colour": "orange", "code": "    def do__w(self, aw, ac, s):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "694", "colour": "orange", "code": "        self.do_Tw(aw)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "695", "colour": "orange", "code": "        self.do_Tc(ac)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "696", "colour": "orange", "code": "        self.do_TJ([s])\n", "error": "none", "author": "tom@organisms.be"}, {"index": "697", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "698", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "699", "colour": "orange", "code": "    # inline image\n", "error": "none", "author": "tom@organisms.be"}, {"index": "700", "colour": "blue", "code": "    def do_BI(self): # never called\n", "error": "R", "author": "tom@organisms.be"}, {"index": "701", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "702", "colour": "blue", "code": "    def do_ID(self): # never called\n", "error": "R", "author": "tom@organisms.be"}, {"index": "703", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "704", "colour": "orange", "code": "    def do_EI(self, obj):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "705", "colour": "orange", "code": "        if 'W' in obj and 'H' in obj:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "706", "colour": "orange", "code": "            iobjid = str(id(obj))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "707", "colour": "orange", "code": "            self.device.begin_figure(iobjid, (0,0,1,1), MATRIX_IDENTITY)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "708", "colour": "orange", "code": "            self.device.render_image(iobjid, obj)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "709", "colour": "orange", "code": "            self.device.end_figure(iobjid)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "710", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "711", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "712", "colour": "orange", "code": "    # invoke an XObject\n", "error": "none", "author": "tom@organisms.be"}, {"index": "713", "colour": "orange", "code": "    def do_Do(self, xobjid):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "714", "colour": "orange", "code": "        xobjid = literal_name(xobjid)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "715", "colour": "orange", "code": "        try:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "716", "colour": "orange", "code": "            xobj = stream_value(self.xobjmap[xobjid])\n", "error": "none", "author": "tom@organisms.be"}, {"index": "717", "colour": "orange", "code": "        except KeyError:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "718", "colour": "orange", "code": "            if STRICT:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "719", "colour": "orange", "code": "                raise PDFInterpreterError('Undefined xobject id: %r' % xobjid)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "720", "colour": "orange", "code": "            return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "721", "colour": "orange", "code": "        if 1 <= self.debug:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "722", "colour": "orange", "code": "            print >>sys.stderr, 'Processing xobj: %r' % xobj\n", "error": "none", "author": "tom@organisms.be"}, {"index": "723", "colour": "orange", "code": "        subtype = xobj.get('Subtype')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "724", "colour": "orange", "code": "        if subtype is LITERAL_FORM and 'BBox' in xobj:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "725", "colour": "orange", "code": "            interpreter = self.dup()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "726", "colour": "orange", "code": "            bbox = list_value(xobj['BBox'])\n", "error": "none", "author": "tom@organisms.be"}, {"index": "727", "colour": "orange", "code": "            matrix = list_value(xobj.get('Matrix', MATRIX_IDENTITY))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "728", "colour": "orange", "code": "            # According to PDF reference 1.7 section 4.9.1, XObjects in \n", "error": "none", "author": "tom@organisms.be"}, {"index": "729", "colour": "orange", "code": "            # earlier PDFs (prior to v1.2) use the page's Resources entry\n", "error": "none", "author": "tom@organisms.be"}, {"index": "730", "colour": "orange", "code": "            # instead of having their own Resources entry.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "731", "colour": "orange", "code": "            resources = dict_value(xobj.get('Resources')) or self.resources.copy()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "732", "colour": "orange", "code": "            self.device.begin_figure(xobjid, bbox, matrix)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "733", "colour": "orange", "code": "            interpreter.render_contents(resources, [xobj], ctm=mult_matrix(matrix, self.ctm))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "734", "colour": "orange", "code": "            self.device.end_figure(xobjid)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "735", "colour": "orange", "code": "        elif subtype is LITERAL_IMAGE and 'Width' in xobj and 'Height' in xobj:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "736", "colour": "orange", "code": "            self.device.begin_figure(xobjid, (0,0,1,1), MATRIX_IDENTITY)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "737", "colour": "orange", "code": "            self.device.render_image(xobjid, xobj)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "738", "colour": "orange", "code": "            self.device.end_figure(xobjid)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "739", "colour": "orange", "code": "        else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "740", "colour": "orange", "code": "            # unsupported xobject type.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "741", "colour": "orange", "code": "            pass\n", "error": "none", "author": "tom@organisms.be"}, {"index": "742", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "743", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "744", "colour": "orange", "code": "    def process_page(self, page):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "745", "colour": "orange", "code": "        if 1 <= self.debug:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "746", "colour": "orange", "code": "            print >>sys.stderr, 'Processing page: %r' % page\n", "error": "none", "author": "tom@organisms.be"}, {"index": "747", "colour": "orange", "code": "        (x0,y0,x1,y1) = page.mediabox\n", "error": "none", "author": "tom@organisms.be"}, {"index": "748", "colour": "orange", "code": "        if page.rotate == 90:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "749", "colour": "orange", "code": "            ctm = (0,-1,1,0, -y0,x1)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "750", "colour": "orange", "code": "        elif page.rotate == 180:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "751", "colour": "orange", "code": "            ctm = (-1,0,0,-1, x1,y1)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "752", "colour": "orange", "code": "        elif page.rotate == 270:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "753", "colour": "orange", "code": "            ctm = (0,1,-1,0, y1,-x0)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "754", "colour": "orange", "code": "        else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "755", "colour": "orange", "code": "            ctm = (1,0,0,1, -x0,-y0)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "756", "colour": "orange", "code": "        self.device.begin_page(page, ctm)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "757", "colour": "orange", "code": "        self.render_contents(page.resources, page.contents, ctm=ctm)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "758", "colour": "orange", "code": "        self.device.end_page(page)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "759", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "760", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "761", "colour": "orange", "code": "    # render_contents(resources, streams, ctm)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "762", "colour": "orange", "code": "    #   Render the content streams.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "763", "colour": "orange", "code": "    #   This method may be called recursively.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "764", "colour": "orange", "code": "    def render_contents(self, resources, streams, ctm=MATRIX_IDENTITY):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "765", "colour": "orange", "code": "        if 1 <= self.debug:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "766", "colour": "orange", "code": "            print >>sys.stderr, ('render_contents: resources=%r, streams=%r, ctm=%r' %\n", "error": "none", "author": "tom@organisms.be"}, {"index": "767", "colour": "orange", "code": "                             (resources, streams, ctm))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "768", "colour": "orange", "code": "        self.init_resources(resources)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "769", "colour": "orange", "code": "        self.init_state(ctm)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "770", "colour": "orange", "code": "        self.execute(list_value(streams))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "771", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "772", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "773", "colour": "orange", "code": "    def execute(self, streams):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "774", "colour": "orange", "code": "        try:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "775", "colour": "orange", "code": "            parser = PDFContentParser(streams)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "776", "colour": "orange", "code": "        except PSEOF:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "777", "colour": "orange", "code": "            # empty page\n", "error": "none", "author": "tom@organisms.be"}, {"index": "778", "colour": "orange", "code": "            return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "779", "colour": "orange", "code": "        while 1:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "780", "colour": "orange", "code": "            try:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "781", "colour": "orange", "code": "                (_,obj) = parser.nextobject()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "782", "colour": "orange", "code": "            except PSEOF:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "783", "colour": "orange", "code": "                break\n", "error": "none", "author": "tom@organisms.be"}, {"index": "784", "colour": "orange", "code": "            if isinstance(obj, PSKeyword):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "785", "colour": "orange", "code": "                name = keyword_name(obj)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "786", "colour": "orange", "code": "                method = 'do_%s' % name.replace('*','_a').replace('\"','_w').replace(\"'\",'_q')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "787", "colour": "orange", "code": "                if hasattr(self, method):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "788", "colour": "orange", "code": "                    func = getattr(self, method)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "789", "colour": "orange", "code": "                    nargs = func.func_code.co_argcount-1\n", "error": "none", "author": "tom@organisms.be"}, {"index": "790", "colour": "orange", "code": "                    if nargs:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "791", "colour": "orange", "code": "                        args = self.pop(nargs)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "792", "colour": "orange", "code": "                        if 2 <= self.debug:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "793", "colour": "orange", "code": "                            print >>sys.stderr, 'exec: %s %r' % (name, args)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "794", "colour": "orange", "code": "                        if len(args) == nargs:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "795", "colour": "green", "code": "                            func(*args)\n", "error": "W", "author": "tom@organisms.be"}, {"index": "796", "colour": "orange", "code": "                    else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "797", "colour": "orange", "code": "                        if 2 <= self.debug:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "798", "colour": "orange", "code": "                            print >>sys.stderr, 'exec: %s' % (name)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "799", "colour": "orange", "code": "                        func()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "800", "colour": "orange", "code": "                else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "801", "colour": "orange", "code": "                    if STRICT:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "802", "colour": "orange", "code": "                        raise PDFInterpreterError('Unknown operator: %r' % name)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "803", "colour": "orange", "code": "            else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "804", "colour": "orange", "code": "                self.push(obj)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "805", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "806", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "807", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "808", "colour": "orange", "code": "##  process_pdf\n", "error": "none", "author": "tom@organisms.be"}, {"index": "809", "colour": "orange", "code": "##\n", "error": "none", "author": "tom@organisms.be"}, {"index": "810", "colour": "orange", "code": "class PDFTextExtractionNotAllowed(PDFInterpreterError): pass\n", "error": "none", "author": "tom@organisms.be"}, {"index": "811", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "812", "colour": "blue", "code": "def process_pdf(rsrcmgr, device, fp, pagenos=None, maxpages=0, password='',\n", "error": "R", "author": "tom@organisms.be"}, {"index": "813", "colour": "orange", "code": "                caching=True, check_extractable=True):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "814", "colour": "orange", "code": "    # Create a PDF parser object associated with the file object.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "815", "colour": "orange", "code": "    parser = PDFParser(fp)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "816", "colour": "orange", "code": "    # Create a PDF document object that stores the document structure.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "817", "colour": "orange", "code": "    doc = PDFDocument(caching=caching)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "818", "colour": "orange", "code": "    # Connect the parser and document objects.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "819", "colour": "orange", "code": "    parser.set_document(doc)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "820", "colour": "orange", "code": "    doc.set_parser(parser)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "821", "colour": "orange", "code": "    # Supply the document password for initialization.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "822", "colour": "orange", "code": "    # (If no password is set, give an empty string.)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "823", "colour": "orange", "code": "    doc.initialize(password)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "824", "colour": "orange", "code": "    # Check if the document allows text extraction. If not, abort.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "825", "colour": "orange", "code": "    if check_extractable and not doc.is_extractable:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "826", "colour": "orange", "code": "        raise PDFTextExtractionNotAllowed('Text extraction is not allowed: %r' % fp)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "827", "colour": "orange", "code": "    # Create a PDF interpreter object.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "828", "colour": "orange", "code": "    interpreter = PDFPageInterpreter(rsrcmgr, device)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "829", "colour": "orange", "code": "    # Process each page contained in the document.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "830", "colour": "orange", "code": "    for (pageno,page) in enumerate(doc.get_pages()):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "831", "colour": "orange", "code": "        if pagenos and (pageno not in pagenos): continue\n", "error": "none", "author": "tom@organisms.be"}, {"index": "832", "colour": "orange", "code": "        interpreter.process_page(page)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "833", "colour": "orange", "code": "        if maxpages and maxpages <= pageno+1: break\n", "error": "none", "author": "tom@organisms.be"}, {"index": "834", "colour": "orange", "code": "    return\n", "error": "none", "author": "tom@organisms.be"}]}