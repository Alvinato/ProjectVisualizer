{"path": "/home/asumal/git/cs410/plumbum/plumbum/path/utils.py", "lines": [[{"error": "C", "line": "1", "code": "from __future__ import with_statement\n", "colour": "blue", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "2", "code": "from plumbum.path.base import Path\n", "colour": "black", "author": "Tomer.Filiba@emc.com"}, {"error": "none", "line": "3", "code": "from plumbum.lib import six\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "4", "code": "from plumbum.machines.local import local, LocalPath\n", "colour": "black", "author": "Tomer.Filiba@emc.com"}, {"error": "none", "line": "5", "code": "\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "6", "code": "\n", "colour": "black", "author": "tomerf@il.ibm.com"}, {"error": "none", "line": "7", "code": "def delete(*paths):\n", "colour": "black", "author": "tomerf@il.ibm.com"}, {"error": "none", "line": "8", "code": "    \"\"\"Deletes the given paths. The arguments can be either strings,\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "9", "code": "    :class:`local paths <plumbum.path.local.LocalPath>`,\n", "colour": "black", "author": "Tomer.Filiba@emc.com"}, {"error": "C", "line": "10", "code": "    :class:`remote paths <plumbum.path.remote.RemotePath>`, or iterables of such.\n", "colour": "blue", "author": "Tomer.Filiba@emc.com"}, {"error": "C", "line": "11", "code": "    No error is raised if any of the paths does not exist (it is silently ignored)\n", "colour": "blue", "author": "tomerf@il.ibm.com"}, {"error": "none", "line": "12", "code": "    \"\"\"\n", "colour": "black", "author": "tomerf@il.ibm.com"}, {"error": "C", "line": "13", "code": "    for p in paths:\n", "colour": "blue", "author": "tomerf@il.ibm.com"}, {"error": "none", "line": "14", "code": "        if isinstance(p, Path):\n", "colour": "black", "author": "tomerf@il.ibm.com"}, {"error": "none", "line": "15", "code": "            p.delete()\n", "colour": "black", "author": "tomerf@il.ibm.com"}, {"error": "none", "line": "16", "code": "        elif isinstance(p, six.string_types):\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "17", "code": "            local.path(p).delete()\n", "colour": "black", "author": "tomerf@il.ibm.com"}, {"error": "none", "line": "18", "code": "        elif hasattr(p, \"__iter__\"):\n", "colour": "black", "author": "tomerf@il.ibm.com"}, {"error": "W", "line": "19", "code": "            delete(*p)\n", "colour": "purple", "author": "tomerf@il.ibm.com"}, {"error": "none", "line": "20", "code": "        else:\n", "colour": "black", "author": "tomerf@il.ibm.com"}, {"error": "none", "line": "21", "code": "            raise TypeError(\"Cannot delete %r\" % (p,))\n", "colour": "black", "author": "tomerf@il.ibm.com"}, {"error": "none", "line": "22", "code": "\n", "colour": "black", "author": "tomerf@il.ibm.com"}, {"error": "C", "line": "23", "code": "def _move(src, dst):\n", "colour": "blue", "author": "tomerf@il.ibm.com"}, {"error": "none", "line": "24", "code": "    ret = copy(src, dst)\n", "colour": "black", "author": "tomerf@il.ibm.com"}, {"error": "none", "line": "25", "code": "    delete(src)\n", "colour": "black", "author": "tomerf@il.ibm.com"}, {"error": "none", "line": "26", "code": "    return ret\n", "colour": "black", "author": "tomerf@il.ibm.com"}, {"error": "none", "line": "27", "code": "\n", "colour": "black", "author": "tomerf@il.ibm.com"}, {"error": "none", "line": "28", "code": "def move(src, dst):\n", "colour": "black", "author": "tomerf@il.ibm.com"}, {"error": "C", "line": "29", "code": "    \"\"\"Moves the source path onto the destination path; ``src`` and ``dst`` can be either\n", "colour": "blue", "author": "tomerf@il.ibm.com"}, {"error": "none", "line": "30", "code": "    strings, :class:`LocalPaths <plumbum.path.local.LocalPath>` or\n", "colour": "black", "author": "Tomer.Filiba@emc.com"}, {"error": "C", "line": "31", "code": "    :class:`RemotePath <plumbum.path.remote.RemotePath>`; any combination of the three will\n", "colour": "blue", "author": "Tomer.Filiba@emc.com"}, {"error": "C", "line": "32", "code": "    work. \n", "colour": "blue", "author": "tomerfiliba@gmail.com"}, {"error": "C", "line": "33", "code": "    \n", "colour": "blue", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "34", "code": "    .. versionadded:: 1.3\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "C", "line": "35", "code": "        ``src`` can also be a list of strings/paths, in which case ``dst`` must not exist or be a directory.\n", "colour": "blue", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "36", "code": "    \"\"\"\n", "colour": "black", "author": "tomerf@il.ibm.com"}, {"error": "none", "line": "37", "code": "    if not isinstance(dst, Path):\n", "colour": "black", "author": "tomerf@il.ibm.com"}, {"error": "none", "line": "38", "code": "        dst = local.path(dst)\n", "colour": "black", "author": "tomerf@il.ibm.com"}, {"error": "none", "line": "39", "code": "    if isinstance(src, (tuple, list)):\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "40", "code": "        if not dst.exists():\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "41", "code": "            dst.mkdir()\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "42", "code": "        elif not dst.isdir():\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "C", "line": "43", "code": "            raise ValueError(\"When using multiple sources, dst %r must be a directory\" % (dst,))\n", "colour": "blue", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "44", "code": "        for src2 in src:\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "45", "code": "            move(src2, dst)\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "46", "code": "        return dst\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "47", "code": "    elif not isinstance(src, Path):\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "48", "code": "        src = local.path(src)\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "49", "code": "\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "50", "code": "    if isinstance(src, LocalPath):\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "51", "code": "        if isinstance(dst, LocalPath):\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "52", "code": "            return src.move(dst)\n", "colour": "black", "author": "tomerf@il.ibm.com"}, {"error": "none", "line": "53", "code": "        else:\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "54", "code": "            return _move(src, dst)\n", "colour": "black", "author": "tomerf@il.ibm.com"}, {"error": "none", "line": "55", "code": "    elif isinstance(dst, LocalPath):\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "56", "code": "        return _move(src, dst)\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "E", "line": "57", "code": "    elif src.remote == dst.remote:\n", "colour": "yellow", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "58", "code": "        return src.move(dst)\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "59", "code": "    else:\n", "colour": "black", "author": "tomerf@il.ibm.com"}, {"error": "none", "line": "60", "code": "        return _move(src, dst)\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "61", "code": "\n", "colour": "black", "author": "tomerf@il.ibm.com"}, {"error": "none", "line": "62", "code": "def copy(src, dst):\n", "colour": "black", "author": "tomerf@il.ibm.com"}, {"error": "none", "line": "63", "code": "    \"\"\"\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "C", "line": "64", "code": "    Copy (recursively) the source path onto the destination path; ``src`` and ``dst`` can be\n", "colour": "blue", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "65", "code": "    either strings, :class:`LocalPaths <plumbum.path.local.LocalPath>` or\n", "colour": "black", "author": "Tomer.Filiba@emc.com"}, {"error": "C", "line": "66", "code": "    :class:`RemotePath <plumbum.path.remote.RemotePath>`; any combination of the three will\n", "colour": "blue", "author": "Tomer.Filiba@emc.com"}, {"error": "none", "line": "67", "code": "    work.\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "68", "code": "\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "69", "code": "    .. versionadded:: 1.3\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "C", "line": "70", "code": "        ``src`` can also be a list of strings/paths, in which case ``dst`` must not exist or be a directory.\n", "colour": "blue", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "71", "code": "    \"\"\"\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "72", "code": "    if not isinstance(dst, Path):\n", "colour": "black", "author": "tomerf@il.ibm.com"}, {"error": "none", "line": "73", "code": "        dst = local.path(dst)\n", "colour": "black", "author": "tomerf@il.ibm.com"}, {"error": "none", "line": "74", "code": "    if isinstance(src, (tuple, list)):\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "75", "code": "        if not dst.exists():\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "76", "code": "            dst.mkdir()\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "77", "code": "        elif not dst.isdir():\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "C", "line": "78", "code": "            raise ValueError(\"When using multiple sources, dst %r must be a directory\" % (dst,))\n", "colour": "blue", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "79", "code": "        for src2 in src:\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "80", "code": "            copy(src2, dst)\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "81", "code": "        return dst\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "82", "code": "    elif not isinstance(src, Path):\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "83", "code": "        src = local.path(src)\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "84", "code": "\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "85", "code": "    if isinstance(src, LocalPath):\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "86", "code": "        if isinstance(dst, LocalPath):\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "87", "code": "            return src.copy(dst)\n", "colour": "black", "author": "tomerf@il.ibm.com"}, {"error": "none", "line": "88", "code": "        else:\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "E", "line": "89", "code": "            dst.remote.upload(src, dst)\n", "colour": "yellow", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "90", "code": "            return dst\n", "colour": "black", "author": "tomerf@il.ibm.com"}, {"error": "none", "line": "91", "code": "    elif isinstance(dst, LocalPath):\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "E", "line": "92", "code": "        src.remote.download(src, dst)\n", "colour": "yellow", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "93", "code": "        return dst\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "E", "line": "94", "code": "    elif src.remote == dst.remote:\n", "colour": "yellow", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "95", "code": "        return src.copy(dst)\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "96", "code": "    else:\n", "colour": "black", "author": "tomerf@il.ibm.com"}, {"error": "none", "line": "97", "code": "        with local.tempdir() as tmp:\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "98", "code": "            copy(src, tmp)\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "99", "code": "            copy(tmp / src.basename, dst)\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "100", "code": "        return dst\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "101", "code": "\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "102", "code": "\n", "colour": "black", "author": "tomerfiliba@gmail.com"}]]}