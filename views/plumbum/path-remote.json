{"path": "/home/asumal/git/cs410/plumbum/plumbum/path/remote.py", "lines": [[{"error": "C", "line": "1", "code": "from __future__ import with_statement\n", "colour": "blue", "author": "tomerf@il.ibm.com"}, {"error": "none", "line": "2", "code": "import errno\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "3", "code": "from contextlib import contextmanager\n", "colour": "black", "author": "Tomer.Filiba@emc.com"}, {"error": "none", "line": "4", "code": "from plumbum.path.base import Path, FSUser\n", "colour": "black", "author": "Tomer.Filiba@emc.com"}, {"error": "none", "line": "5", "code": "from plumbum.lib import _setdoc, six\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "6", "code": "from plumbum.commands import shquote\n", "colour": "black", "author": "Tomer.Filiba@emc.com"}, {"error": "none", "line": "7", "code": "\n", "colour": "black", "author": "Tomer.Filiba@emc.com"}, {"error": "none", "line": "8", "code": "\n", "colour": "black", "author": "Tomer.Filiba@emc.com"}, {"error": "R", "line": "9", "code": "class StatRes(object):\n", "colour": "green", "author": "Tomer.Filiba@emc.com"}, {"error": "none", "line": "10", "code": "    \"\"\"POSIX-like stat result\"\"\"\n", "colour": "black", "author": "Tomer.Filiba@emc.com"}, {"error": "none", "line": "11", "code": "    def __init__(self, tup):\n", "colour": "black", "author": "Tomer.Filiba@emc.com"}, {"error": "none", "line": "12", "code": "        self._tup = tuple(tup)\n", "colour": "black", "author": "Tomer.Filiba@emc.com"}, {"error": "none", "line": "13", "code": "    def __getitem__(self, index):\n", "colour": "black", "author": "Tomer.Filiba@emc.com"}, {"error": "none", "line": "14", "code": "        return self._tup[index]\n", "colour": "black", "author": "Tomer.Filiba@emc.com"}, {"error": "none", "line": "15", "code": "    st_mode = mode = property(lambda self: self[0])\n", "colour": "black", "author": "Tomer.Filiba@emc.com"}, {"error": "none", "line": "16", "code": "    st_ino = ino = property(lambda self: self[1])\n", "colour": "black", "author": "Tomer.Filiba@emc.com"}, {"error": "none", "line": "17", "code": "    st_dev = dev = property(lambda self: self[2])\n", "colour": "black", "author": "Tomer.Filiba@emc.com"}, {"error": "none", "line": "18", "code": "    st_nlink = nlink = property(lambda self: self[3])\n", "colour": "black", "author": "Tomer.Filiba@emc.com"}, {"error": "none", "line": "19", "code": "    st_uid = uid = property(lambda self: self[4])\n", "colour": "black", "author": "Tomer.Filiba@emc.com"}, {"error": "none", "line": "20", "code": "    st_gid = gid = property(lambda self: self[5])\n", "colour": "black", "author": "Tomer.Filiba@emc.com"}, {"error": "none", "line": "21", "code": "    st_size = size = property(lambda self: self[6])\n", "colour": "black", "author": "Tomer.Filiba@emc.com"}, {"error": "none", "line": "22", "code": "    st_atime = atime = property(lambda self: self[7])\n", "colour": "black", "author": "Tomer.Filiba@emc.com"}, {"error": "none", "line": "23", "code": "    st_mtime = mtime = property(lambda self: self[8])\n", "colour": "black", "author": "Tomer.Filiba@emc.com"}, {"error": "none", "line": "24", "code": "    st_ctime = ctime = property(lambda self: self[9])\n", "colour": "black", "author": "Tomer.Filiba@emc.com"}, {"error": "none", "line": "25", "code": "\n", "colour": "black", "author": "tomerf@il.ibm.com"}, {"error": "none", "line": "26", "code": "\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "R", "line": "27", "code": "class RemotePath(Path):\n", "colour": "green", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "28", "code": "    \"\"\"The class implementing remote-machine paths\"\"\"\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "29", "code": "\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "30", "code": "    __slots__ = [\"_path\", \"remote\"]\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "31", "code": "    def __init__(self, remote, *parts):\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "32", "code": "        if not parts:\n", "colour": "black", "author": "Tomer.Filiba@emc.com"}, {"error": "none", "line": "33", "code": "            raise TypeError(\"At least one path part is require (none given)\")\n", "colour": "black", "author": "Tomer.Filiba@emc.com"}, {"error": "none", "line": "34", "code": "        self.remote = remote\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "35", "code": "        windows = (self.remote.uname.lower() == \"windows\")\n", "colour": "black", "author": "tomerf@il.ibm.com"}, {"error": "none", "line": "36", "code": "        normed = []\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "37", "code": "        parts = (self.remote.cwd,) + parts\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "C", "line": "38", "code": "        for p in parts:\n", "colour": "blue", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "39", "code": "            if windows:\n", "colour": "black", "author": "tomerf@il.ibm.com"}, {"error": "none", "line": "40", "code": "                plist = str(p).replace(\"\\\\\", \"/\").split(\"/\")\n", "colour": "black", "author": "tomerf@il.ibm.com"}, {"error": "none", "line": "41", "code": "            else:\n", "colour": "black", "author": "tomerf@il.ibm.com"}, {"error": "none", "line": "42", "code": "                plist = str(p).split(\"/\")\n", "colour": "black", "author": "tomerf@il.ibm.com"}, {"error": "none", "line": "43", "code": "            if not plist[0]:\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "44", "code": "                plist.pop(0)\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "45", "code": "                del normed[:]\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "46", "code": "            for item in plist:\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "47", "code": "                if item == \"\" or item == \".\":\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "48", "code": "                    continue\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "49", "code": "                if item == \"..\":\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "50", "code": "                    if normed:\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "51", "code": "                        normed.pop(-1)\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "52", "code": "                else:\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "53", "code": "                    normed.append(item)\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "54", "code": "        if windows:\n", "colour": "black", "author": "tomerf@il.ibm.com"}, {"error": "E", "line": "55", "code": "            self.CASE_SENSITIVE = False\n", "colour": "yellow", "author": "tomerf@il.ibm.com"}, {"error": "none", "line": "56", "code": "            self._path = \"\\\\\".join(normed)\n", "colour": "black", "author": "tomerf@il.ibm.com"}, {"error": "none", "line": "57", "code": "        else:\n", "colour": "black", "author": "tomerf@il.ibm.com"}, {"error": "none", "line": "58", "code": "            self._path = \"/\" + \"/\".join(normed)\n", "colour": "black", "author": "tomerf@il.ibm.com"}, {"error": "none", "line": "59", "code": "\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "60", "code": "    def _form(self, *parts):\n", "colour": "black", "author": "Tomer.Filiba@emc.com"}, {"error": "none", "line": "61", "code": "        return RemotePath(self.remote, *parts)\n", "colour": "black", "author": "Tomer.Filiba@emc.com"}, {"error": "none", "line": "62", "code": "\n", "colour": "black", "author": "Tomer.Filiba@emc.com"}, {"error": "none", "line": "63", "code": "    def __str__(self):\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "64", "code": "        return self._path\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "65", "code": "\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "66", "code": "    @property\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "67", "code": "    @_setdoc(Path)\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "68", "code": "    def basename(self):\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "69", "code": "        if not \"/\" in str(self):\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "70", "code": "            return str(self)\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "71", "code": "        return str(self).rsplit(\"/\", 1)[1]\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "72", "code": "\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "73", "code": "    @property\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "74", "code": "    @_setdoc(Path)\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "75", "code": "    def dirname(self):\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "76", "code": "        if not \"/\" in str(self):\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "77", "code": "            return str(self)\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "78", "code": "        return self.__class__(self.remote, str(self).rsplit(\"/\", 1)[0])\n", "colour": "black", "author": "njharman@gmail.com"}, {"error": "none", "line": "79", "code": "\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "80", "code": "    @property\n", "colour": "black", "author": "njharman@gmail.com"}, {"error": "none", "line": "81", "code": "    @_setdoc(Path)\n", "colour": "black", "author": "njharman@gmail.com"}, {"error": "none", "line": "82", "code": "    def uid(self):\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "W", "line": "83", "code": "        uid, name = self.remote._path_getuid(self)\n", "colour": "purple", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "84", "code": "        return FSUser(int(uid), name)\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "85", "code": "\n", "colour": "black", "author": "njharman@gmail.com"}, {"error": "none", "line": "86", "code": "    @property\n", "colour": "black", "author": "njharman@gmail.com"}, {"error": "none", "line": "87", "code": "    @_setdoc(Path)\n", "colour": "black", "author": "njharman@gmail.com"}, {"error": "none", "line": "88", "code": "    def gid(self):\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "W", "line": "89", "code": "        gid, name = self.remote._path_getgid(self)\n", "colour": "purple", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "90", "code": "        return FSUser(int(gid), name)\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "91", "code": "\n", "colour": "black", "author": "njharman@gmail.com"}, {"error": "none", "line": "92", "code": "    def _get_info(self):\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "93", "code": "        return (self.remote, self._path)\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "94", "code": "\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "95", "code": "    @_setdoc(Path)\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "96", "code": "    def join(self, *parts):\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "97", "code": "        return RemotePath(self.remote, self, *parts)\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "98", "code": "\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "99", "code": "    @_setdoc(Path)\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "100", "code": "    def list(self):\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "101", "code": "        if not self.isdir():\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "102", "code": "            return []\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "W", "line": "103", "code": "        return [self.join(fn) for fn in self.remote._path_listdir(self)]\n", "colour": "purple", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "104", "code": "\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "105", "code": "    @_setdoc(Path)\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "106", "code": "    def isdir(self):\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "W", "line": "107", "code": "        res = self.remote._path_stat(self)\n", "colour": "purple", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "108", "code": "        if not res:\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "109", "code": "            return False\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "110", "code": "        return res.text_mode == \"directory\"\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "111", "code": "\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "112", "code": "    @_setdoc(Path)\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "113", "code": "    def isfile(self):\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "W", "line": "114", "code": "        res = self.remote._path_stat(self)\n", "colour": "purple", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "115", "code": "        if not res:\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "116", "code": "            return False\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "117", "code": "        return res.text_mode in (\"regular file\", \"regular empty file\")\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "118", "code": "\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "119", "code": "    @_setdoc(Path)\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "120", "code": "    def islink(self):\n", "colour": "black", "author": "antoine.dechaume@sogeti.com"}, {"error": "W", "line": "121", "code": "        res = self.remote._path_stat(self)\n", "colour": "purple", "author": "antoine.dechaume@sogeti.com"}, {"error": "none", "line": "122", "code": "        if not res:\n", "colour": "black", "author": "antoine.dechaume@sogeti.com"}, {"error": "none", "line": "123", "code": "            return False\n", "colour": "black", "author": "antoine.dechaume@sogeti.com"}, {"error": "none", "line": "124", "code": "        return res.text_mode == \"symbolic link\"\n", "colour": "black", "author": "antoine.dechaume@sogeti.com"}, {"error": "none", "line": "125", "code": "\n", "colour": "black", "author": "antoine.dechaume@sogeti.com"}, {"error": "none", "line": "126", "code": "    @_setdoc(Path)\n", "colour": "black", "author": "antoine.dechaume@sogeti.com"}, {"error": "none", "line": "127", "code": "    def exists(self):\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "W", "line": "128", "code": "        return self.remote._path_stat(self) is not None\n", "colour": "purple", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "129", "code": "\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "130", "code": "    @_setdoc(Path)\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "131", "code": "    def stat(self):\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "W", "line": "132", "code": "        res = self.remote._path_stat(self)\n", "colour": "purple", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "133", "code": "        if res is None:\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "134", "code": "            raise OSError(errno.ENOENT)\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "135", "code": "        return res\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "136", "code": "\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "137", "code": "    @_setdoc(Path)\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "138", "code": "    def glob(self, pattern):\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "W", "line": "139", "code": "        return [RemotePath(self.remote, m) for m in self.remote._path_glob(self, pattern)]\n", "colour": "purple", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "140", "code": "\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "141", "code": "    @_setdoc(Path)\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "142", "code": "    def delete(self):\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "143", "code": "        if not self.exists():\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "144", "code": "            return\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "W", "line": "145", "code": "        self.remote._path_delete(self)\n", "colour": "purple", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "146", "code": "\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "147", "code": "    unlink = delete\n", "colour": "black", "author": "antoine.dechaume@sogeti.com"}, {"error": "none", "line": "148", "code": "\n", "colour": "black", "author": "antoine.dechaume@sogeti.com"}, {"error": "none", "line": "149", "code": "    @_setdoc(Path)\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "150", "code": "    def move(self, dst):\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "151", "code": "        if isinstance(dst, RemotePath):\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "152", "code": "            if dst.remote is not self.remote:\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "153", "code": "                raise TypeError(\"dst points to a different remote machine\")\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "154", "code": "        elif not isinstance(dst, six.string_types):\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "C", "line": "155", "code": "            raise TypeError(\"dst must be a string or a RemotePath (to the same remote machine), \"\n", "colour": "blue", "author": "tomerfiliba@gmail.com"}, {"error": "C", "line": "156", "code": "                \"got %r\" % (dst,))\n", "colour": "blue", "author": "tomerfiliba@gmail.com"}, {"error": "W", "line": "157", "code": "        self.remote._path_move(self, dst)\n", "colour": "purple", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "158", "code": "\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "159", "code": "    @_setdoc(Path)\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "C", "line": "160", "code": "    def copy(self, dst, override = False):\n", "colour": "blue", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "161", "code": "        if isinstance(dst, RemotePath):\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "162", "code": "            if dst.remote is not self.remote:\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "163", "code": "                raise TypeError(\"dst points to a different remote machine\")\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "164", "code": "        elif not isinstance(dst, six.string_types):\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "C", "line": "165", "code": "            raise TypeError(\"dst must be a string or a RemotePath (to the same remote machine), \"\n", "colour": "blue", "author": "tomerfiliba@gmail.com"}, {"error": "C", "line": "166", "code": "                \"got %r\" % (dst,))\n", "colour": "blue", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "167", "code": "        if override:\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "168", "code": "            if isinstance(dst, six.string_types):\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "169", "code": "                dst = RemotePath(self.remote, dst)\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "E", "line": "170", "code": "            dst.remove()\n", "colour": "yellow", "author": "tanzer@swing.co.at"}, {"error": "W", "line": "171", "code": "        self.remote._path_copy(self, dst)\n", "colour": "purple", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "172", "code": "\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "173", "code": "    @_setdoc(Path)\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "174", "code": "    def mkdir(self):\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "W", "line": "175", "code": "        self.remote._path_mkdir(self)\n", "colour": "purple", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "176", "code": "\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "177", "code": "    @_setdoc(Path)\n", "colour": "black", "author": "tanzer@swing.co.at"}, {"error": "none", "line": "178", "code": "    def read(self, encoding=None):\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "W", "line": "179", "code": "        data = self.remote._path_read(self)\n", "colour": "purple", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "180", "code": "        if encoding:\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "181", "code": "            data = data.decode(encoding)\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "182", "code": "        return data\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "183", "code": "    @_setdoc(Path)\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "184", "code": "    def write(self, data, encoding=None):\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "185", "code": "        if encoding:\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "186", "code": "            data = data.encode(encoding)\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "W", "line": "187", "code": "        self.remote._path_write(self, data)\n", "colour": "purple", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "188", "code": "\n", "colour": "black", "author": "njharman@gmail.com"}, {"error": "none", "line": "189", "code": "    @_setdoc(Path)\n", "colour": "black", "author": "njharman@gmail.com"}, {"error": "C", "line": "190", "code": "    def chown(self, owner = None, group = None, recursive = None):\n", "colour": "blue", "author": "tomer.filiba@emc.com"}, {"error": "W", "line": "191", "code": "        self.remote._path_chown(self, owner, group, self.isdir() if recursive is None else recursive)\n", "colour": "purple", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "192", "code": "    @_setdoc(Path)\n", "colour": "black", "author": "obutovich@gmail.com"}, {"error": "none", "line": "193", "code": "    def chmod(self, mode):\n", "colour": "black", "author": "obutovich@gmail.com"}, {"error": "W", "line": "194", "code": "        self.remote._path_chmod(mode, self)\n", "colour": "purple", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "195", "code": "\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "196", "code": "    @_setdoc(Path)\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "C", "line": "197", "code": "    def access(self, mode = 0):\n", "colour": "blue", "author": "tomer.filiba@emc.com"}, {"error": "none", "line": "198", "code": "        mode = self._access_mode_to_flags(mode)\n", "colour": "black", "author": "tomer.filiba@emc.com"}, {"error": "W", "line": "199", "code": "        res = self.remote._path_stat(self)\n", "colour": "purple", "author": "drennalls@gmail.com"}, {"error": "none", "line": "200", "code": "        if res is None:\n", "colour": "black", "author": "tomer.filiba@emc.com"}, {"error": "none", "line": "201", "code": "            return False\n", "colour": "black", "author": "tomer.filiba@emc.com"}, {"error": "none", "line": "202", "code": "        mask = res.st_mode & 0x1ff\n", "colour": "black", "author": "tomer.filiba@emc.com"}, {"error": "none", "line": "203", "code": "        return ((mask >> 6) & mode) or ((mask >> 3) & mode)\n", "colour": "black", "author": "tomer.filiba@emc.com"}, {"error": "none", "line": "204", "code": "\n", "colour": "black", "author": "tomer.filiba@emc.com"}, {"error": "none", "line": "205", "code": "    @_setdoc(Path)\n", "colour": "black", "author": "tomer.filiba@emc.com"}, {"error": "none", "line": "206", "code": "    def link(self, dst):\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "207", "code": "        if isinstance(dst, RemotePath):\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "208", "code": "            if dst.remote is not self.remote:\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "209", "code": "                raise TypeError(\"dst points to a different remote machine\")\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "210", "code": "        elif not isinstance(dst, six.string_types):\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "C", "line": "211", "code": "            raise TypeError(\"dst must be a string or a RemotePath (to the same remote machine), \"\n", "colour": "blue", "author": "tomerfiliba@gmail.com"}, {"error": "C", "line": "212", "code": "                \"got %r\" % (dst,))\n", "colour": "blue", "author": "tomerfiliba@gmail.com"}, {"error": "W", "line": "213", "code": "        self.remote._path_link(self, dst, False)\n", "colour": "purple", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "214", "code": "\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "215", "code": "    @_setdoc(Path)\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "216", "code": "    def symlink(self, dst):\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "217", "code": "        if isinstance(dst, RemotePath):\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "218", "code": "            if dst.remote is not self.remote:\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "219", "code": "                raise TypeError(\"dst points to a different remote machine\")\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "220", "code": "        elif not isinstance(dst, six.string_types):\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "C", "line": "221", "code": "            raise TypeError(\"dst must be a string or a RemotePath (to the same remote machine), \"\n", "colour": "blue", "author": "tomerfiliba@gmail.com"}, {"error": "C", "line": "222", "code": "                \"got %r\" % (dst,))\n", "colour": "blue", "author": "tomerfiliba@gmail.com"}, {"error": "W", "line": "223", "code": "        self.remote._path_link(self, dst, True)\n", "colour": "purple", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "224", "code": "\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "225", "code": "\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "R", "line": "226", "code": "class RemoteWorkdir(RemotePath):\n", "colour": "green", "author": "Tomer.Filiba@emc.com"}, {"error": "none", "line": "227", "code": "    \"\"\"Remote working directory manipulator\"\"\"\n", "colour": "black", "author": "Tomer.Filiba@emc.com"}, {"error": "none", "line": "228", "code": "\n", "colour": "black", "author": "Tomer.Filiba@emc.com"}, {"error": "W", "line": "229", "code": "    def __init__(self, remote):\n", "colour": "purple", "author": "Tomer.Filiba@emc.com"}, {"error": "none", "line": "230", "code": "        self.remote = remote\n", "colour": "black", "author": "Tomer.Filiba@emc.com"}, {"error": "W", "line": "231", "code": "        self._path = self.remote._session.run(\"pwd\")[1].strip()\n", "colour": "purple", "author": "Tomer.Filiba@emc.com"}, {"error": "none", "line": "232", "code": "    def __hash__(self):\n", "colour": "black", "author": "Tomer.Filiba@emc.com"}, {"error": "none", "line": "233", "code": "        raise TypeError(\"unhashable type\")\n", "colour": "black", "author": "Tomer.Filiba@emc.com"}, {"error": "none", "line": "234", "code": "\n", "colour": "black", "author": "Tomer.Filiba@emc.com"}, {"error": "none", "line": "235", "code": "    def chdir(self, newdir):\n", "colour": "black", "author": "Tomer.Filiba@emc.com"}, {"error": "none", "line": "236", "code": "        \"\"\"Changes the current working directory to the given one\"\"\"\n", "colour": "black", "author": "Tomer.Filiba@emc.com"}, {"error": "W", "line": "237", "code": "        self.remote._session.run(\"cd %s\" % (shquote(newdir),))\n", "colour": "purple", "author": "Tomer.Filiba@emc.com"}, {"error": "W", "line": "238", "code": "        self._path = self.remote._session.run(\"pwd\")[1].strip()\n", "colour": "purple", "author": "Tomer.Filiba@emc.com"}, {"error": "none", "line": "239", "code": "\n", "colour": "black", "author": "Tomer.Filiba@emc.com"}, {"error": "none", "line": "240", "code": "    def getpath(self):\n", "colour": "black", "author": "Tomer.Filiba@emc.com"}, {"error": "none", "line": "241", "code": "        \"\"\"Returns the current working directory as a\n", "colour": "black", "author": "Tomer.Filiba@emc.com"}, {"error": "none", "line": "242", "code": "        `remote path <plumbum.path.remote.RemotePath>` object\"\"\"\n", "colour": "black", "author": "Tomer.Filiba@emc.com"}, {"error": "none", "line": "243", "code": "        return RemotePath(self.remote, self)\n", "colour": "black", "author": "Tomer.Filiba@emc.com"}, {"error": "none", "line": "244", "code": "\n", "colour": "black", "author": "Tomer.Filiba@emc.com"}, {"error": "none", "line": "245", "code": "    @contextmanager\n", "colour": "black", "author": "Tomer.Filiba@emc.com"}, {"error": "none", "line": "246", "code": "    def __call__(self, newdir):\n", "colour": "black", "author": "Tomer.Filiba@emc.com"}, {"error": "C", "line": "247", "code": "        \"\"\"A context manager used to ``chdir`` into a directory and then ``chdir`` back to\n", "colour": "blue", "author": "Tomer.Filiba@emc.com"}, {"error": "none", "line": "248", "code": "        the previous location; much like ``pushd``/``popd``.\n", "colour": "black", "author": "Tomer.Filiba@emc.com"}, {"error": "none", "line": "249", "code": "\n", "colour": "black", "author": "Tomer.Filiba@emc.com"}, {"error": "none", "line": "250", "code": "        :param newdir: The destination director (a string or a\n", "colour": "black", "author": "Tomer.Filiba@emc.com"}, {"error": "none", "line": "251", "code": "                       :class:`RemotePath <plumbum.path.remote.RemotePath>`)\n", "colour": "black", "author": "Tomer.Filiba@emc.com"}, {"error": "none", "line": "252", "code": "        \"\"\"\n", "colour": "black", "author": "Tomer.Filiba@emc.com"}, {"error": "none", "line": "253", "code": "        prev = self._path\n", "colour": "black", "author": "Tomer.Filiba@emc.com"}, {"error": "none", "line": "254", "code": "        self.chdir(newdir)\n", "colour": "black", "author": "Tomer.Filiba@emc.com"}, {"error": "none", "line": "255", "code": "        try:\n", "colour": "black", "author": "Tomer.Filiba@emc.com"}, {"error": "none", "line": "256", "code": "            yield\n", "colour": "black", "author": "Tomer.Filiba@emc.com"}, {"error": "none", "line": "257", "code": "        finally:\n", "colour": "black", "author": "Tomer.Filiba@emc.com"}, {"error": "none", "line": "258", "code": "            self.chdir(prev)\n", "colour": "black", "author": "Tomer.Filiba@emc.com"}, {"error": "none", "line": "259", "code": "\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "260", "code": "\n", "colour": "black", "author": "tomerfiliba@gmail.com"}, {"error": "none", "line": "261", "code": "\n", "colour": "black", "author": "obutovich@gmail.com"}]]}