{"path": "/home/asumal/git/cs410/plumbum/plumbum/path/local.py", "lines": [{"index": "1", "colour": "orange", "code": "from __future__ import with_statement\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "2", "colour": "orange", "code": "import os\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "3", "colour": "orange", "code": "import sys\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "4", "colour": "orange", "code": "import glob\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "5", "colour": "orange", "code": "import shutil\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "6", "colour": "orange", "code": "import errno\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "7", "colour": "orange", "code": "import logging\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "8", "colour": "orange", "code": "from contextlib import contextmanager\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "9", "colour": "orange", "code": "from plumbum.lib import _setdoc, IS_WIN32\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "10", "colour": "orange", "code": "from plumbum.path.base import Path, FSUser\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "11", "colour": "orange", "code": "from plumbum.path.remote import RemotePath\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "12", "colour": "orange", "code": "try:\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "13", "colour": "orange", "code": "    from pwd import getpwuid, getpwnam\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "14", "colour": "orange", "code": "    from grp import getgrgid, getgrnam\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "15", "colour": "orange", "code": "except ImportError:\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "16", "colour": "green", "code": "    def getpwuid(x):\n", "error": "W", "author": "Tomer.Filiba@emc.com"}, {"index": "17", "colour": "orange", "code": "        return (None,)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "18", "colour": "green", "code": "    def getgrgid(x):\n", "error": "W", "author": "Tomer.Filiba@emc.com"}, {"index": "19", "colour": "orange", "code": "        return (None,)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "20", "colour": "green", "code": "    def getpwnam(x):\n", "error": "W", "author": "Tomer.Filiba@emc.com"}, {"index": "21", "colour": "orange", "code": "        raise OSError(\"`getpwnam` not supported\")\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "22", "colour": "green", "code": "    def getgrnam(x):\n", "error": "W", "author": "Tomer.Filiba@emc.com"}, {"index": "23", "colour": "orange", "code": "        raise OSError(\"`getgrnam` not supported\")\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "24", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "25", "colour": "orange", "code": "logger = logging.getLogger(\"plumbum.local\")\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "26", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "27", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "28", "colour": "orange", "code": "#===================================================================================================\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "29", "colour": "orange", "code": "# Local Paths\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "30", "colour": "orange", "code": "#===================================================================================================\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "31", "colour": "blue", "code": "class LocalPath(Path):\n", "error": "R", "author": "Tomer.Filiba@emc.com"}, {"index": "32", "colour": "orange", "code": "    \"\"\"The class implementing local-machine paths\"\"\"\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "33", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "34", "colour": "orange", "code": "    __slots__ = [\"_path\"]\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "35", "colour": "orange", "code": "    CASE_SENSITIVE = not IS_WIN32\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "36", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "37", "colour": "orange", "code": "    def __init__(self, *parts):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "38", "colour": "orange", "code": "        if not parts:\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "39", "colour": "orange", "code": "            raise TypeError(\"At least one path part is require (none given)\")\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "40", "colour": "orange", "code": "        if any(isinstance(path, RemotePath) for path in parts):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "41", "colour": "orange", "code": "            raise TypeError(\"LocalPath cannot be constructed from %r\" % (parts,))\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "42", "colour": "green", "code": "        self._path = os.path.normpath(os.path.join(*(str(p) for p in parts)))\n", "error": "W", "author": "Tomer.Filiba@emc.com"}, {"index": "43", "colour": "orange", "code": "    def __new__(cls, *parts):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "44", "colour": "orange", "code": "        if len(parts) == 1 and \\\n", "error": "none", "author": "boolegue@yahoo.com"}, {"index": "45", "colour": "orange", "code": "                isinstance(parts[0], cls) and \\\n", "error": "none", "author": "boolegue@yahoo.com"}, {"index": "46", "colour": "orange", "code": "                not isinstance(parts[0], LocalWorkdir):\n", "error": "none", "author": "boolegue@yahoo.com"}, {"index": "47", "colour": "orange", "code": "            return parts[0]\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "48", "colour": "orange", "code": "        return object.__new__(cls)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "49", "colour": "orange", "code": "    def __str__(self):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "50", "colour": "orange", "code": "        return self._path\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "51", "colour": "orange", "code": "    def _get_info(self):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "52", "colour": "orange", "code": "        return self._path\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "53", "colour": "orange", "code": "    def __getstate__(self):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "54", "colour": "orange", "code": "        return {\"_path\" : self._path}\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "55", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "56", "colour": "orange", "code": "    def _form(self, *parts):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "57", "colour": "orange", "code": "        return LocalPath(*parts)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "58", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "59", "colour": "orange", "code": "    @property\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "60", "colour": "orange", "code": "    @_setdoc(Path)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "61", "colour": "orange", "code": "    def basename(self):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "62", "colour": "orange", "code": "        return os.path.basename(str(self))\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "63", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "64", "colour": "orange", "code": "    @property\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "65", "colour": "orange", "code": "    @_setdoc(Path)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "66", "colour": "orange", "code": "    def dirname(self):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "67", "colour": "orange", "code": "        return LocalPath(os.path.dirname(str(self)))\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "68", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "69", "colour": "orange", "code": "    @property\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "70", "colour": "orange", "code": "    @_setdoc(Path)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "71", "colour": "orange", "code": "    def uid(self):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "72", "colour": "orange", "code": "        uid = self.stat().st_uid\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "73", "colour": "orange", "code": "        name = getpwuid(uid)[0]\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "74", "colour": "orange", "code": "        return FSUser(uid, name)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "75", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "76", "colour": "orange", "code": "    @property\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "77", "colour": "orange", "code": "    @_setdoc(Path)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "78", "colour": "orange", "code": "    def gid(self):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "79", "colour": "orange", "code": "        gid = self.stat().st_gid\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "80", "colour": "orange", "code": "        name = getgrgid(gid)[0]\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "81", "colour": "orange", "code": "        return FSUser(gid, name)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "82", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "83", "colour": "orange", "code": "    @_setdoc(Path)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "84", "colour": "orange", "code": "    def join(self, *others):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "85", "colour": "orange", "code": "        return LocalPath(self, *others)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "86", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "87", "colour": "orange", "code": "    @_setdoc(Path)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "88", "colour": "orange", "code": "    def list(self):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "89", "colour": "orange", "code": "        return [self / fn for fn in os.listdir(str(self))]\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "90", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "91", "colour": "orange", "code": "    @_setdoc(Path)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "92", "colour": "orange", "code": "    def isdir(self):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "93", "colour": "orange", "code": "        return os.path.isdir(str(self))\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "94", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "95", "colour": "orange", "code": "    @_setdoc(Path)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "96", "colour": "orange", "code": "    def isfile(self):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "97", "colour": "orange", "code": "        return os.path.isfile(str(self))\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "98", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "99", "colour": "orange", "code": "    @_setdoc(Path)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "100", "colour": "orange", "code": "    def islink(self):\n", "error": "none", "author": "antoine.dechaume@sogeti.com"}, {"index": "101", "colour": "orange", "code": "        return os.path.islink(str(self))\n", "error": "none", "author": "antoine.dechaume@sogeti.com"}, {"index": "102", "colour": "orange", "code": "\n", "error": "none", "author": "antoine.dechaume@sogeti.com"}, {"index": "103", "colour": "orange", "code": "    @_setdoc(Path)\n", "error": "none", "author": "antoine.dechaume@sogeti.com"}, {"index": "104", "colour": "orange", "code": "    def exists(self):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "105", "colour": "orange", "code": "        return os.path.exists(str(self))\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "106", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "107", "colour": "orange", "code": "    @_setdoc(Path)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "108", "colour": "orange", "code": "    def stat(self):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "109", "colour": "orange", "code": "        return os.stat(str(self))\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "110", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "111", "colour": "orange", "code": "    @_setdoc(Path)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "112", "colour": "orange", "code": "    def glob(self, pattern):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "113", "colour": "orange", "code": "        return [LocalPath(fn) for fn in glob.glob(str(self / pattern))]\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "114", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "115", "colour": "orange", "code": "    @_setdoc(Path)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "116", "colour": "orange", "code": "    def delete(self):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "117", "colour": "orange", "code": "        if not self.exists():\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "118", "colour": "orange", "code": "            return\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "119", "colour": "orange", "code": "        if self.isdir():\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "120", "colour": "orange", "code": "            shutil.rmtree(str(self))\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "121", "colour": "orange", "code": "        else:\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "122", "colour": "orange", "code": "            try:\n", "error": "none", "author": "antoine.dechaume@sogeti.com"}, {"index": "123", "colour": "orange", "code": "                os.remove(str(self))\n", "error": "none", "author": "antoine.dechaume@sogeti.com"}, {"index": "124", "colour": "orange", "code": "            except OSError:\n", "error": "none", "author": "antoine.dechaume@sogeti.com"}, {"index": "125", "colour": "orange", "code": "                # file might already been removed (a race with other threads/processes)\n", "error": "none", "author": "antoine.dechaume@sogeti.com"}, {"index": "126", "colour": "orange", "code": "                _, ex, _ = sys.exc_info()\n", "error": "none", "author": "antoine.dechaume@sogeti.com"}, {"index": "127", "colour": "orange", "code": "                if ex.errno != errno.ENOENT:\n", "error": "none", "author": "antoine.dechaume@sogeti.com"}, {"index": "128", "colour": "orange", "code": "                    raise\n", "error": "none", "author": "antoine.dechaume@sogeti.com"}, {"index": "129", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "130", "colour": "orange", "code": "    @_setdoc(Path)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "131", "colour": "orange", "code": "    def move(self, dst):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "132", "colour": "orange", "code": "        if isinstance(dst, RemotePath):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "133", "colour": "orange", "code": "            raise TypeError(\"Cannot move local path %s to %r\" % (self, dst))\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "134", "colour": "orange", "code": "        shutil.move(str(self), str(dst))\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "135", "colour": "orange", "code": "        return LocalPath(dst)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "136", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "137", "colour": "orange", "code": "    @_setdoc(Path)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "138", "colour": "orange", "code": "    def copy(self, dst, override = False):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "139", "colour": "orange", "code": "        if isinstance(dst, RemotePath):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "140", "colour": "orange", "code": "            raise TypeError(\"Cannot copy local path %s to %r\" % (self, dst))\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "141", "colour": "orange", "code": "        dst = LocalPath(dst)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "142", "colour": "orange", "code": "        if override:\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "143", "colour": "orange", "code": "            dst.delete()\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "144", "colour": "orange", "code": "        if self.isdir():\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "145", "colour": "orange", "code": "            shutil.copytree(str(self), str(dst))\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "146", "colour": "orange", "code": "        else:\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "147", "colour": "orange", "code": "            dst_dir = LocalPath(dst).dirname\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "148", "colour": "orange", "code": "            if not dst_dir.exists():\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "149", "colour": "orange", "code": "                dst_dir.mkdir()\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "150", "colour": "orange", "code": "            shutil.copy2(str(self), str(dst))\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "151", "colour": "orange", "code": "        return dst\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "152", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "153", "colour": "orange", "code": "    @_setdoc(Path)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "154", "colour": "orange", "code": "    def mkdir(self):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "155", "colour": "orange", "code": "        if not self.exists():\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "156", "colour": "orange", "code": "            try:\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "157", "colour": "orange", "code": "                os.makedirs(str(self))\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "158", "colour": "orange", "code": "            except OSError:\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "159", "colour": "orange", "code": "                # directory might already exist (a race with other threads/processes)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "160", "colour": "orange", "code": "                _, ex, _ = sys.exc_info()\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "161", "colour": "orange", "code": "                if ex.errno != errno.EEXIST:\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "162", "colour": "orange", "code": "                    raise\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "163", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "164", "colour": "orange", "code": "    @_setdoc(Path)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "165", "colour": "orange", "code": "    def open(self, mode = \"rb\"):\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "166", "colour": "orange", "code": "        return open(str(self), mode)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "167", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "168", "colour": "orange", "code": "    @_setdoc(Path)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "169", "colour": "orange", "code": "    def read(self, encoding=None):\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "170", "colour": "orange", "code": "        with self.open(\"rb\") as f:\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "171", "colour": "orange", "code": "            data = f.read()\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "172", "colour": "orange", "code": "            if encoding:\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "173", "colour": "orange", "code": "                data = data.decode(encoding)\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "174", "colour": "orange", "code": "            return data\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "175", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "176", "colour": "orange", "code": "    @_setdoc(Path)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "177", "colour": "orange", "code": "    def write(self, data, encoding=None):\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "178", "colour": "orange", "code": "        if encoding:\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "179", "colour": "orange", "code": "            data = data.encode(encoding)\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "180", "colour": "orange", "code": "        with self.open(\"wb\") as f:\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "181", "colour": "orange", "code": "            f.write(data)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "182", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "183", "colour": "orange", "code": "    @_setdoc(Path)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "184", "colour": "orange", "code": "    def chown(self, owner = None, group = None, recursive = None):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "185", "colour": "orange", "code": "        if not hasattr(os, \"chown\"):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "186", "colour": "orange", "code": "            raise OSError(\"os.chown() not supported\")\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "187", "colour": "orange", "code": "        uid = self.uid if owner is None else (owner if isinstance(owner, int) else getpwnam(owner)[2])\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "188", "colour": "orange", "code": "        gid = self.gid if group is None else (group if isinstance(group, int) else getgrnam(group)[2])\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "189", "colour": "orange", "code": "        os.chown(str(self), uid, gid)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "190", "colour": "orange", "code": "        if recursive or (recursive is None and self.isdir()):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "191", "colour": "orange", "code": "            for subpath in self.walk():\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "192", "colour": "orange", "code": "                os.chown(str(subpath), uid, gid)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "193", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "194", "colour": "orange", "code": "    @_setdoc(Path)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "195", "colour": "orange", "code": "    def chmod(self, mode):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "196", "colour": "orange", "code": "        if not hasattr(os, \"chmod\"):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "197", "colour": "orange", "code": "            raise OSError(\"os.chmod() not supported\")\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "198", "colour": "orange", "code": "        os.chmod(str(self), mode)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "199", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "200", "colour": "orange", "code": "    @_setdoc(Path)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "201", "colour": "orange", "code": "    def access(self, mode = 0):\n", "error": "none", "author": "tomer.filiba@emc.com"}, {"index": "202", "colour": "orange", "code": "        return os.access(str(self), self._access_mode_to_flags(mode))\n", "error": "none", "author": "tomer.filiba@emc.com"}, {"index": "203", "colour": "orange", "code": "\n", "error": "none", "author": "tomer.filiba@emc.com"}, {"index": "204", "colour": "orange", "code": "    @_setdoc(Path)\n", "error": "none", "author": "tomer.filiba@emc.com"}, {"index": "205", "colour": "orange", "code": "    def link(self, dst):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "206", "colour": "orange", "code": "        if isinstance(dst, RemotePath):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "207", "colour": "orange", "code": "            raise TypeError(\"Cannot create a hardlink from local path %s to %r\" % (self, dst))\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "208", "colour": "orange", "code": "        if hasattr(os, \"link\"):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "209", "colour": "orange", "code": "            os.link(str(self), str(dst))\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "210", "colour": "orange", "code": "        else:\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "211", "colour": "orange", "code": "            from plumbum.machines.local import local\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "212", "colour": "orange", "code": "            # windows: use mklink\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "213", "colour": "orange", "code": "            if self.isdir():\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "214", "colour": "orange", "code": "                local[\"cmd\"](\"/C\", \"mklink\", \"/D\", \"/H\", str(dst), str(self))\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "215", "colour": "orange", "code": "            else:\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "216", "colour": "orange", "code": "                local[\"cmd\"](\"/C\", \"mklink\", \"/H\", str(dst), str(self))\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "217", "colour": "orange", "code": "\n", "error": "none", "author": "antoine.dechaume@sogeti.com"}, {"index": "218", "colour": "orange", "code": "    @_setdoc(Path)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "219", "colour": "orange", "code": "    def symlink(self, dst):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "220", "colour": "orange", "code": "        if isinstance(dst, RemotePath):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "221", "colour": "orange", "code": "            raise TypeError(\"Cannot create a symlink from local path %s to %r\" % (self, dst))\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "222", "colour": "orange", "code": "        if hasattr(os, \"symlink\"):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "223", "colour": "orange", "code": "            os.symlink(str(self), str(dst))\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "224", "colour": "orange", "code": "        else:\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "225", "colour": "orange", "code": "            from plumbum.machines.local import local\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "226", "colour": "orange", "code": "            # windows: use mklink\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "227", "colour": "orange", "code": "            if self.isdir():\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "228", "colour": "orange", "code": "                local[\"cmd\"](\"/C\", \"mklink\", \"/D\", str(dst), str(self))\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "229", "colour": "orange", "code": "            else:\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "230", "colour": "orange", "code": "                local[\"cmd\"](\"/C\", \"mklink\", str(dst), str(self))\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "231", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "232", "colour": "orange", "code": "    @_setdoc(Path)\n", "error": "none", "author": "antoine.dechaume@sogeti.com"}, {"index": "233", "colour": "orange", "code": "    def unlink(self):\n", "error": "none", "author": "antoine.dechaume@sogeti.com"}, {"index": "234", "colour": "orange", "code": "        try:\n", "error": "none", "author": "antoine.dechaume@sogeti.com"}, {"index": "235", "colour": "orange", "code": "            os.unlink(str(self))\n", "error": "none", "author": "antoine.dechaume@sogeti.com"}, {"index": "236", "colour": "orange", "code": "        except OSError:\n", "error": "none", "author": "antoine.dechaume@sogeti.com"}, {"index": "237", "colour": "orange", "code": "            # file might already been removed (a race with other threads/processes)\n", "error": "none", "author": "antoine.dechaume@sogeti.com"}, {"index": "238", "colour": "orange", "code": "            _, ex, _ = sys.exc_info()\n", "error": "none", "author": "antoine.dechaume@sogeti.com"}, {"index": "239", "colour": "orange", "code": "            if ex.errno != errno.ENOENT:\n", "error": "none", "author": "antoine.dechaume@sogeti.com"}, {"index": "240", "colour": "orange", "code": "                raise\n", "error": "none", "author": "antoine.dechaume@sogeti.com"}, {"index": "241", "colour": "orange", "code": "\n", "error": "none", "author": "antoine.dechaume@sogeti.com"}, {"index": "242", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "243", "colour": "blue", "code": "class LocalWorkdir(LocalPath):\n", "error": "R", "author": "Tomer.Filiba@emc.com"}, {"index": "244", "colour": "orange", "code": "    \"\"\"Working directory manipulator\"\"\"\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "245", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "246", "colour": "orange", "code": "    __slots__ = []\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "247", "colour": "orange", "code": "    def __init__(self):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "248", "colour": "orange", "code": "        LocalPath.__init__(self, os.getcwd())\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "249", "colour": "orange", "code": "    def __hash__(self):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "250", "colour": "orange", "code": "        raise TypeError(\"unhashable type\")\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "251", "colour": "orange", "code": "    def __new__(cls):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "252", "colour": "orange", "code": "        return object.__new__(cls)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "253", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "254", "colour": "orange", "code": "    def chdir(self, newdir):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "255", "colour": "orange", "code": "        \"\"\"Changes the current working directory to the given one\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "256", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "257", "colour": "orange", "code": "        :param newdir: The destination director (a string or a ``LocalPath``)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "258", "colour": "orange", "code": "        \"\"\"\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "259", "colour": "orange", "code": "        if isinstance(newdir, RemotePath):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "260", "colour": "orange", "code": "            raise TypeError(\"newdir cannot be %r\" % (newdir,))\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "261", "colour": "orange", "code": "        logger.debug(\"Chdir to %s\", newdir)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "262", "colour": "orange", "code": "        os.chdir(str(newdir))\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "263", "colour": "orange", "code": "        self._path = os.path.normpath(os.getcwd())\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "264", "colour": "orange", "code": "    def getpath(self):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "265", "colour": "orange", "code": "        \"\"\"Returns the current working directory as a ``LocalPath`` object\"\"\"\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "266", "colour": "orange", "code": "        return LocalPath(self._path)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "267", "colour": "orange", "code": "    @contextmanager\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "268", "colour": "orange", "code": "    def __call__(self, newdir):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "269", "colour": "orange", "code": "        \"\"\"A context manager used to ``chdir`` into a directory and then ``chdir`` back to\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "270", "colour": "orange", "code": "        the previous location; much like ``pushd``/``popd``.\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "271", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "272", "colour": "orange", "code": "        :param newdir: The destination director (a string or a ``LocalPath``)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "273", "colour": "orange", "code": "        \"\"\"\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "274", "colour": "orange", "code": "        prev = self._path\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "275", "colour": "orange", "code": "        self.chdir(newdir)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "276", "colour": "orange", "code": "        try:\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "277", "colour": "orange", "code": "            yield\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "278", "colour": "orange", "code": "        finally:\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "279", "colour": "orange", "code": "            self.chdir(prev)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "280", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "281", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}]}