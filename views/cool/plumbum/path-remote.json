{"path": "/home/asumal/git/cs410/plumbum/plumbum/path/remote.py", "lines": [{"index": "1", "colour": "orange", "code": "from __future__ import with_statement\n", "error": "none", "author": "tomerf@il.ibm.com"}, {"index": "2", "colour": "orange", "code": "import errno\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "3", "colour": "orange", "code": "from contextlib import contextmanager\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "4", "colour": "orange", "code": "from plumbum.path.base import Path, FSUser\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "5", "colour": "orange", "code": "from plumbum.lib import _setdoc, six\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "6", "colour": "orange", "code": "from plumbum.commands import shquote\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "7", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "8", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "9", "colour": "blue", "code": "class StatRes(object):\n", "error": "R", "author": "Tomer.Filiba@emc.com"}, {"index": "10", "colour": "orange", "code": "    \"\"\"POSIX-like stat result\"\"\"\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "11", "colour": "orange", "code": "    def __init__(self, tup):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "12", "colour": "orange", "code": "        self._tup = tuple(tup)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "13", "colour": "orange", "code": "    def __getitem__(self, index):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "14", "colour": "orange", "code": "        return self._tup[index]\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "15", "colour": "orange", "code": "    st_mode = mode = property(lambda self: self[0])\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "16", "colour": "orange", "code": "    st_ino = ino = property(lambda self: self[1])\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "17", "colour": "orange", "code": "    st_dev = dev = property(lambda self: self[2])\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "18", "colour": "orange", "code": "    st_nlink = nlink = property(lambda self: self[3])\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "19", "colour": "orange", "code": "    st_uid = uid = property(lambda self: self[4])\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "20", "colour": "orange", "code": "    st_gid = gid = property(lambda self: self[5])\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "21", "colour": "orange", "code": "    st_size = size = property(lambda self: self[6])\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "22", "colour": "orange", "code": "    st_atime = atime = property(lambda self: self[7])\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "23", "colour": "orange", "code": "    st_mtime = mtime = property(lambda self: self[8])\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "24", "colour": "orange", "code": "    st_ctime = ctime = property(lambda self: self[9])\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "25", "colour": "orange", "code": "\n", "error": "none", "author": "tomerf@il.ibm.com"}, {"index": "26", "colour": "orange", "code": "\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "27", "colour": "blue", "code": "class RemotePath(Path):\n", "error": "R", "author": "tanzer@swing.co.at"}, {"index": "28", "colour": "orange", "code": "    \"\"\"The class implementing remote-machine paths\"\"\"\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "29", "colour": "orange", "code": "\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "30", "colour": "orange", "code": "    __slots__ = [\"_path\", \"remote\"]\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "31", "colour": "orange", "code": "    def __init__(self, remote, *parts):\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "32", "colour": "orange", "code": "        if not parts:\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "33", "colour": "orange", "code": "            raise TypeError(\"At least one path part is require (none given)\")\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "34", "colour": "orange", "code": "        self.remote = remote\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "35", "colour": "orange", "code": "        windows = (self.remote.uname.lower() == \"windows\")\n", "error": "none", "author": "tomerf@il.ibm.com"}, {"index": "36", "colour": "orange", "code": "        normed = []\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "37", "colour": "orange", "code": "        parts = (self.remote.cwd,) + parts\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "38", "colour": "orange", "code": "        for p in parts:\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "39", "colour": "orange", "code": "            if windows:\n", "error": "none", "author": "tomerf@il.ibm.com"}, {"index": "40", "colour": "orange", "code": "                plist = str(p).replace(\"\\\\\", \"/\").split(\"/\")\n", "error": "none", "author": "tomerf@il.ibm.com"}, {"index": "41", "colour": "orange", "code": "            else:\n", "error": "none", "author": "tomerf@il.ibm.com"}, {"index": "42", "colour": "orange", "code": "                plist = str(p).split(\"/\")\n", "error": "none", "author": "tomerf@il.ibm.com"}, {"index": "43", "colour": "orange", "code": "            if not plist[0]:\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "44", "colour": "orange", "code": "                plist.pop(0)\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "45", "colour": "orange", "code": "                del normed[:]\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "46", "colour": "orange", "code": "            for item in plist:\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "47", "colour": "orange", "code": "                if item == \"\" or item == \".\":\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "48", "colour": "orange", "code": "                    continue\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "49", "colour": "orange", "code": "                if item == \"..\":\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "50", "colour": "orange", "code": "                    if normed:\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "51", "colour": "orange", "code": "                        normed.pop(-1)\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "52", "colour": "orange", "code": "                else:\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "53", "colour": "orange", "code": "                    normed.append(item)\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "54", "colour": "orange", "code": "        if windows:\n", "error": "none", "author": "tomerf@il.ibm.com"}, {"index": "55", "colour": "red", "code": "            self.CASE_SENSITIVE = False\n", "error": "E", "author": "tomerf@il.ibm.com"}, {"index": "56", "colour": "orange", "code": "            self._path = \"\\\\\".join(normed)\n", "error": "none", "author": "tomerf@il.ibm.com"}, {"index": "57", "colour": "orange", "code": "        else:\n", "error": "none", "author": "tomerf@il.ibm.com"}, {"index": "58", "colour": "orange", "code": "            self._path = \"/\" + \"/\".join(normed)\n", "error": "none", "author": "tomerf@il.ibm.com"}, {"index": "59", "colour": "orange", "code": "\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "60", "colour": "orange", "code": "    def _form(self, *parts):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "61", "colour": "orange", "code": "        return RemotePath(self.remote, *parts)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "62", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "63", "colour": "orange", "code": "    def __str__(self):\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "64", "colour": "orange", "code": "        return self._path\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "65", "colour": "orange", "code": "\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "66", "colour": "orange", "code": "    @property\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "67", "colour": "orange", "code": "    @_setdoc(Path)\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "68", "colour": "orange", "code": "    def basename(self):\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "69", "colour": "orange", "code": "        if not \"/\" in str(self):\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "70", "colour": "orange", "code": "            return str(self)\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "71", "colour": "orange", "code": "        return str(self).rsplit(\"/\", 1)[1]\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "72", "colour": "orange", "code": "\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "73", "colour": "orange", "code": "    @property\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "74", "colour": "orange", "code": "    @_setdoc(Path)\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "75", "colour": "orange", "code": "    def dirname(self):\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "76", "colour": "orange", "code": "        if not \"/\" in str(self):\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "77", "colour": "orange", "code": "            return str(self)\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "78", "colour": "orange", "code": "        return self.__class__(self.remote, str(self).rsplit(\"/\", 1)[0])\n", "error": "none", "author": "njharman@gmail.com"}, {"index": "79", "colour": "orange", "code": "\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "80", "colour": "orange", "code": "    @property\n", "error": "none", "author": "njharman@gmail.com"}, {"index": "81", "colour": "orange", "code": "    @_setdoc(Path)\n", "error": "none", "author": "njharman@gmail.com"}, {"index": "82", "colour": "orange", "code": "    def uid(self):\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "83", "colour": "green", "code": "        uid, name = self.remote._path_getuid(self)\n", "error": "W", "author": "tomerfiliba@gmail.com"}, {"index": "84", "colour": "orange", "code": "        return FSUser(int(uid), name)\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "85", "colour": "orange", "code": "\n", "error": "none", "author": "njharman@gmail.com"}, {"index": "86", "colour": "orange", "code": "    @property\n", "error": "none", "author": "njharman@gmail.com"}, {"index": "87", "colour": "orange", "code": "    @_setdoc(Path)\n", "error": "none", "author": "njharman@gmail.com"}, {"index": "88", "colour": "orange", "code": "    def gid(self):\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "89", "colour": "green", "code": "        gid, name = self.remote._path_getgid(self)\n", "error": "W", "author": "tomerfiliba@gmail.com"}, {"index": "90", "colour": "orange", "code": "        return FSUser(int(gid), name)\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "91", "colour": "orange", "code": "\n", "error": "none", "author": "njharman@gmail.com"}, {"index": "92", "colour": "orange", "code": "    def _get_info(self):\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "93", "colour": "orange", "code": "        return (self.remote, self._path)\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "94", "colour": "orange", "code": "\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "95", "colour": "orange", "code": "    @_setdoc(Path)\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "96", "colour": "orange", "code": "    def join(self, *parts):\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "97", "colour": "orange", "code": "        return RemotePath(self.remote, self, *parts)\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "98", "colour": "orange", "code": "\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "99", "colour": "orange", "code": "    @_setdoc(Path)\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "100", "colour": "orange", "code": "    def list(self):\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "101", "colour": "orange", "code": "        if not self.isdir():\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "102", "colour": "orange", "code": "            return []\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "103", "colour": "green", "code": "        return [self.join(fn) for fn in self.remote._path_listdir(self)]\n", "error": "W", "author": "tomerfiliba@gmail.com"}, {"index": "104", "colour": "orange", "code": "\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "105", "colour": "orange", "code": "    @_setdoc(Path)\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "106", "colour": "orange", "code": "    def isdir(self):\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "107", "colour": "green", "code": "        res = self.remote._path_stat(self)\n", "error": "W", "author": "tomerfiliba@gmail.com"}, {"index": "108", "colour": "orange", "code": "        if not res:\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "109", "colour": "orange", "code": "            return False\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "110", "colour": "orange", "code": "        return res.text_mode == \"directory\"\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "111", "colour": "orange", "code": "\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "112", "colour": "orange", "code": "    @_setdoc(Path)\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "113", "colour": "orange", "code": "    def isfile(self):\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "114", "colour": "green", "code": "        res = self.remote._path_stat(self)\n", "error": "W", "author": "tomerfiliba@gmail.com"}, {"index": "115", "colour": "orange", "code": "        if not res:\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "116", "colour": "orange", "code": "            return False\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "117", "colour": "orange", "code": "        return res.text_mode in (\"regular file\", \"regular empty file\")\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "118", "colour": "orange", "code": "\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "119", "colour": "orange", "code": "    @_setdoc(Path)\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "120", "colour": "orange", "code": "    def islink(self):\n", "error": "none", "author": "antoine.dechaume@sogeti.com"}, {"index": "121", "colour": "green", "code": "        res = self.remote._path_stat(self)\n", "error": "W", "author": "antoine.dechaume@sogeti.com"}, {"index": "122", "colour": "orange", "code": "        if not res:\n", "error": "none", "author": "antoine.dechaume@sogeti.com"}, {"index": "123", "colour": "orange", "code": "            return False\n", "error": "none", "author": "antoine.dechaume@sogeti.com"}, {"index": "124", "colour": "orange", "code": "        return res.text_mode == \"symbolic link\"\n", "error": "none", "author": "antoine.dechaume@sogeti.com"}, {"index": "125", "colour": "orange", "code": "\n", "error": "none", "author": "antoine.dechaume@sogeti.com"}, {"index": "126", "colour": "orange", "code": "    @_setdoc(Path)\n", "error": "none", "author": "antoine.dechaume@sogeti.com"}, {"index": "127", "colour": "orange", "code": "    def exists(self):\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "128", "colour": "green", "code": "        return self.remote._path_stat(self) is not None\n", "error": "W", "author": "tomerfiliba@gmail.com"}, {"index": "129", "colour": "orange", "code": "\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "130", "colour": "orange", "code": "    @_setdoc(Path)\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "131", "colour": "orange", "code": "    def stat(self):\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "132", "colour": "green", "code": "        res = self.remote._path_stat(self)\n", "error": "W", "author": "tomerfiliba@gmail.com"}, {"index": "133", "colour": "orange", "code": "        if res is None:\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "134", "colour": "orange", "code": "            raise OSError(errno.ENOENT)\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "135", "colour": "orange", "code": "        return res\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "136", "colour": "orange", "code": "\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "137", "colour": "orange", "code": "    @_setdoc(Path)\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "138", "colour": "orange", "code": "    def glob(self, pattern):\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "139", "colour": "green", "code": "        return [RemotePath(self.remote, m) for m in self.remote._path_glob(self, pattern)]\n", "error": "W", "author": "tomerfiliba@gmail.com"}, {"index": "140", "colour": "orange", "code": "\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "141", "colour": "orange", "code": "    @_setdoc(Path)\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "142", "colour": "orange", "code": "    def delete(self):\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "143", "colour": "orange", "code": "        if not self.exists():\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "144", "colour": "orange", "code": "            return\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "145", "colour": "green", "code": "        self.remote._path_delete(self)\n", "error": "W", "author": "tomerfiliba@gmail.com"}, {"index": "146", "colour": "orange", "code": "\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "147", "colour": "orange", "code": "    unlink = delete\n", "error": "none", "author": "antoine.dechaume@sogeti.com"}, {"index": "148", "colour": "orange", "code": "\n", "error": "none", "author": "antoine.dechaume@sogeti.com"}, {"index": "149", "colour": "orange", "code": "    @_setdoc(Path)\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "150", "colour": "orange", "code": "    def move(self, dst):\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "151", "colour": "orange", "code": "        if isinstance(dst, RemotePath):\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "152", "colour": "orange", "code": "            if dst.remote is not self.remote:\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "153", "colour": "orange", "code": "                raise TypeError(\"dst points to a different remote machine\")\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "154", "colour": "orange", "code": "        elif not isinstance(dst, six.string_types):\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "155", "colour": "orange", "code": "            raise TypeError(\"dst must be a string or a RemotePath (to the same remote machine), \"\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "156", "colour": "orange", "code": "                \"got %r\" % (dst,))\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "157", "colour": "green", "code": "        self.remote._path_move(self, dst)\n", "error": "W", "author": "tomerfiliba@gmail.com"}, {"index": "158", "colour": "orange", "code": "\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "159", "colour": "orange", "code": "    @_setdoc(Path)\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "160", "colour": "orange", "code": "    def copy(self, dst, override = False):\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "161", "colour": "orange", "code": "        if isinstance(dst, RemotePath):\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "162", "colour": "orange", "code": "            if dst.remote is not self.remote:\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "163", "colour": "orange", "code": "                raise TypeError(\"dst points to a different remote machine\")\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "164", "colour": "orange", "code": "        elif not isinstance(dst, six.string_types):\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "165", "colour": "orange", "code": "            raise TypeError(\"dst must be a string or a RemotePath (to the same remote machine), \"\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "166", "colour": "orange", "code": "                \"got %r\" % (dst,))\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "167", "colour": "orange", "code": "        if override:\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "168", "colour": "orange", "code": "            if isinstance(dst, six.string_types):\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "169", "colour": "orange", "code": "                dst = RemotePath(self.remote, dst)\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "170", "colour": "red", "code": "            dst.remove()\n", "error": "E", "author": "tanzer@swing.co.at"}, {"index": "171", "colour": "green", "code": "        self.remote._path_copy(self, dst)\n", "error": "W", "author": "tomerfiliba@gmail.com"}, {"index": "172", "colour": "orange", "code": "\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "173", "colour": "orange", "code": "    @_setdoc(Path)\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "174", "colour": "orange", "code": "    def mkdir(self):\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "175", "colour": "green", "code": "        self.remote._path_mkdir(self)\n", "error": "W", "author": "tomerfiliba@gmail.com"}, {"index": "176", "colour": "orange", "code": "\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "177", "colour": "orange", "code": "    @_setdoc(Path)\n", "error": "none", "author": "tanzer@swing.co.at"}, {"index": "178", "colour": "orange", "code": "    def read(self, encoding=None):\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "179", "colour": "green", "code": "        data = self.remote._path_read(self)\n", "error": "W", "author": "tomerfiliba@gmail.com"}, {"index": "180", "colour": "orange", "code": "        if encoding:\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "181", "colour": "orange", "code": "            data = data.decode(encoding)\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "182", "colour": "orange", "code": "        return data\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "183", "colour": "orange", "code": "    @_setdoc(Path)\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "184", "colour": "orange", "code": "    def write(self, data, encoding=None):\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "185", "colour": "orange", "code": "        if encoding:\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "186", "colour": "orange", "code": "            data = data.encode(encoding)\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "187", "colour": "green", "code": "        self.remote._path_write(self, data)\n", "error": "W", "author": "tomerfiliba@gmail.com"}, {"index": "188", "colour": "orange", "code": "\n", "error": "none", "author": "njharman@gmail.com"}, {"index": "189", "colour": "orange", "code": "    @_setdoc(Path)\n", "error": "none", "author": "njharman@gmail.com"}, {"index": "190", "colour": "orange", "code": "    def chown(self, owner = None, group = None, recursive = None):\n", "error": "none", "author": "tomer.filiba@emc.com"}, {"index": "191", "colour": "green", "code": "        self.remote._path_chown(self, owner, group, self.isdir() if recursive is None else recursive)\n", "error": "W", "author": "tomerfiliba@gmail.com"}, {"index": "192", "colour": "orange", "code": "    @_setdoc(Path)\n", "error": "none", "author": "obutovich@gmail.com"}, {"index": "193", "colour": "orange", "code": "    def chmod(self, mode):\n", "error": "none", "author": "obutovich@gmail.com"}, {"index": "194", "colour": "green", "code": "        self.remote._path_chmod(mode, self)\n", "error": "W", "author": "tomerfiliba@gmail.com"}, {"index": "195", "colour": "orange", "code": "\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "196", "colour": "orange", "code": "    @_setdoc(Path)\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "197", "colour": "orange", "code": "    def access(self, mode = 0):\n", "error": "none", "author": "tomer.filiba@emc.com"}, {"index": "198", "colour": "orange", "code": "        mode = self._access_mode_to_flags(mode)\n", "error": "none", "author": "tomer.filiba@emc.com"}, {"index": "199", "colour": "green", "code": "        res = self.remote._path_stat(self)\n", "error": "W", "author": "drennalls@gmail.com"}, {"index": "200", "colour": "orange", "code": "        if res is None:\n", "error": "none", "author": "tomer.filiba@emc.com"}, {"index": "201", "colour": "orange", "code": "            return False\n", "error": "none", "author": "tomer.filiba@emc.com"}, {"index": "202", "colour": "orange", "code": "        mask = res.st_mode & 0x1ff\n", "error": "none", "author": "tomer.filiba@emc.com"}, {"index": "203", "colour": "orange", "code": "        return ((mask >> 6) & mode) or ((mask >> 3) & mode)\n", "error": "none", "author": "tomer.filiba@emc.com"}, {"index": "204", "colour": "orange", "code": "\n", "error": "none", "author": "tomer.filiba@emc.com"}, {"index": "205", "colour": "orange", "code": "    @_setdoc(Path)\n", "error": "none", "author": "tomer.filiba@emc.com"}, {"index": "206", "colour": "orange", "code": "    def link(self, dst):\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "207", "colour": "orange", "code": "        if isinstance(dst, RemotePath):\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "208", "colour": "orange", "code": "            if dst.remote is not self.remote:\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "209", "colour": "orange", "code": "                raise TypeError(\"dst points to a different remote machine\")\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "210", "colour": "orange", "code": "        elif not isinstance(dst, six.string_types):\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "211", "colour": "orange", "code": "            raise TypeError(\"dst must be a string or a RemotePath (to the same remote machine), \"\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "212", "colour": "orange", "code": "                \"got %r\" % (dst,))\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "213", "colour": "green", "code": "        self.remote._path_link(self, dst, False)\n", "error": "W", "author": "tomerfiliba@gmail.com"}, {"index": "214", "colour": "orange", "code": "\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "215", "colour": "orange", "code": "    @_setdoc(Path)\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "216", "colour": "orange", "code": "    def symlink(self, dst):\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "217", "colour": "orange", "code": "        if isinstance(dst, RemotePath):\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "218", "colour": "orange", "code": "            if dst.remote is not self.remote:\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "219", "colour": "orange", "code": "                raise TypeError(\"dst points to a different remote machine\")\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "220", "colour": "orange", "code": "        elif not isinstance(dst, six.string_types):\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "221", "colour": "orange", "code": "            raise TypeError(\"dst must be a string or a RemotePath (to the same remote machine), \"\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "222", "colour": "orange", "code": "                \"got %r\" % (dst,))\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "223", "colour": "green", "code": "        self.remote._path_link(self, dst, True)\n", "error": "W", "author": "tomerfiliba@gmail.com"}, {"index": "224", "colour": "orange", "code": "\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "225", "colour": "orange", "code": "\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "226", "colour": "blue", "code": "class RemoteWorkdir(RemotePath):\n", "error": "R", "author": "Tomer.Filiba@emc.com"}, {"index": "227", "colour": "orange", "code": "    \"\"\"Remote working directory manipulator\"\"\"\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "228", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "229", "colour": "green", "code": "    def __init__(self, remote):\n", "error": "W", "author": "Tomer.Filiba@emc.com"}, {"index": "230", "colour": "orange", "code": "        self.remote = remote\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "231", "colour": "green", "code": "        self._path = self.remote._session.run(\"pwd\")[1].strip()\n", "error": "W", "author": "Tomer.Filiba@emc.com"}, {"index": "232", "colour": "orange", "code": "    def __hash__(self):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "233", "colour": "orange", "code": "        raise TypeError(\"unhashable type\")\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "234", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "235", "colour": "orange", "code": "    def chdir(self, newdir):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "236", "colour": "orange", "code": "        \"\"\"Changes the current working directory to the given one\"\"\"\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "237", "colour": "green", "code": "        self.remote._session.run(\"cd %s\" % (shquote(newdir),))\n", "error": "W", "author": "Tomer.Filiba@emc.com"}, {"index": "238", "colour": "green", "code": "        self._path = self.remote._session.run(\"pwd\")[1].strip()\n", "error": "W", "author": "Tomer.Filiba@emc.com"}, {"index": "239", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "240", "colour": "orange", "code": "    def getpath(self):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "241", "colour": "orange", "code": "        \"\"\"Returns the current working directory as a\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "242", "colour": "orange", "code": "        `remote path <plumbum.path.remote.RemotePath>` object\"\"\"\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "243", "colour": "orange", "code": "        return RemotePath(self.remote, self)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "244", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "245", "colour": "orange", "code": "    @contextmanager\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "246", "colour": "orange", "code": "    def __call__(self, newdir):\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "247", "colour": "orange", "code": "        \"\"\"A context manager used to ``chdir`` into a directory and then ``chdir`` back to\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "248", "colour": "orange", "code": "        the previous location; much like ``pushd``/``popd``.\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "249", "colour": "orange", "code": "\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "250", "colour": "orange", "code": "        :param newdir: The destination director (a string or a\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "251", "colour": "orange", "code": "                       :class:`RemotePath <plumbum.path.remote.RemotePath>`)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "252", "colour": "orange", "code": "        \"\"\"\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "253", "colour": "orange", "code": "        prev = self._path\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "254", "colour": "orange", "code": "        self.chdir(newdir)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "255", "colour": "orange", "code": "        try:\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "256", "colour": "orange", "code": "            yield\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "257", "colour": "orange", "code": "        finally:\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "258", "colour": "orange", "code": "            self.chdir(prev)\n", "error": "none", "author": "Tomer.Filiba@emc.com"}, {"index": "259", "colour": "orange", "code": "\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "260", "colour": "orange", "code": "\n", "error": "none", "author": "tomerfiliba@gmail.com"}, {"index": "261", "colour": "orange", "code": "\n", "error": "none", "author": "obutovich@gmail.com"}]}