{"path": "/home/asumal/git/cs410/pattern/pattern/web/pdf/layout.py", "lines": [[{"error": "C", "line": "1", "code": "#!/usr/bin/env python2\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "W", "line": "2", "code": "import sys\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "3", "code": "from utils import INF, Plane, get_bound, uniq, csort, fsplit\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "4", "code": "from utils import bbox2str, matrix2str, apply_matrix_pt\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "5", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "6", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "7", "code": "##  IndexAssigner\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "8", "code": "##\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "9", "code": "class IndexAssigner(object):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "10", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "11", "code": "    def __init__(self, index=0):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "12", "code": "        self.index = index\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "13", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "14", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "15", "code": "    def run(self, obj):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "16", "code": "        if isinstance(obj, LTTextBox):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "17", "code": "            obj.index = self.index\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "18", "code": "            self.index += 1\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "19", "code": "        elif isinstance(obj, LTTextGroup):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "20", "code": "            for x in obj:\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "21", "code": "                self.run(x)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "22", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "23", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "24", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "25", "code": "##  LAParams\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "26", "code": "##\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "27", "code": "class LAParams(object):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "28", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "29", "code": "    def __init__(self,\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "30", "code": "                 line_overlap=0.5,\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "31", "code": "                 char_margin=2.0,\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "32", "code": "                 line_margin=0.5,\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "33", "code": "                 word_margin=0.1,\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "34", "code": "                 boxes_flow=0.5,\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "35", "code": "                 detect_vertical=False,\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "36", "code": "                 all_texts=False):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "37", "code": "        self.line_overlap = line_overlap\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "38", "code": "        self.char_margin = char_margin\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "39", "code": "        self.line_margin = line_margin\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "40", "code": "        self.word_margin = word_margin\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "41", "code": "        self.boxes_flow = boxes_flow\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "42", "code": "        self.detect_vertical = detect_vertical\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "43", "code": "        self.all_texts = all_texts\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "44", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "45", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "46", "code": "    def __repr__(self):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "47", "code": "        return ('<LAParams: char_margin=%.1f, line_margin=%.1f, word_margin=%.1f all_texts=%r>' %\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "48", "code": "                (self.char_margin, self.line_margin, self.word_margin, self.all_texts))\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "49", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "50", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "51", "code": "##  LTItem\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "52", "code": "##\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "53", "code": "class LTItem(object):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "54", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "55", "code": "    def analyze(self, laparams):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "56", "code": "        \"\"\"Perform the layout analysis.\"\"\"\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "57", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "58", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "59", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "60", "code": "##  LTText\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "61", "code": "##\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "62", "code": "class LTText(object):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "63", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "64", "code": "    def __repr__(self):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "65", "code": "        return ('<%s %r>' %\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "66", "code": "                (self.__class__.__name__, self.get_text()))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "67", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "68", "code": "    def get_text(self):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "69", "code": "        raise NotImplementedError\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "70", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "71", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "72", "code": "##  LTComponent\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "73", "code": "##\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "74", "code": "class LTComponent(LTItem):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "75", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "76", "code": "    def __init__(self, bbox):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "77", "code": "        LTItem.__init__(self)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "78", "code": "        self.set_bbox(bbox)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "79", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "80", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "81", "code": "    def __repr__(self):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "82", "code": "        return ('<%s %s>' %\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "83", "code": "                (self.__class__.__name__, bbox2str(self.bbox)))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "84", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "85", "code": "    def set_bbox(self, (x0,y0,x1,y1)):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "W", "line": "86", "code": "        self.x0 = x0\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "87", "code": "        self.y0 = y0\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "88", "code": "        self.x1 = x1\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "89", "code": "        self.y1 = y1\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "90", "code": "        self.width = x1-x0\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "91", "code": "        self.height = y1-y0\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "92", "code": "        self.bbox = (x0, y0, x1, y1)\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "93", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "94", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "95", "code": "    def is_empty(self):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "96", "code": "        return self.width <= 0 or self.height <= 0\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "97", "code": "        \n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "98", "code": "    def is_hoverlap(self, obj):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "99", "code": "        assert isinstance(obj, LTComponent)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "100", "code": "        return obj.x0 <= self.x1 and self.x0 <= obj.x1\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "101", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "102", "code": "    def hdistance(self, obj):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "103", "code": "        assert isinstance(obj, LTComponent)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "104", "code": "        if self.is_hoverlap(obj):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "105", "code": "            return 0\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "106", "code": "        else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "107", "code": "            return min(abs(self.x0-obj.x1), abs(self.x1-obj.x0))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "108", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "109", "code": "    def hoverlap(self, obj):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "110", "code": "        assert isinstance(obj, LTComponent)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "111", "code": "        if self.is_hoverlap(obj):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "112", "code": "            return min(abs(self.x0-obj.x1), abs(self.x1-obj.x0))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "113", "code": "        else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "114", "code": "            return 0\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "115", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "116", "code": "    def is_voverlap(self, obj):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "117", "code": "        assert isinstance(obj, LTComponent)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "118", "code": "        return obj.y0 <= self.y1 and self.y0 <= obj.y1\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "119", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "120", "code": "    def vdistance(self, obj):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "121", "code": "        assert isinstance(obj, LTComponent)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "122", "code": "        if self.is_voverlap(obj):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "123", "code": "            return 0\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "124", "code": "        else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "125", "code": "            return min(abs(self.y0-obj.y1), abs(self.y1-obj.y0))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "126", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "127", "code": "    def voverlap(self, obj):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "128", "code": "        assert isinstance(obj, LTComponent)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "129", "code": "        if self.is_voverlap(obj):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "130", "code": "            return min(abs(self.y0-obj.y1), abs(self.y1-obj.y0))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "131", "code": "        else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "132", "code": "            return 0\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "133", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "134", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "135", "code": "##  LTCurve\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "136", "code": "##\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "137", "code": "class LTCurve(LTComponent):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "138", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "139", "code": "    def __init__(self, linewidth, pts):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "140", "code": "        LTComponent.__init__(self, get_bound(pts))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "141", "code": "        self.pts = pts\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "142", "code": "        self.linewidth = linewidth\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "143", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "144", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "145", "code": "    def get_pts(self):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "146", "code": "        return ','.join( '%.3f,%.3f' % p for p in self.pts )\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "147", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "148", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "149", "code": "##  LTLine\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "150", "code": "##\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "151", "code": "class LTLine(LTCurve):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "152", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "153", "code": "    def __init__(self, linewidth, p0, p1):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "154", "code": "        LTCurve.__init__(self, linewidth, [p0, p1])\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "155", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "156", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "157", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "158", "code": "##  LTRect\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "159", "code": "##\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "160", "code": "class LTRect(LTCurve):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "161", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "162", "code": "    def __init__(self, linewidth, (x0,y0,x1,y1)):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "163", "code": "        LTCurve.__init__(self, linewidth, [(x0,y0), (x1,y0), (x1,y1), (x0,y1)])\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "164", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "165", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "166", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "167", "code": "##  LTImage\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "168", "code": "##\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "169", "code": "class LTImage(LTComponent):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "170", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "171", "code": "    def __init__(self, name, stream, bbox):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "172", "code": "        LTComponent.__init__(self, bbox)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "173", "code": "        self.name = name\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "174", "code": "        self.stream = stream\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "175", "code": "        self.srcsize = (stream.get_any(('W', 'Width')),\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "176", "code": "                        stream.get_any(('H', 'Height')))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "177", "code": "        self.imagemask = stream.get_any(('IM', 'ImageMask'))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "178", "code": "        self.bits = stream.get_any(('BPC', 'BitsPerComponent'), 1)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "179", "code": "        self.colorspace = stream.get_any(('CS', 'ColorSpace'))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "180", "code": "        if not isinstance(self.colorspace, list):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "181", "code": "            self.colorspace = [self.colorspace]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "182", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "183", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "184", "code": "    def __repr__(self):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "185", "code": "        return ('<%s(%s) %s %r>' %\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "186", "code": "                (self.__class__.__name__, self.name,\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "187", "code": "                 bbox2str(self.bbox), self.srcsize))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "188", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "189", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "190", "code": "##  LTAnon\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "191", "code": "##\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "192", "code": "class LTAnon(LTItem, LTText):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "193", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "194", "code": "    def __init__(self, text):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "195", "code": "        self._text = text\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "196", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "197", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "198", "code": "    def get_text(self):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "199", "code": "        return self._text\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "200", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "201", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "202", "code": "##  LTChar\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "203", "code": "##\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "204", "code": "class LTChar(LTComponent, LTText):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "205", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "206", "code": "    def __init__(self, matrix, font, fontsize, scaling, rise, text, textwidth, textdisp):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "207", "code": "        LTText.__init__(self)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "208", "code": "        self._text = text\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "209", "code": "        self.matrix = matrix\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "210", "code": "        self.fontname = font.fontname\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "211", "code": "        self.adv = textwidth * fontsize * scaling\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "212", "code": "        # compute the boundary rectangle.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "213", "code": "        if font.is_vertical():\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "214", "code": "            # vertical\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "215", "code": "            width = font.get_width() * fontsize\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "216", "code": "            (vx,vy) = textdisp\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "217", "code": "            if vx is None:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "218", "code": "                vx = width/2\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "219", "code": "            else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "220", "code": "                vx = vx * fontsize * .001\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "221", "code": "            vy = (1000 - vy) * fontsize * .001\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "222", "code": "            tx = -vx\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "223", "code": "            ty = vy + rise\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "224", "code": "            bll = (tx, ty+self.adv)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "225", "code": "            bur = (tx+width, ty)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "226", "code": "        else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "227", "code": "            # horizontal\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "228", "code": "            height = font.get_height() * fontsize\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "229", "code": "            descent = font.get_descent() * fontsize\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "230", "code": "            ty = descent + rise\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "231", "code": "            bll = (0, ty)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "232", "code": "            bur = (self.adv, ty+height)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "233", "code": "        (a,b,c,d,e,f) = self.matrix\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "234", "code": "        self.upright = (0 < a*d*scaling and b*c <= 0)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "235", "code": "        (x0,y0) = apply_matrix_pt(self.matrix, bll)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "236", "code": "        (x1,y1) = apply_matrix_pt(self.matrix, bur)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "237", "code": "        if x1 < x0:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "238", "code": "            (x0,x1) = (x1,x0)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "239", "code": "        if y1 < y0:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "240", "code": "            (y0,y1) = (y1,y0)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "241", "code": "        LTComponent.__init__(self, (x0,y0,x1,y1))\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "242", "code": "        if font.is_vertical():\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "243", "code": "            self.size = self.width\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "244", "code": "        else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "245", "code": "            self.size = self.height\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "246", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "247", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "248", "code": "    def __repr__(self):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "249", "code": "        return ('<%s %s matrix=%s font=%r adv=%s text=%r>' %\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "250", "code": "                (self.__class__.__name__, bbox2str(self.bbox), \n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "251", "code": "                 matrix2str(self.matrix), self.fontname, self.adv,\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "252", "code": "                 self.get_text()))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "253", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "254", "code": "    def get_text(self):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "255", "code": "        return self._text\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "256", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "257", "code": "    def is_compatible(self, obj):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "258", "code": "        \"\"\"Returns True if two characters can coexist in the same line.\"\"\"\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "259", "code": "        return True\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "260", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "261", "code": "    \n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "262", "code": "##  LTContainer\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "263", "code": "##\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "264", "code": "class LTContainer(LTComponent):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "265", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "266", "code": "    def __init__(self, bbox):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "267", "code": "        LTComponent.__init__(self, bbox)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "268", "code": "        self._objs = []\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "269", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "270", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "271", "code": "    def __iter__(self):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "272", "code": "        return iter(self._objs)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "273", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "274", "code": "    def __len__(self):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "275", "code": "        return len(self._objs)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "276", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "277", "code": "    def add(self, obj):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "278", "code": "        self._objs.append(obj)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "279", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "280", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "281", "code": "    def extend(self, objs):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "282", "code": "        for obj in objs:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "283", "code": "            self.add(obj)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "284", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "285", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "286", "code": "    def analyze(self, laparams):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "287", "code": "        for obj in self._objs:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "288", "code": "            obj.analyze(laparams)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "289", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "290", "code": "    \n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "291", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "292", "code": "##  LTExpandableContainer\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "293", "code": "##\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "294", "code": "class LTExpandableContainer(LTContainer):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "295", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "296", "code": "    def __init__(self):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "297", "code": "        LTContainer.__init__(self, (+INF,+INF,-INF,-INF))\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "298", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "299", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "300", "code": "    def add(self, obj):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "301", "code": "        LTContainer.add(self, obj)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "302", "code": "        self.set_bbox((min(self.x0, obj.x0), min(self.y0, obj.y0),\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "303", "code": "                       max(self.x1, obj.x1), max(self.y1, obj.y1)))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "304", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "305", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "306", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "307", "code": "##  LTTextContainer\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "308", "code": "##\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "309", "code": "class LTTextContainer(LTExpandableContainer, LTText):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "310", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "311", "code": "    def __init__(self):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "312", "code": "        LTText.__init__(self)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "313", "code": "        LTExpandableContainer.__init__(self)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "314", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "315", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "316", "code": "    def get_text(self):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "317", "code": "        return ''.join( obj.get_text() for obj in self if isinstance(obj, LTText) )\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "318", "code": "    \n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "319", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "320", "code": "##  LTTextLine\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "321", "code": "##\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "322", "code": "class LTTextLine(LTTextContainer):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "323", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "324", "code": "    def __init__(self, word_margin):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "325", "code": "        LTTextContainer.__init__(self)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "326", "code": "        self.word_margin = word_margin\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "327", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "328", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "329", "code": "    def __repr__(self):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "330", "code": "        return ('<%s %s %r>' %\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "331", "code": "                (self.__class__.__name__, bbox2str(self.bbox),\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "332", "code": "                 self.get_text()))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "333", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "334", "code": "    def analyze(self, laparams):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "335", "code": "        LTTextContainer.analyze(self, laparams)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "336", "code": "        LTContainer.add(self, LTAnon('\\n'))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "337", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "338", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "339", "code": "    def find_neighbors(self, plane, ratio):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "340", "code": "        raise NotImplementedError\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "341", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "342", "code": "class LTTextLineHorizontal(LTTextLine):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "343", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "344", "code": "    def __init__(self, word_margin):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "345", "code": "        LTTextLine.__init__(self, word_margin)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "346", "code": "        self._x1 = +INF\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "347", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "348", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "349", "code": "    def add(self, obj):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "350", "code": "        if isinstance(obj, LTChar) and self.word_margin:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "351", "code": "            margin = self.word_margin * obj.width\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "352", "code": "            if self._x1 < obj.x0-margin:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "353", "code": "                LTContainer.add(self, LTAnon(' '))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "354", "code": "        self._x1 = obj.x1\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "355", "code": "        LTTextLine.add(self, obj)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "356", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "357", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "358", "code": "    def find_neighbors(self, plane, ratio):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "359", "code": "        h = ratio*self.height\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "360", "code": "        objs = plane.find((self.x0, self.y0-h, self.x1, self.y1+h))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "361", "code": "        return [ obj for obj in objs if isinstance(obj, LTTextLineHorizontal) ]\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "362", "code": "    \n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "R", "line": "363", "code": "class LTTextLineVertical(LTTextLine):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "364", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "365", "code": "    def __init__(self, word_margin):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "366", "code": "        LTTextLine.__init__(self, word_margin)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "367", "code": "        self._y0 = -INF\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "368", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "369", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "370", "code": "    def add(self, obj):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "371", "code": "        if isinstance(obj, LTChar) and self.word_margin:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "372", "code": "            margin = self.word_margin * obj.height\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "373", "code": "            if obj.y1+margin < self._y0:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "374", "code": "                LTContainer.add(self, LTAnon(' '))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "375", "code": "        self._y0 = obj.y0\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "376", "code": "        LTTextLine.add(self, obj)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "377", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "378", "code": "        \n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "379", "code": "    def find_neighbors(self, plane, ratio):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "380", "code": "        w = ratio*self.width\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "381", "code": "        objs = plane.find((self.x0-w, self.y0, self.x1+w, self.y1))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "382", "code": "        return [ obj for obj in objs if isinstance(obj, LTTextLineVertical) ]\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "383", "code": "    \n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "384", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "385", "code": "##  LTTextBox\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "386", "code": "##\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "387", "code": "##  A set of text objects that are grouped within\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "388", "code": "##  a certain rectangular area.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "389", "code": "##\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "390", "code": "class LTTextBox(LTTextContainer):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "391", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "392", "code": "    def __init__(self):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "393", "code": "        LTTextContainer.__init__(self)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "394", "code": "        self.index = None\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "395", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "396", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "397", "code": "    def __repr__(self):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "398", "code": "        return ('<%s(%s) %s %r>' %\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "399", "code": "                (self.__class__.__name__,\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "400", "code": "                 self.index, bbox2str(self.bbox), self.get_text()))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "401", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "402", "code": "class LTTextBoxHorizontal(LTTextBox):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "C", "line": "403", "code": "    \n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "404", "code": "    def analyze(self, laparams):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "405", "code": "        LTTextBox.analyze(self, laparams)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "406", "code": "        self._objs = csort(self._objs, key=lambda obj: -obj.y1)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "407", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "408", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "409", "code": "    def get_writing_mode(self):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "410", "code": "        return 'lr-tb'\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "411", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "412", "code": "class LTTextBoxVertical(LTTextBox):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "413", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "414", "code": "    def analyze(self, laparams):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "415", "code": "        LTTextBox.analyze(self, laparams)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "416", "code": "        self._objs = csort(self._objs, key=lambda obj: -obj.x1)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "417", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "418", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "419", "code": "    def get_writing_mode(self):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "420", "code": "        return 'tb-rl'\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "421", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "422", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "423", "code": "##  LTTextGroup\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "424", "code": "##\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "425", "code": "class LTTextGroup(LTTextContainer):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "426", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "427", "code": "    def __init__(self, objs):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "428", "code": "        LTTextContainer.__init__(self)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "429", "code": "        self.extend(objs)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "430", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "431", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "432", "code": "class LTTextGroupLRTB(LTTextGroup):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "C", "line": "433", "code": "    \n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "434", "code": "    def analyze(self, laparams):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "435", "code": "        LTTextGroup.analyze(self, laparams)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "436", "code": "        # reorder the objects from top-left to bottom-right.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "437", "code": "        self._objs = csort(self._objs, key=lambda obj:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "438", "code": "                           (1-laparams.boxes_flow)*(obj.x0) -\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "439", "code": "                           (1+laparams.boxes_flow)*(obj.y0+obj.y1))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "440", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "441", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "442", "code": "class LTTextGroupTBRL(LTTextGroup):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "C", "line": "443", "code": "    \n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "444", "code": "    def analyze(self, laparams):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "445", "code": "        LTTextGroup.analyze(self, laparams)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "446", "code": "        # reorder the objects from top-right to bottom-left.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "447", "code": "        self._objs = csort(self._objs, key=lambda obj:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "448", "code": "                           -(1+laparams.boxes_flow)*(obj.x0+obj.x1)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "449", "code": "                           -(1-laparams.boxes_flow)*(obj.y1))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "450", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "451", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "452", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "453", "code": "##  LTLayoutContainer\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "454", "code": "##\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "455", "code": "class LTLayoutContainer(LTContainer):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "456", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "457", "code": "    def __init__(self, bbox):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "458", "code": "        LTContainer.__init__(self, bbox)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "459", "code": "        self.groups = None\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "460", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "461", "code": "        \n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "R", "line": "462", "code": "    def get_textlines(self, laparams, objs):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "463", "code": "        obj0 = None\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "464", "code": "        line = None\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "465", "code": "        for obj1 in objs:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "466", "code": "            if obj0 is not None:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "467", "code": "                k = 0\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "468", "code": "                if (obj0.is_compatible(obj1) and obj0.is_voverlap(obj1) and \n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "469", "code": "                    min(obj0.height, obj1.height) * laparams.line_overlap < obj0.voverlap(obj1) and\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "470", "code": "                    obj0.hdistance(obj1) < max(obj0.width, obj1.width) * laparams.char_margin):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "471", "code": "                    # obj0 and obj1 is horizontally aligned:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "472", "code": "                    #\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "473", "code": "                    #   +------+ - - -\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "474", "code": "                    #   | obj0 | - - +------+   -\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "475", "code": "                    #   |      |     | obj1 |   | (line_overlap)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "476", "code": "                    #   +------+ - - |      |   -\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "477", "code": "                    #          - - - +------+\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "478", "code": "                    #\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "479", "code": "                    #          |<--->|\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "480", "code": "                    #        (char_margin)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "481", "code": "                    k |= 1\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "482", "code": "                if (laparams.detect_vertical and\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "483", "code": "                    obj0.is_compatible(obj1) and obj0.is_hoverlap(obj1) and \n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "484", "code": "                    min(obj0.width, obj1.width) * laparams.line_overlap < obj0.hoverlap(obj1) and\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "485", "code": "                    obj0.vdistance(obj1) < max(obj0.height, obj1.height) * laparams.char_margin):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "486", "code": "                    # obj0 and obj1 is vertically aligned:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "487", "code": "                    #\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "488", "code": "                    #   +------+\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "489", "code": "                    #   | obj0 |\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "490", "code": "                    #   |      |\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "491", "code": "                    #   +------+ - - -\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "492", "code": "                    #     |    |     | (char_margin)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "493", "code": "                    #     +------+ - -\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "494", "code": "                    #     | obj1 |\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "495", "code": "                    #     |      |\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "496", "code": "                    #     +------+\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "497", "code": "                    #\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "498", "code": "                    #     |<-->|\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "499", "code": "                    #   (line_overlap)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "500", "code": "                    k |= 2\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "501", "code": "                if ( (k & 1 and isinstance(line, LTTextLineHorizontal)) or\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "502", "code": "                     (k & 2 and isinstance(line, LTTextLineVertical)) ):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "503", "code": "                    line.add(obj1)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "504", "code": "                elif line is not None:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "505", "code": "                    yield line\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "506", "code": "                    line = None\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "507", "code": "                else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "508", "code": "                    if k == 2:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "509", "code": "                        line = LTTextLineVertical(laparams.word_margin)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "510", "code": "                        line.add(obj0)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "511", "code": "                        line.add(obj1)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "512", "code": "                    elif k == 1:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "513", "code": "                        line = LTTextLineHorizontal(laparams.word_margin)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "514", "code": "                        line.add(obj0)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "515", "code": "                        line.add(obj1)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "516", "code": "                    else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "517", "code": "                        line = LTTextLineHorizontal(laparams.word_margin)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "518", "code": "                        line.add(obj0)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "519", "code": "                        yield line\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "520", "code": "                        line = None\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "521", "code": "            obj0 = obj1\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "522", "code": "        if line is None:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "523", "code": "            line = LTTextLineHorizontal(laparams.word_margin)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "524", "code": "            line.add(obj0)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "525", "code": "        yield line\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "526", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "527", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "528", "code": "    def get_textboxes(self, laparams, lines):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "529", "code": "        plane = Plane(lines)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "530", "code": "        boxes = {}\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "531", "code": "        for line in lines:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "532", "code": "            neighbors = line.find_neighbors(plane, laparams.line_margin)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "533", "code": "            assert line in neighbors, line\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "534", "code": "            members = []\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "535", "code": "            for obj1 in neighbors:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "536", "code": "                members.append(obj1)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "537", "code": "                if obj1 in boxes:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "538", "code": "                    members.extend(boxes.pop(obj1))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "539", "code": "            if isinstance(line, LTTextLineHorizontal):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "540", "code": "                box = LTTextBoxHorizontal()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "541", "code": "            else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "542", "code": "                box = LTTextBoxVertical()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "543", "code": "            for obj in uniq(members):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "544", "code": "                box.add(obj)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "545", "code": "                boxes[obj] = box\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "546", "code": "        done = set()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "547", "code": "        for line in lines:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "548", "code": "            box = boxes[line]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "549", "code": "            if box in done: continue\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "550", "code": "            done.add(box)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "551", "code": "            yield box\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "552", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "553", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "554", "code": "    def group_textboxes(self, laparams, boxes):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "555", "code": "        def dist(obj1, obj2):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "556", "code": "            \"\"\"A distance function between two TextBoxes.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "557", "code": "            \n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "558", "code": "            Consider the bounding rectangle for obj1 and obj2.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "559", "code": "            Return its area less the areas of obj1 and obj2, \n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "560", "code": "            shown as 'www' below. This value may be negative.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "561", "code": "                    +------+..........+ (x1,y1)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "562", "code": "                    | obj1 |wwwwwwwwww:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "563", "code": "                    +------+www+------+\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "564", "code": "                    :wwwwwwwwww| obj2 |\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "565", "code": "            (x0,y0) +..........+------+\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "566", "code": "            \"\"\"\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "567", "code": "            x0 = min(obj1.x0,obj2.x0)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "568", "code": "            y0 = min(obj1.y0,obj2.y0)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "569", "code": "            x1 = max(obj1.x1,obj2.x1)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "570", "code": "            y1 = max(obj1.y1,obj2.y1)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "571", "code": "            return ((x1-x0)*(y1-y0) - obj1.width*obj1.height - obj2.width*obj2.height)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "572", "code": "        def isany(obj1, obj2):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "573", "code": "            \"\"\"Check if there's any other object between obj1 and obj2.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "574", "code": "            \"\"\"\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "575", "code": "            x0 = min(obj1.x0,obj2.x0)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "576", "code": "            y0 = min(obj1.y0,obj2.y0)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "577", "code": "            x1 = max(obj1.x1,obj2.x1)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "578", "code": "            y1 = max(obj1.y1,obj2.y1)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "579", "code": "            objs = set(plane.find((x0,y0,x1,y1)))\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "580", "code": "            return objs.difference((obj1,obj2))\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "W", "line": "581", "code": "        # XXX this still takes O(n^2)  :(\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "582", "code": "        dists = []\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "583", "code": "        for i in xrange(len(boxes)):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "584", "code": "            obj1 = boxes[i]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "585", "code": "            for j in xrange(i+1, len(boxes)):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "586", "code": "                obj2 = boxes[j]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "587", "code": "                dists.append((0, dist(obj1, obj2), obj1, obj2))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "588", "code": "        dists.sort()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "589", "code": "        plane = Plane(boxes)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "590", "code": "        while dists:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "591", "code": "            (c,d,obj1,obj2) = dists.pop(0)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "592", "code": "            if c == 0 and isany(obj1, obj2):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "593", "code": "                dists.append((1,d,obj1,obj2))\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "594", "code": "                continue\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "595", "code": "            if (isinstance(obj1, LTTextBoxVertical) or\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "596", "code": "                isinstance(obj1, LTTextGroupTBRL) or\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "597", "code": "                isinstance(obj2, LTTextBoxVertical) or\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "598", "code": "                isinstance(obj2, LTTextGroupTBRL)):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "599", "code": "                group = LTTextGroupTBRL([obj1,obj2])\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "600", "code": "            else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "601", "code": "                group = LTTextGroupLRTB([obj1,obj2])\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "602", "code": "            plane.remove(obj1)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "603", "code": "            plane.remove(obj2)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "604", "code": "            dists = [ (c,d,o1,o2) for (c,d,o1,o2) in dists\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "605", "code": "                      if o1 in plane and o2 in plane ]\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "606", "code": "            for other in plane:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "607", "code": "                dists.append((0, dist(group,other), group, other))\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "608", "code": "            dists.sort()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "609", "code": "            plane.add(group)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "610", "code": "        assert len(plane) == 1\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "611", "code": "        return list(plane)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "612", "code": "    \n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "613", "code": "    def analyze(self, laparams):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "614", "code": "        # textobjs is a list of LTChar objects, i.e.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "615", "code": "        # it has all the individual characters in the page.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "616", "code": "        (textobjs, otherobjs) = fsplit(lambda obj: isinstance(obj, LTChar), self._objs)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "617", "code": "        for obj in otherobjs:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "618", "code": "            obj.analyze(laparams)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "619", "code": "        if not textobjs: return\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "620", "code": "        textlines = list(self.get_textlines(laparams, textobjs))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "621", "code": "        assert len(textobjs) <= sum( len(line._objs) for line in textlines )\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "622", "code": "        (empties, textlines) = fsplit(lambda obj: obj.is_empty(), textlines)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "623", "code": "        for obj in empties:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "624", "code": "            obj.analyze(laparams)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "625", "code": "        textboxes = list(self.get_textboxes(laparams, textlines))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "626", "code": "        assert len(textlines) == sum( len(box._objs) for box in textboxes )\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "627", "code": "        groups = self.group_textboxes(laparams, textboxes)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "628", "code": "        assigner = IndexAssigner()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "629", "code": "        for group in groups:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "630", "code": "            group.analyze(laparams)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "631", "code": "            assigner.run(group)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "632", "code": "        textboxes.sort(key=lambda box:box.index)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "633", "code": "        self._objs = textboxes + otherobjs + empties\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "634", "code": "        self.groups = groups\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "635", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "636", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "637", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "638", "code": "##  LTFigure\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "639", "code": "##\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "640", "code": "class LTFigure(LTLayoutContainer):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "641", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "642", "code": "    def __init__(self, name, bbox, matrix):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "643", "code": "        self.name = name\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "644", "code": "        self.matrix = matrix\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "645", "code": "        (x,y,w,h) = bbox\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "646", "code": "        bbox = get_bound( apply_matrix_pt(matrix, (p,q))\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "647", "code": "                          for (p,q) in ((x,y), (x+w,y), (x,y+h), (x+w,y+h)) )\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "648", "code": "        LTLayoutContainer.__init__(self, bbox)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "649", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "650", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "651", "code": "    def __repr__(self):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "652", "code": "        return ('<%s(%s) %s matrix=%s>' %\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "653", "code": "                (self.__class__.__name__, self.name,\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "654", "code": "                 bbox2str(self.bbox), matrix2str(self.matrix)))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "655", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "656", "code": "    def analyze(self, laparams):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "657", "code": "        if not laparams.all_texts: return\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "658", "code": "        LTLayoutContainer.analyze(self, laparams)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "659", "code": "        return \n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "660", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "661", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "662", "code": "##  LTPage\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "663", "code": "##\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "664", "code": "class LTPage(LTLayoutContainer):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "665", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "666", "code": "    def __init__(self, pageid, bbox, rotate=0):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "667", "code": "        LTLayoutContainer.__init__(self, bbox)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "668", "code": "        self.pageid = pageid\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "669", "code": "        self.rotate = rotate\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "670", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "671", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "672", "code": "    def __repr__(self):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "673", "code": "        return ('<%s(%r) %s rotate=%r>' %\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "674", "code": "                (self.__class__.__name__, self.pageid,\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "675", "code": "                 bbox2str(self.bbox), self.rotate))\n", "colour": "black", "author": "tom@organisms.be"}]]}