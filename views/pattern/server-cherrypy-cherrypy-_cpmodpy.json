{"path": "/home/asumal/git/cs410/pattern/pattern/server/cherrypy/cherrypy/_cpmodpy.py", "lines": [[{"error": "none", "line": "1", "code": "\"\"\"Native adapter for serving CherryPy via mod_python\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "2", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "3", "code": "Basic usage:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "4", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "5", "code": "##########################################\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "6", "code": "# Application in a module called myapp.py\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "7", "code": "##########################################\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "8", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "9", "code": "import cherrypy\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "10", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "11", "code": "class Root:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "12", "code": "    @cherrypy.expose\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "13", "code": "    def index(self):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "14", "code": "        return 'Hi there, Ho there, Hey there'\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "15", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "16", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "17", "code": "# We will use this method from the mod_python configuration\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "18", "code": "# as the entry point to our application\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "19", "code": "def setup_server():\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "20", "code": "    cherrypy.tree.mount(Root())\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "21", "code": "    cherrypy.config.update({'environment': 'production',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "22", "code": "                            'log.screen': False,\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "23", "code": "                            'show_tracebacks': False})\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "24", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "25", "code": "##########################################\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "26", "code": "# mod_python settings for apache2\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "27", "code": "# This should reside in your httpd.conf\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "28", "code": "# or a file that will be loaded at\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "29", "code": "# apache startup\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "30", "code": "##########################################\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "31", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "32", "code": "# Start\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "33", "code": "DocumentRoot \"/\"\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "34", "code": "Listen 8080\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "35", "code": "LoadModule python_module /usr/lib/apache2/modules/mod_python.so\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "36", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "37", "code": "<Location \"/\">\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "38", "code": "\tPythonPath \"sys.path+['/path/to/my/application']\"\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "39", "code": "\tSetHandler python-program\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "40", "code": "\tPythonHandler cherrypy._cpmodpy::handler\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "41", "code": "\tPythonOption cherrypy.setup myapp::setup_server\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "42", "code": "\tPythonDebug On\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "43", "code": "</Location>\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "44", "code": "# End\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "45", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "46", "code": "The actual path to your mod_python.so is dependent on your\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "47", "code": "environment. In this case we suppose a global mod_python\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "48", "code": "installation on a Linux distribution such as Ubuntu.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "49", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "50", "code": "We do set the PythonPath configuration setting so that\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "51", "code": "your application can be found by from the user running\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "52", "code": "the apache2 instance. Of course if your application\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "53", "code": "resides in the global site-package this won't be needed.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "54", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "55", "code": "Then restart apache2 and access http://127.0.0.1:8080\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "56", "code": "\"\"\"\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "57", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "58", "code": "import logging\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "59", "code": "import sys\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "60", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "61", "code": "import cherrypy\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "62", "code": "from cherrypy._cpcompat import BytesIO, copyitems, ntob\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "63", "code": "from cherrypy._cperror import format_exc, bare_error\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "64", "code": "from cherrypy.lib import httputil\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "65", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "66", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "67", "code": "# ------------------------------ Request-handling\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "68", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "69", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "70", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "71", "code": "def setup(req):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "F", "line": "72", "code": "    from mod_python import apache\n", "colour": "red", "author": "tom@organisms.be"}, {"error": "none", "line": "73", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "74", "code": "    # Run any setup functions defined by a \"PythonOption cherrypy.setup\" directive.\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "75", "code": "    options = req.get_options()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "76", "code": "    if 'cherrypy.setup' in options:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "77", "code": "        for function in options['cherrypy.setup'].split():\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "78", "code": "            atoms = function.split('::', 1)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "79", "code": "            if len(atoms) == 1:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "80", "code": "                mod = __import__(atoms[0], globals(), locals())\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "81", "code": "            else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "82", "code": "                modname, fname = atoms\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "83", "code": "                mod = __import__(modname, globals(), locals(), [fname])\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "84", "code": "                func = getattr(mod, fname)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "85", "code": "                func()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "86", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "87", "code": "    cherrypy.config.update({'log.screen': False,\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "88", "code": "                            \"tools.ignore_headers.on\": True,\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "89", "code": "                            \"tools.ignore_headers.headers\": ['Range'],\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "90", "code": "                            })\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "91", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "92", "code": "    engine = cherrypy.engine\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "93", "code": "    if hasattr(engine, \"signal_handler\"):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "94", "code": "        engine.signal_handler.unsubscribe()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "95", "code": "    if hasattr(engine, \"console_control_handler\"):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "96", "code": "        engine.console_control_handler.unsubscribe()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "97", "code": "    engine.autoreload.unsubscribe()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "98", "code": "    cherrypy.server.unsubscribe()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "99", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "100", "code": "    def _log(msg, level):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "101", "code": "        newlevel = apache.APLOG_ERR\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "102", "code": "        if logging.DEBUG >= level:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "103", "code": "            newlevel = apache.APLOG_DEBUG\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "104", "code": "        elif logging.INFO >= level:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "105", "code": "            newlevel = apache.APLOG_INFO\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "106", "code": "        elif logging.WARNING >= level:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "107", "code": "            newlevel = apache.APLOG_WARNING\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "108", "code": "        # On Windows, req.server is required or the msg will vanish. See\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "109", "code": "        # http://www.modpython.org/pipermail/mod_python/2003-October/014291.html.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "110", "code": "        # Also, \"When server is not specified...LogLevel does not apply...\"\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "111", "code": "        apache.log_error(msg, newlevel, req.server)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "112", "code": "    engine.subscribe('log', _log)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "113", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "114", "code": "    engine.start()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "115", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "116", "code": "    def cherrypy_cleanup(data):\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "117", "code": "        engine.exit()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "118", "code": "    try:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "119", "code": "        # apache.register_cleanup wasn't available until 3.1.4.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "120", "code": "        apache.register_cleanup(cherrypy_cleanup)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "121", "code": "    except AttributeError:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "122", "code": "        req.server.register_cleanup(req, cherrypy_cleanup)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "123", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "124", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "125", "code": "class _ReadOnlyRequest:\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "126", "code": "    expose = ('read', 'readline', 'readlines')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "127", "code": "    def __init__(self, req):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "128", "code": "        for method in self.expose:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "129", "code": "            self.__dict__[method] = getattr(req, method)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "130", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "131", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "132", "code": "recursive = False\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "133", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "134", "code": "_isSetUp = False\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "R", "line": "135", "code": "def handler(req):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "F", "line": "136", "code": "    from mod_python import apache\n", "colour": "red", "author": "tom@organisms.be"}, {"error": "none", "line": "137", "code": "    try:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "138", "code": "        global _isSetUp\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "139", "code": "        if not _isSetUp:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "140", "code": "            setup(req)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "141", "code": "            _isSetUp = True\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "142", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "143", "code": "        # Obtain a Request object from CherryPy\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "144", "code": "        local = req.connection.local_addr\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "145", "code": "        local = httputil.Host(local[0], local[1], req.connection.local_host or \"\")\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "146", "code": "        remote = req.connection.remote_addr\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "147", "code": "        remote = httputil.Host(remote[0], remote[1], req.connection.remote_host or \"\")\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "148", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "149", "code": "        scheme = req.parsed_uri[0] or 'http'\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "150", "code": "        req.get_basic_auth_pw()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "151", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "152", "code": "        try:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "153", "code": "            # apache.mpm_query only became available in mod_python 3.1\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "154", "code": "            q = apache.mpm_query\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "155", "code": "            threaded = q(apache.AP_MPMQ_IS_THREADED)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "156", "code": "            forked = q(apache.AP_MPMQ_IS_FORKED)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "157", "code": "        except AttributeError:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "158", "code": "            bad_value = (\"You must provide a PythonOption '%s', \"\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "159", "code": "                         \"either 'on' or 'off', when running a version \"\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "160", "code": "                         \"of mod_python < 3.1\")\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "161", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "E", "line": "162", "code": "            threaded = options.get('multithread', '').lower()\n", "colour": "yellow", "author": "tom@organisms.be"}, {"error": "none", "line": "163", "code": "            if threaded == 'on':\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "164", "code": "                threaded = True\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "165", "code": "            elif threaded == 'off':\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "166", "code": "                threaded = False\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "167", "code": "            else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "168", "code": "                raise ValueError(bad_value % \"multithread\")\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "169", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "E", "line": "170", "code": "            forked = options.get('multiprocess', '').lower()\n", "colour": "yellow", "author": "tom@organisms.be"}, {"error": "none", "line": "171", "code": "            if forked == 'on':\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "172", "code": "                forked = True\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "173", "code": "            elif forked == 'off':\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "174", "code": "                forked = False\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "175", "code": "            else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "176", "code": "                raise ValueError(bad_value % \"multiprocess\")\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "177", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "178", "code": "        sn = cherrypy.tree.script_name(req.uri or \"/\")\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "179", "code": "        if sn is None:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "180", "code": "            send_response(req, '404 Not Found', [], '')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "181", "code": "        else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "182", "code": "            app = cherrypy.tree.apps[sn]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "183", "code": "            method = req.method\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "184", "code": "            path = req.uri\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "185", "code": "            qs = req.args or \"\"\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "186", "code": "            reqproto = req.protocol\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "187", "code": "            headers = copyitems(req.headers_in)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "188", "code": "            rfile = _ReadOnlyRequest(req)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "189", "code": "            prev = None\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "190", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "191", "code": "            try:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "192", "code": "                redirections = []\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "193", "code": "                while True:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "194", "code": "                    request, response = app.get_serving(local, remote, scheme,\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "195", "code": "                                                        \"HTTP/1.1\")\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "196", "code": "                    request.login = req.user\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "197", "code": "                    request.multithread = bool(threaded)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "198", "code": "                    request.multiprocess = bool(forked)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "199", "code": "                    request.app = app\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "200", "code": "                    request.prev = prev\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "201", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "202", "code": "                    # Run the CherryPy Request object and obtain the response\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "203", "code": "                    try:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "204", "code": "                        request.run(method, path, qs, reqproto, headers, rfile)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "205", "code": "                        break\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "206", "code": "                    except cherrypy.InternalRedirect:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "207", "code": "                        ir = sys.exc_info()[1]\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "208", "code": "                        app.release_serving()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "209", "code": "                        prev = request\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "210", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "211", "code": "                        if not recursive:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "212", "code": "                            if ir.path in redirections:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "213", "code": "                                raise RuntimeError(\"InternalRedirector visited the \"\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "214", "code": "                                                   \"same URL twice: %r\" % ir.path)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "215", "code": "                            else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "216", "code": "                                # Add the *previous* path_info + qs to redirections.\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "217", "code": "                                if qs:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "218", "code": "                                    qs = \"?\" + qs\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "219", "code": "                                redirections.append(sn + path + qs)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "220", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "221", "code": "                        # Munge environment and try again.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "222", "code": "                        method = \"GET\"\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "223", "code": "                        path = ir.path\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "224", "code": "                        qs = ir.query_string\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "225", "code": "                        rfile = BytesIO()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "226", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "227", "code": "                send_response(req, response.output_status, response.header_list,\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "228", "code": "                              response.body, response.stream)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "229", "code": "            finally:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "230", "code": "                app.release_serving()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "231", "code": "    except:\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "C", "line": "232", "code": "        tb = format_exc()\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "233", "code": "        cherrypy.log(tb, 'MOD_PYTHON', severity=logging.ERROR)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "234", "code": "        s, h, b = bare_error()\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "235", "code": "        send_response(req, s, h, b)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "236", "code": "    return apache.OK\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "237", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "238", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "239", "code": "def send_response(req, status, headers, body, stream=False):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "240", "code": "    # Set response status\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "241", "code": "    req.status = int(status[:3])\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "242", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "243", "code": "    # Set response headers\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "244", "code": "    req.content_type = \"text/plain\"\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "245", "code": "    for header, value in headers:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "246", "code": "        if header.lower() == 'content-type':\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "247", "code": "            req.content_type = value\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "248", "code": "            continue\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "249", "code": "        req.headers_out.add(header, value)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "250", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "251", "code": "    if stream:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "252", "code": "        # Flush now so the status and headers are sent immediately.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "253", "code": "        req.flush()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "254", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "255", "code": "    # Set response body\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "256", "code": "    if isinstance(body, basestring):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "257", "code": "        req.write(body)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "258", "code": "    else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "259", "code": "        for seg in body:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "260", "code": "            req.write(seg)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "261", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "262", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "263", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "264", "code": "# --------------- Startup tools for CherryPy + mod_python --------------- #\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "265", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "266", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "267", "code": "import os\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "268", "code": "import re\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "269", "code": "try:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "270", "code": "    import subprocess\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "271", "code": "    def popen(fullcmd):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "272", "code": "        p = subprocess.Popen(fullcmd, shell=True,\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "273", "code": "                             stdout=subprocess.PIPE, stderr=subprocess.STDOUT,\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "274", "code": "                             close_fds=True)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "275", "code": "        return p.stdout\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "276", "code": "except ImportError:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "277", "code": "    def popen(fullcmd):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "W", "line": "278", "code": "        pipein, pipeout = os.popen4(fullcmd)\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "279", "code": "        return pipeout\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "280", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "281", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "282", "code": "def read_process(cmd, args=\"\"):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "283", "code": "    fullcmd = \"%s %s\" % (cmd, args)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "284", "code": "    pipeout = popen(fullcmd)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "285", "code": "    try:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "286", "code": "        firstline = pipeout.readline()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "287", "code": "        if (re.search(ntob(\"(not recognized|No such file|not found)\"), firstline,\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "288", "code": "                      re.IGNORECASE)):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "289", "code": "            raise IOError('%s must be on your system path.' % cmd)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "290", "code": "        output = firstline + pipeout.read()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "291", "code": "    finally:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "292", "code": "        pipeout.close()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "293", "code": "    return output\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "294", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "295", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "296", "code": "class ModPythonServer(object):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "297", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "298", "code": "    template = \"\"\"\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "299", "code": "# Apache2 server configuration file for running CherryPy with mod_python.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "300", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "301", "code": "DocumentRoot \"/\"\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "302", "code": "Listen %(port)s\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "303", "code": "LoadModule python_module modules/mod_python.so\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "304", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "305", "code": "<Location %(loc)s>\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "306", "code": "    SetHandler python-program\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "307", "code": "    PythonHandler %(handler)s\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "308", "code": "    PythonDebug On\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "309", "code": "%(opts)s\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "310", "code": "</Location>\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "311", "code": "\"\"\"\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "312", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "313", "code": "    def __init__(self, loc=\"/\", port=80, opts=None, apache_path=\"apache\",\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "W", "line": "314", "code": "                 handler=\"cherrypy._cpmodpy::handler\"):\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "315", "code": "        self.loc = loc\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "316", "code": "        self.port = port\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "317", "code": "        self.opts = opts\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "318", "code": "        self.apache_path = apache_path\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "319", "code": "        self.handler = handler\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "320", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "321", "code": "    def start(self):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "322", "code": "        opts = \"\".join([\"    PythonOption %s %s\\n\" % (k, v)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "323", "code": "                        for k, v in self.opts])\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "324", "code": "        conf_data = self.template % {\"port\": self.port,\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "325", "code": "                                     \"loc\": self.loc,\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "326", "code": "                                     \"opts\": opts,\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "327", "code": "                                     \"handler\": self.handler,\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "328", "code": "                                     }\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "329", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "330", "code": "        mpconf = os.path.join(os.path.dirname(__file__), \"cpmodpy.conf\")\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "331", "code": "        f = open(mpconf, 'wb')\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "332", "code": "        try:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "333", "code": "            f.write(conf_data)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "334", "code": "        finally:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "335", "code": "            f.close()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "336", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "337", "code": "        response = read_process(self.apache_path, \"-k start -f %s\" % mpconf)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "338", "code": "        self.ready = True\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "339", "code": "        return response\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "340", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "341", "code": "    def stop(self):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "342", "code": "        os.popen(\"apache -k stop\")\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "343", "code": "        self.ready = False\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "344", "code": "\n", "colour": "black", "author": "tom@organisms.be"}]]}