{"path": "/home/asumal/git/cs410/pattern/pattern/web/pdf/pdftypes.py", "lines": [[{"index": "1", "colour": "orange", "code": "#!/usr/bin/env python2\n", "error": "none", "author": "tom@organisms.be"}, {"index": "2", "colour": "green", "code": "import sys\n", "error": "W", "author": "tom@organisms.be"}, {"index": "3", "colour": "orange", "code": "import zlib\n", "error": "none", "author": "tom@organisms.be"}, {"index": "4", "colour": "green", "code": "from lzw import lzwdecode\n", "error": "W", "author": "tom@organisms.be"}, {"index": "5", "colour": "green", "code": "from ascii85 import ascii85decode, asciihexdecode\n", "error": "W", "author": "tom@organisms.be"}, {"index": "6", "colour": "green", "code": "from runlength import rldecode\n", "error": "W", "author": "tom@organisms.be"}, {"index": "7", "colour": "green", "code": "from psparser import PSException, PSObject\n", "error": "W", "author": "tom@organisms.be"}, {"index": "8", "colour": "green", "code": "from psparser import LIT, KWD, STRICT\n", "error": "W", "author": "tom@organisms.be"}, {"index": "9", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "10", "colour": "orange", "code": "LITERAL_CRYPT = LIT('Crypt')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "11", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "12", "colour": "orange", "code": "# Abbreviation of Filter names in PDF 4.8.6. \"Inline Images\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "13", "colour": "orange", "code": "LITERALS_FLATE_DECODE = (LIT('FlateDecode'), LIT('Fl'))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "14", "colour": "orange", "code": "LITERALS_LZW_DECODE = (LIT('LZWDecode'), LIT('LZW'))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "15", "colour": "orange", "code": "LITERALS_ASCII85_DECODE = (LIT('ASCII85Decode'), LIT('A85'))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "16", "colour": "orange", "code": "LITERALS_ASCIIHEX_DECODE = (LIT('ASCIIHexDecode'), LIT('AHx'))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "17", "colour": "orange", "code": "LITERALS_RUNLENGTH_DECODE = (LIT('RunLengthDecode'), LIT('RL'))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "18", "colour": "orange", "code": "LITERALS_CCITTFAX_DECODE = (LIT('CCITTFaxDecode'), LIT('CCF'))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "19", "colour": "orange", "code": "LITERALS_DCT_DECODE = (LIT('DCTDecode'), LIT('DCT'))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "20", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "21", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "22", "colour": "orange", "code": "##  PDF Objects\n", "error": "none", "author": "tom@organisms.be"}, {"index": "23", "colour": "orange", "code": "##\n", "error": "none", "author": "tom@organisms.be"}, {"index": "24", "colour": "blue", "code": "class PDFObject(PSObject): pass\n", "error": "R", "author": "tom@organisms.be"}, {"index": "25", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "26", "colour": "orange", "code": "class PDFException(PSException): pass\n", "error": "none", "author": "tom@organisms.be"}, {"index": "27", "colour": "orange", "code": "class PDFTypeError(PDFException): pass\n", "error": "none", "author": "tom@organisms.be"}, {"index": "28", "colour": "orange", "code": "class PDFValueError(PDFException): pass\n", "error": "none", "author": "tom@organisms.be"}, {"index": "29", "colour": "orange", "code": "class PDFNotImplementedError(PSException): pass\n", "error": "none", "author": "tom@organisms.be"}, {"index": "30", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "31", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "32", "colour": "orange", "code": "##  PDFObjRef\n", "error": "none", "author": "tom@organisms.be"}, {"index": "33", "colour": "orange", "code": "##\n", "error": "none", "author": "tom@organisms.be"}, {"index": "34", "colour": "blue", "code": "class PDFObjRef(PDFObject):\n", "error": "R", "author": "tom@organisms.be"}, {"index": "35", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "36", "colour": "orange", "code": "    def __init__(self, doc, objid, _):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "37", "colour": "orange", "code": "        if objid == 0:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "38", "colour": "orange", "code": "            if STRICT:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "39", "colour": "orange", "code": "                raise PDFValueError('PDF object id cannot be 0.')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "40", "colour": "orange", "code": "        self.doc = doc\n", "error": "none", "author": "tom@organisms.be"}, {"index": "41", "colour": "orange", "code": "        self.objid = objid\n", "error": "none", "author": "tom@organisms.be"}, {"index": "42", "colour": "orange", "code": "        #self.genno = genno  # Never used.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "43", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "44", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "45", "colour": "orange", "code": "    def __repr__(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "46", "colour": "orange", "code": "        return '<PDFObjRef:%d>' % (self.objid)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "47", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "48", "colour": "orange", "code": "    def resolve(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "49", "colour": "orange", "code": "        return self.doc.getobj(self.objid)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "50", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "51", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "52", "colour": "orange", "code": "# resolve\n", "error": "none", "author": "tom@organisms.be"}, {"index": "53", "colour": "orange", "code": "def resolve1(x):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "54", "colour": "orange", "code": "    \"\"\"Resolves an object.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "55", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "56", "colour": "orange", "code": "    If this is an array or dictionary, it may still contains\n", "error": "none", "author": "tom@organisms.be"}, {"index": "57", "colour": "orange", "code": "    some indirect objects inside.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "58", "colour": "orange", "code": "    \"\"\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "59", "colour": "orange", "code": "    while isinstance(x, PDFObjRef):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "60", "colour": "orange", "code": "        x = x.resolve()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "61", "colour": "orange", "code": "    return x\n", "error": "none", "author": "tom@organisms.be"}, {"index": "62", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "63", "colour": "orange", "code": "def resolve_all(x):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "64", "colour": "orange", "code": "    \"\"\"Recursively resolves the given object and all the internals.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "65", "colour": "orange", "code": "    \n", "error": "none", "author": "tom@organisms.be"}, {"index": "66", "colour": "orange", "code": "    Make sure there is no indirect reference within the nested object.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "67", "colour": "orange", "code": "    This procedure might be slow.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "68", "colour": "orange", "code": "    \"\"\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "69", "colour": "orange", "code": "    while isinstance(x, PDFObjRef):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "70", "colour": "orange", "code": "        x = x.resolve()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "71", "colour": "orange", "code": "    if isinstance(x, list):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "72", "colour": "orange", "code": "        x = [ resolve_all(v) for v in x ]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "73", "colour": "orange", "code": "    elif isinstance(x, dict):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "74", "colour": "orange", "code": "        for (k,v) in x.iteritems():\n", "error": "none", "author": "tom@organisms.be"}, {"index": "75", "colour": "orange", "code": "            x[k] = resolve_all(v)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "76", "colour": "orange", "code": "    return x\n", "error": "none", "author": "tom@organisms.be"}, {"index": "77", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "78", "colour": "orange", "code": "def decipher_all(decipher, objid, genno, x):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "79", "colour": "orange", "code": "    \"\"\"Recursively deciphers the given object.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "80", "colour": "orange", "code": "    \"\"\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "81", "colour": "orange", "code": "    if isinstance(x, str):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "82", "colour": "orange", "code": "        return decipher(objid, genno, x)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "83", "colour": "orange", "code": "    if isinstance(x, list):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "84", "colour": "orange", "code": "        x = [ decipher_all(decipher, objid, genno, v) for v in x ]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "85", "colour": "orange", "code": "    elif isinstance(x, dict):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "86", "colour": "orange", "code": "        for (k,v) in x.iteritems():\n", "error": "none", "author": "tom@organisms.be"}, {"index": "87", "colour": "orange", "code": "            x[k] = decipher_all(decipher, objid, genno, v)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "88", "colour": "orange", "code": "    return x\n", "error": "none", "author": "tom@organisms.be"}, {"index": "89", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "90", "colour": "orange", "code": "# Type cheking\n", "error": "none", "author": "tom@organisms.be"}, {"index": "91", "colour": "orange", "code": "def int_value(x):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "92", "colour": "orange", "code": "    x = resolve1(x)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "93", "colour": "orange", "code": "    if not isinstance(x, int):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "94", "colour": "orange", "code": "        if STRICT:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "95", "colour": "orange", "code": "            raise PDFTypeError('Integer required: %r' % x)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "96", "colour": "orange", "code": "        return 0\n", "error": "none", "author": "tom@organisms.be"}, {"index": "97", "colour": "orange", "code": "    return x\n", "error": "none", "author": "tom@organisms.be"}, {"index": "98", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "99", "colour": "orange", "code": "def float_value(x):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "100", "colour": "orange", "code": "    x = resolve1(x)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "101", "colour": "orange", "code": "    if not isinstance(x, float):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "102", "colour": "orange", "code": "        if STRICT:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "103", "colour": "orange", "code": "            raise PDFTypeError('Float required: %r' % x)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "104", "colour": "orange", "code": "        return 0.0\n", "error": "none", "author": "tom@organisms.be"}, {"index": "105", "colour": "orange", "code": "    return x\n", "error": "none", "author": "tom@organisms.be"}, {"index": "106", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "107", "colour": "orange", "code": "def num_value(x):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "108", "colour": "orange", "code": "    x = resolve1(x)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "109", "colour": "orange", "code": "    if not (isinstance(x, int) or isinstance(x, float)):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "110", "colour": "orange", "code": "        if STRICT:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "111", "colour": "orange", "code": "            raise PDFTypeError('Int or Float required: %r' % x)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "112", "colour": "orange", "code": "        return 0\n", "error": "none", "author": "tom@organisms.be"}, {"index": "113", "colour": "orange", "code": "    return x\n", "error": "none", "author": "tom@organisms.be"}, {"index": "114", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "115", "colour": "orange", "code": "def str_value(x):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "116", "colour": "orange", "code": "    x = resolve1(x)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "117", "colour": "orange", "code": "    if not isinstance(x, str):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "118", "colour": "orange", "code": "        if STRICT:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "119", "colour": "orange", "code": "            raise PDFTypeError('String required: %r' % x)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "120", "colour": "orange", "code": "        return ''\n", "error": "none", "author": "tom@organisms.be"}, {"index": "121", "colour": "orange", "code": "    return x\n", "error": "none", "author": "tom@organisms.be"}, {"index": "122", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "123", "colour": "orange", "code": "def list_value(x):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "124", "colour": "orange", "code": "    x = resolve1(x)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "125", "colour": "orange", "code": "    if not (isinstance(x, list) or isinstance(x, tuple)):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "126", "colour": "orange", "code": "        if STRICT:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "127", "colour": "orange", "code": "            raise PDFTypeError('List required: %r' % x)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "128", "colour": "orange", "code": "        return []\n", "error": "none", "author": "tom@organisms.be"}, {"index": "129", "colour": "orange", "code": "    return x\n", "error": "none", "author": "tom@organisms.be"}, {"index": "130", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "131", "colour": "orange", "code": "def dict_value(x):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "132", "colour": "orange", "code": "    x = resolve1(x)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "133", "colour": "orange", "code": "    if not isinstance(x, dict):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "134", "colour": "orange", "code": "        if STRICT:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "135", "colour": "orange", "code": "            raise PDFTypeError('Dict required: %r' % x)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "136", "colour": "orange", "code": "        return {}\n", "error": "none", "author": "tom@organisms.be"}, {"index": "137", "colour": "orange", "code": "    return x\n", "error": "none", "author": "tom@organisms.be"}, {"index": "138", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "139", "colour": "orange", "code": "def stream_value(x):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "140", "colour": "orange", "code": "    x = resolve1(x)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "141", "colour": "orange", "code": "    if not isinstance(x, PDFStream):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "142", "colour": "orange", "code": "        if STRICT:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "143", "colour": "orange", "code": "            raise PDFTypeError('PDFStream required: %r' % x)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "144", "colour": "orange", "code": "        return PDFStream({}, '')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "145", "colour": "orange", "code": "    return x\n", "error": "none", "author": "tom@organisms.be"}, {"index": "146", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "147", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "148", "colour": "orange", "code": "##  PDFStream type\n", "error": "none", "author": "tom@organisms.be"}, {"index": "149", "colour": "orange", "code": "##\n", "error": "none", "author": "tom@organisms.be"}, {"index": "150", "colour": "orange", "code": "class PDFStream(PDFObject):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "151", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "152", "colour": "orange", "code": "    def __init__(self, attrs, rawdata, decipher=None):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "153", "colour": "orange", "code": "        assert isinstance(attrs, dict)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "154", "colour": "orange", "code": "        self.attrs = attrs\n", "error": "none", "author": "tom@organisms.be"}, {"index": "155", "colour": "orange", "code": "        self.rawdata = rawdata\n", "error": "none", "author": "tom@organisms.be"}, {"index": "156", "colour": "orange", "code": "        self.decipher = decipher\n", "error": "none", "author": "tom@organisms.be"}, {"index": "157", "colour": "orange", "code": "        self.data = None\n", "error": "none", "author": "tom@organisms.be"}, {"index": "158", "colour": "orange", "code": "        self.objid = None\n", "error": "none", "author": "tom@organisms.be"}, {"index": "159", "colour": "orange", "code": "        self.genno = None\n", "error": "none", "author": "tom@organisms.be"}, {"index": "160", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "161", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "162", "colour": "orange", "code": "    def set_objid(self, objid, genno):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "163", "colour": "orange", "code": "        self.objid = objid\n", "error": "none", "author": "tom@organisms.be"}, {"index": "164", "colour": "orange", "code": "        self.genno = genno\n", "error": "none", "author": "tom@organisms.be"}, {"index": "165", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "166", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "167", "colour": "orange", "code": "    def __repr__(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "168", "colour": "orange", "code": "        if self.data is None:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "169", "colour": "orange", "code": "            assert self.rawdata is not None\n", "error": "none", "author": "tom@organisms.be"}, {"index": "170", "colour": "orange", "code": "            return '<PDFStream(%r): raw=%d, %r>' % (self.objid, len(self.rawdata), self.attrs)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "171", "colour": "orange", "code": "        else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "172", "colour": "orange", "code": "            assert self.data is not None\n", "error": "none", "author": "tom@organisms.be"}, {"index": "173", "colour": "orange", "code": "            return '<PDFStream(%r): len=%d, %r>' % (self.objid, len(self.data), self.attrs)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "174", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "175", "colour": "orange", "code": "    def __contains__(self, name):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "176", "colour": "orange", "code": "        return name in self.attrs\n", "error": "none", "author": "tom@organisms.be"}, {"index": "177", "colour": "orange", "code": "    \n", "error": "none", "author": "tom@organisms.be"}, {"index": "178", "colour": "orange", "code": "    def __getitem__(self, name):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "179", "colour": "orange", "code": "        return self.attrs[name]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "180", "colour": "orange", "code": "    \n", "error": "none", "author": "tom@organisms.be"}, {"index": "181", "colour": "orange", "code": "    def get(self, name, default=None):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "182", "colour": "orange", "code": "        return self.attrs.get(name, default)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "183", "colour": "orange", "code": "    \n", "error": "none", "author": "tom@organisms.be"}, {"index": "184", "colour": "orange", "code": "    def get_any(self, names, default=None):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "185", "colour": "orange", "code": "        for name in names:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "186", "colour": "orange", "code": "            if name in self.attrs:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "187", "colour": "orange", "code": "                return self.attrs[name]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "188", "colour": "orange", "code": "        return default\n", "error": "none", "author": "tom@organisms.be"}, {"index": "189", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "190", "colour": "orange", "code": "    def get_filters(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "191", "colour": "orange", "code": "        filters = self.get_any(('F', 'Filter'))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "192", "colour": "orange", "code": "        if not filters: return []\n", "error": "none", "author": "tom@organisms.be"}, {"index": "193", "colour": "orange", "code": "        if isinstance(filters, list): return filters\n", "error": "none", "author": "tom@organisms.be"}, {"index": "194", "colour": "orange", "code": "        return [ filters ]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "195", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "196", "colour": "blue", "code": "    def decode(self):\n", "error": "R", "author": "tom@organisms.be"}, {"index": "197", "colour": "orange", "code": "        assert self.data is None and self.rawdata != None\n", "error": "none", "author": "tom@organisms.be"}, {"index": "198", "colour": "orange", "code": "        data = self.rawdata\n", "error": "none", "author": "tom@organisms.be"}, {"index": "199", "colour": "orange", "code": "        if self.decipher:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "200", "colour": "orange", "code": "            # Handle encryption\n", "error": "none", "author": "tom@organisms.be"}, {"index": "201", "colour": "orange", "code": "            data = self.decipher(self.objid, self.genno, data)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "202", "colour": "orange", "code": "        filters = self.get_filters()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "203", "colour": "orange", "code": "        if not filters:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "204", "colour": "orange", "code": "            self.data = data\n", "error": "none", "author": "tom@organisms.be"}, {"index": "205", "colour": "orange", "code": "            self.rawdata = None\n", "error": "none", "author": "tom@organisms.be"}, {"index": "206", "colour": "orange", "code": "            return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "207", "colour": "orange", "code": "        for f in filters:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "208", "colour": "orange", "code": "            if f in LITERALS_FLATE_DECODE:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "209", "colour": "orange", "code": "                # will get errors if the document is encrypted.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "210", "colour": "orange", "code": "                try:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "211", "colour": "orange", "code": "                    data = zlib.decompress(data)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "212", "colour": "orange", "code": "                except zlib.error as e:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "213", "colour": "orange", "code": "                    if STRICT:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "214", "colour": "orange", "code": "                        raise PDFException('Invalid zlib bytes: %r, %r' % (e, data))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "215", "colour": "orange", "code": "                    data = ''\n", "error": "none", "author": "tom@organisms.be"}, {"index": "216", "colour": "orange", "code": "            elif f in LITERALS_LZW_DECODE:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "217", "colour": "orange", "code": "                data = lzwdecode(data)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "218", "colour": "orange", "code": "            elif f in LITERALS_ASCII85_DECODE:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "219", "colour": "orange", "code": "                data = ascii85decode(data)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "220", "colour": "orange", "code": "            elif f in LITERALS_ASCIIHEX_DECODE:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "221", "colour": "orange", "code": "                data = asciihexdecode(data)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "222", "colour": "orange", "code": "            elif f in LITERALS_RUNLENGTH_DECODE:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "223", "colour": "orange", "code": "                data = rldecode(data)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "224", "colour": "orange", "code": "            elif f in LITERALS_CCITTFAX_DECODE:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "225", "colour": "orange", "code": "                #data = ccittfaxdecode(data)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "226", "colour": "orange", "code": "                raise PDFNotImplementedError('Unsupported filter: %r' % f)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "227", "colour": "orange", "code": "            elif f == LITERAL_CRYPT:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "228", "colour": "orange", "code": "                # not yet..\n", "error": "none", "author": "tom@organisms.be"}, {"index": "229", "colour": "orange", "code": "                raise PDFNotImplementedError('/Crypt filter is unsupported')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "230", "colour": "orange", "code": "            else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "231", "colour": "orange", "code": "                raise PDFNotImplementedError('Unsupported filter: %r' % f)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "232", "colour": "orange", "code": "            # apply predictors\n", "error": "none", "author": "tom@organisms.be"}, {"index": "233", "colour": "orange", "code": "            params = self.get_any(('DP', 'DecodeParms', 'FDecodeParms'), {})\n", "error": "none", "author": "tom@organisms.be"}, {"index": "234", "colour": "orange", "code": "            if 'Predictor' in params and 'Columns' in params:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "235", "colour": "orange", "code": "                pred = int_value(params['Predictor'])\n", "error": "none", "author": "tom@organisms.be"}, {"index": "236", "colour": "orange", "code": "                columns = int_value(params['Columns'])\n", "error": "none", "author": "tom@organisms.be"}, {"index": "237", "colour": "orange", "code": "                if pred:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "238", "colour": "orange", "code": "                    if pred != 12:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "239", "colour": "orange", "code": "                        raise PDFNotImplementedError('Unsupported predictor: %r' % pred)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "240", "colour": "orange", "code": "                    buf = ''\n", "error": "none", "author": "tom@organisms.be"}, {"index": "241", "colour": "orange", "code": "                    ent0 = '\\x00' * columns\n", "error": "none", "author": "tom@organisms.be"}, {"index": "242", "colour": "orange", "code": "                    for i in xrange(0, len(data), columns+1):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "243", "colour": "orange", "code": "                        pred = data[i]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "244", "colour": "orange", "code": "                        ent1 = data[i+1:i+1+columns]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "245", "colour": "orange", "code": "                        if pred == '\\x02':\n", "error": "none", "author": "tom@organisms.be"}, {"index": "246", "colour": "orange", "code": "                            ent1 = ''.join( chr((ord(a)+ord(b)) & 255) for (a,b) in zip(ent0,ent1) )\n", "error": "none", "author": "tom@organisms.be"}, {"index": "247", "colour": "orange", "code": "                        buf += ent1\n", "error": "none", "author": "tom@organisms.be"}, {"index": "248", "colour": "orange", "code": "                        ent0 = ent1\n", "error": "none", "author": "tom@organisms.be"}, {"index": "249", "colour": "orange", "code": "                    data = buf\n", "error": "none", "author": "tom@organisms.be"}, {"index": "250", "colour": "orange", "code": "        self.data = data\n", "error": "none", "author": "tom@organisms.be"}, {"index": "251", "colour": "orange", "code": "        self.rawdata = None\n", "error": "none", "author": "tom@organisms.be"}, {"index": "252", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "253", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "254", "colour": "orange", "code": "    def get_data(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "255", "colour": "orange", "code": "        if self.data is None:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "256", "colour": "orange", "code": "            self.decode()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "257", "colour": "orange", "code": "        return self.data\n", "error": "none", "author": "tom@organisms.be"}, {"index": "258", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "259", "colour": "orange", "code": "    def get_rawdata(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "260", "colour": "orange", "code": "        return self.rawdata\n", "error": "none", "author": "tom@organisms.be"}]]}