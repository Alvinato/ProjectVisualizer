{"path": "/home/asumal/git/cs410/pattern/pattern/server/cherrypy/cherrypy/_cpthreadinglocal.py", "lines": [{"index": "1", "colour": "orange", "code": "# This is a backport of Python-2.4's threading.local() implementation\n", "error": "none", "author": "tom@organisms.be"}, {"index": "2", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "3", "colour": "orange", "code": "\"\"\"Thread-local objects\n", "error": "none", "author": "tom@organisms.be"}, {"index": "4", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "5", "colour": "orange", "code": "(Note that this module provides a Python version of thread\n", "error": "none", "author": "tom@organisms.be"}, {"index": "6", "colour": "orange", "code": " threading.local class.  Depending on the version of Python you're\n", "error": "none", "author": "tom@organisms.be"}, {"index": "7", "colour": "orange", "code": " using, there may be a faster one available.  You should always import\n", "error": "none", "author": "tom@organisms.be"}, {"index": "8", "colour": "orange", "code": " the local class from threading.)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "9", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "10", "colour": "orange", "code": "Thread-local objects support the management of thread-local data.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "11", "colour": "orange", "code": "If you have data that you want to be local to a thread, simply create\n", "error": "none", "author": "tom@organisms.be"}, {"index": "12", "colour": "orange", "code": "a thread-local object and use its attributes:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "13", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "14", "colour": "orange", "code": "  >>> mydata = local()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "15", "colour": "orange", "code": "  >>> mydata.number = 42\n", "error": "none", "author": "tom@organisms.be"}, {"index": "16", "colour": "orange", "code": "  >>> mydata.number\n", "error": "none", "author": "tom@organisms.be"}, {"index": "17", "colour": "orange", "code": "  42\n", "error": "none", "author": "tom@organisms.be"}, {"index": "18", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "19", "colour": "orange", "code": "You can also access the local-object's dictionary:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "20", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "21", "colour": "orange", "code": "  >>> mydata.__dict__\n", "error": "none", "author": "tom@organisms.be"}, {"index": "22", "colour": "orange", "code": "  {'number': 42}\n", "error": "none", "author": "tom@organisms.be"}, {"index": "23", "colour": "orange", "code": "  >>> mydata.__dict__.setdefault('widgets', [])\n", "error": "none", "author": "tom@organisms.be"}, {"index": "24", "colour": "orange", "code": "  []\n", "error": "none", "author": "tom@organisms.be"}, {"index": "25", "colour": "orange", "code": "  >>> mydata.widgets\n", "error": "none", "author": "tom@organisms.be"}, {"index": "26", "colour": "orange", "code": "  []\n", "error": "none", "author": "tom@organisms.be"}, {"index": "27", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "28", "colour": "orange", "code": "What's important about thread-local objects is that their data are\n", "error": "none", "author": "tom@organisms.be"}, {"index": "29", "colour": "orange", "code": "local to a thread. If we access the data in a different thread:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "30", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "31", "colour": "orange", "code": "  >>> log = []\n", "error": "none", "author": "tom@organisms.be"}, {"index": "32", "colour": "orange", "code": "  >>> def f():\n", "error": "none", "author": "tom@organisms.be"}, {"index": "33", "colour": "orange", "code": "  ...     items = mydata.__dict__.items()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "34", "colour": "orange", "code": "  ...     items.sort()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "35", "colour": "orange", "code": "  ...     log.append(items)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "36", "colour": "orange", "code": "  ...     mydata.number = 11\n", "error": "none", "author": "tom@organisms.be"}, {"index": "37", "colour": "orange", "code": "  ...     log.append(mydata.number)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "38", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "39", "colour": "orange", "code": "  >>> import threading\n", "error": "none", "author": "tom@organisms.be"}, {"index": "40", "colour": "orange", "code": "  >>> thread = threading.Thread(target=f)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "41", "colour": "orange", "code": "  >>> thread.start()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "42", "colour": "orange", "code": "  >>> thread.join()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "43", "colour": "orange", "code": "  >>> log\n", "error": "none", "author": "tom@organisms.be"}, {"index": "44", "colour": "orange", "code": "  [[], 11]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "45", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "46", "colour": "orange", "code": "we get different data.  Furthermore, changes made in the other thread\n", "error": "none", "author": "tom@organisms.be"}, {"index": "47", "colour": "orange", "code": "don't affect data seen in this thread:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "48", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "49", "colour": "orange", "code": "  >>> mydata.number\n", "error": "none", "author": "tom@organisms.be"}, {"index": "50", "colour": "orange", "code": "  42\n", "error": "none", "author": "tom@organisms.be"}, {"index": "51", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "52", "colour": "orange", "code": "Of course, values you get from a local object, including a __dict__\n", "error": "none", "author": "tom@organisms.be"}, {"index": "53", "colour": "orange", "code": "attribute, are for whatever thread was current at the time the\n", "error": "none", "author": "tom@organisms.be"}, {"index": "54", "colour": "orange", "code": "attribute was read.  For that reason, you generally don't want to save\n", "error": "none", "author": "tom@organisms.be"}, {"index": "55", "colour": "orange", "code": "these values across threads, as they apply only to the thread they\n", "error": "none", "author": "tom@organisms.be"}, {"index": "56", "colour": "orange", "code": "came from.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "57", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "58", "colour": "orange", "code": "You can create custom local objects by subclassing the local class:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "59", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "60", "colour": "orange", "code": "  >>> class MyLocal(local):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "61", "colour": "orange", "code": "  ...     number = 2\n", "error": "none", "author": "tom@organisms.be"}, {"index": "62", "colour": "orange", "code": "  ...     initialized = False\n", "error": "none", "author": "tom@organisms.be"}, {"index": "63", "colour": "orange", "code": "  ...     def __init__(self, **kw):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "64", "colour": "orange", "code": "  ...         if self.initialized:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "65", "colour": "orange", "code": "  ...             raise SystemError('__init__ called too many times')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "66", "colour": "orange", "code": "  ...         self.initialized = True\n", "error": "none", "author": "tom@organisms.be"}, {"index": "67", "colour": "orange", "code": "  ...         self.__dict__.update(kw)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "68", "colour": "orange", "code": "  ...     def squared(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "69", "colour": "orange", "code": "  ...         return self.number ** 2\n", "error": "none", "author": "tom@organisms.be"}, {"index": "70", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "71", "colour": "orange", "code": "This can be useful to support default values, methods and\n", "error": "none", "author": "tom@organisms.be"}, {"index": "72", "colour": "orange", "code": "initialization.  Note that if you define an __init__ method, it will be\n", "error": "none", "author": "tom@organisms.be"}, {"index": "73", "colour": "orange", "code": "called each time the local object is used in a separate thread.  This\n", "error": "none", "author": "tom@organisms.be"}, {"index": "74", "colour": "orange", "code": "is necessary to initialize each thread's dictionary.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "75", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "76", "colour": "orange", "code": "Now if we create a local object:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "77", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "78", "colour": "orange", "code": "  >>> mydata = MyLocal(color='red')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "79", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "80", "colour": "orange", "code": "Now we have a default number:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "81", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "82", "colour": "orange", "code": "  >>> mydata.number\n", "error": "none", "author": "tom@organisms.be"}, {"index": "83", "colour": "orange", "code": "  2\n", "error": "none", "author": "tom@organisms.be"}, {"index": "84", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "85", "colour": "orange", "code": "an initial color:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "86", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "87", "colour": "orange", "code": "  >>> mydata.color\n", "error": "none", "author": "tom@organisms.be"}, {"index": "88", "colour": "orange", "code": "  'red'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "89", "colour": "orange", "code": "  >>> del mydata.color\n", "error": "none", "author": "tom@organisms.be"}, {"index": "90", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "91", "colour": "orange", "code": "And a method that operates on the data:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "92", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "93", "colour": "orange", "code": "  >>> mydata.squared()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "94", "colour": "orange", "code": "  4\n", "error": "none", "author": "tom@organisms.be"}, {"index": "95", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "96", "colour": "orange", "code": "As before, we can access the data in a separate thread:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "97", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "98", "colour": "orange", "code": "  >>> log = []\n", "error": "none", "author": "tom@organisms.be"}, {"index": "99", "colour": "orange", "code": "  >>> thread = threading.Thread(target=f)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "100", "colour": "orange", "code": "  >>> thread.start()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "101", "colour": "orange", "code": "  >>> thread.join()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "102", "colour": "orange", "code": "  >>> log\n", "error": "none", "author": "tom@organisms.be"}, {"index": "103", "colour": "orange", "code": "  [[('color', 'red'), ('initialized', True)], 11]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "104", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "105", "colour": "orange", "code": "without affecting this thread's data:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "106", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "107", "colour": "orange", "code": "  >>> mydata.number\n", "error": "none", "author": "tom@organisms.be"}, {"index": "108", "colour": "orange", "code": "  2\n", "error": "none", "author": "tom@organisms.be"}, {"index": "109", "colour": "orange", "code": "  >>> mydata.color\n", "error": "none", "author": "tom@organisms.be"}, {"index": "110", "colour": "orange", "code": "  Traceback (most recent call last):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "111", "colour": "orange", "code": "  ...\n", "error": "none", "author": "tom@organisms.be"}, {"index": "112", "colour": "orange", "code": "  AttributeError: 'MyLocal' object has no attribute 'color'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "113", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "114", "colour": "orange", "code": "Note that subclasses can define slots, but they are not thread\n", "error": "none", "author": "tom@organisms.be"}, {"index": "115", "colour": "orange", "code": "local. They are shared across threads:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "116", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "117", "colour": "orange", "code": "  >>> class MyLocal(local):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "118", "colour": "orange", "code": "  ...     __slots__ = 'number'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "119", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "120", "colour": "orange", "code": "  >>> mydata = MyLocal()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "121", "colour": "orange", "code": "  >>> mydata.number = 42\n", "error": "none", "author": "tom@organisms.be"}, {"index": "122", "colour": "orange", "code": "  >>> mydata.color = 'red'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "123", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "124", "colour": "orange", "code": "So, the separate thread:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "125", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "126", "colour": "orange", "code": "  >>> thread = threading.Thread(target=f)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "127", "colour": "orange", "code": "  >>> thread.start()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "128", "colour": "orange", "code": "  >>> thread.join()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "129", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "130", "colour": "orange", "code": "affects what we see:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "131", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "132", "colour": "orange", "code": "  >>> mydata.number\n", "error": "none", "author": "tom@organisms.be"}, {"index": "133", "colour": "orange", "code": "  11\n", "error": "none", "author": "tom@organisms.be"}, {"index": "134", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "135", "colour": "orange", "code": ">>> del mydata\n", "error": "none", "author": "tom@organisms.be"}, {"index": "136", "colour": "orange", "code": "\"\"\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "137", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "138", "colour": "orange", "code": "# Threading import is at end\n", "error": "none", "author": "tom@organisms.be"}, {"index": "139", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "140", "colour": "blue", "code": "class _localbase(object):\n", "error": "R", "author": "tom@organisms.be"}, {"index": "141", "colour": "orange", "code": "    __slots__ = '_local__key', '_local__args', '_local__lock'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "142", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "143", "colour": "orange", "code": "    def __new__(cls, *args, **kw):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "144", "colour": "orange", "code": "        self = object.__new__(cls)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "145", "colour": "orange", "code": "        key = 'thread.local.' + str(id(self))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "146", "colour": "orange", "code": "        object.__setattr__(self, '_local__key', key)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "147", "colour": "orange", "code": "        object.__setattr__(self, '_local__args', (args, kw))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "148", "colour": "orange", "code": "        object.__setattr__(self, '_local__lock', RLock())\n", "error": "none", "author": "tom@organisms.be"}, {"index": "149", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "150", "colour": "orange", "code": "        if args or kw and (cls.__init__ is object.__init__):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "151", "colour": "orange", "code": "            raise TypeError(\"Initialization arguments are not supported\")\n", "error": "none", "author": "tom@organisms.be"}, {"index": "152", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "153", "colour": "orange", "code": "        # We need to create the thread dict in anticipation of\n", "error": "none", "author": "tom@organisms.be"}, {"index": "154", "colour": "orange", "code": "        # __init__ being called, to make sure we don't call it\n", "error": "none", "author": "tom@organisms.be"}, {"index": "155", "colour": "orange", "code": "        # again ourselves.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "156", "colour": "green", "code": "        dict = object.__getattribute__(self, '__dict__')\n", "error": "W", "author": "tom@organisms.be"}, {"index": "157", "colour": "orange", "code": "        currentThread().__dict__[key] = dict\n", "error": "none", "author": "tom@organisms.be"}, {"index": "158", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "159", "colour": "orange", "code": "        return self\n", "error": "none", "author": "tom@organisms.be"}, {"index": "160", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "161", "colour": "orange", "code": "def _patch(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "162", "colour": "orange", "code": "    key = object.__getattribute__(self, '_local__key')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "163", "colour": "orange", "code": "    d = currentThread().__dict__.get(key)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "164", "colour": "orange", "code": "    if d is None:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "165", "colour": "orange", "code": "        d = {}\n", "error": "none", "author": "tom@organisms.be"}, {"index": "166", "colour": "orange", "code": "        currentThread().__dict__[key] = d\n", "error": "none", "author": "tom@organisms.be"}, {"index": "167", "colour": "orange", "code": "        object.__setattr__(self, '__dict__', d)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "168", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "169", "colour": "orange", "code": "        # we have a new instance dict, so call out __init__ if we have\n", "error": "none", "author": "tom@organisms.be"}, {"index": "170", "colour": "orange", "code": "        # one\n", "error": "none", "author": "tom@organisms.be"}, {"index": "171", "colour": "orange", "code": "        cls = type(self)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "172", "colour": "orange", "code": "        if cls.__init__ is not object.__init__:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "173", "colour": "orange", "code": "            args, kw = object.__getattribute__(self, '_local__args')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "174", "colour": "green", "code": "            cls.__init__(self, *args, **kw)\n", "error": "W", "author": "tom@organisms.be"}, {"index": "175", "colour": "orange", "code": "    else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "176", "colour": "orange", "code": "        object.__setattr__(self, '__dict__', d)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "177", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "178", "colour": "blue", "code": "class local(_localbase):\n", "error": "R", "author": "tom@organisms.be"}, {"index": "179", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "180", "colour": "orange", "code": "    def __getattribute__(self, name):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "181", "colour": "orange", "code": "        lock = object.__getattribute__(self, '_local__lock')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "182", "colour": "orange", "code": "        lock.acquire()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "183", "colour": "orange", "code": "        try:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "184", "colour": "orange", "code": "            _patch(self)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "185", "colour": "orange", "code": "            return object.__getattribute__(self, name)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "186", "colour": "orange", "code": "        finally:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "187", "colour": "orange", "code": "            lock.release()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "188", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "189", "colour": "orange", "code": "    def __setattr__(self, name, value):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "190", "colour": "orange", "code": "        lock = object.__getattribute__(self, '_local__lock')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "191", "colour": "orange", "code": "        lock.acquire()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "192", "colour": "orange", "code": "        try:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "193", "colour": "orange", "code": "            _patch(self)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "194", "colour": "orange", "code": "            return object.__setattr__(self, name, value)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "195", "colour": "orange", "code": "        finally:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "196", "colour": "orange", "code": "            lock.release()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "197", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "198", "colour": "orange", "code": "    def __delattr__(self, name):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "199", "colour": "orange", "code": "        lock = object.__getattribute__(self, '_local__lock')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "200", "colour": "orange", "code": "        lock.acquire()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "201", "colour": "orange", "code": "        try:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "202", "colour": "orange", "code": "            _patch(self)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "203", "colour": "orange", "code": "            return object.__delattr__(self, name)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "204", "colour": "orange", "code": "        finally:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "205", "colour": "orange", "code": "            lock.release()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "206", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "207", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "208", "colour": "red", "code": "    def __del__():\n", "error": "E", "author": "tom@organisms.be"}, {"index": "209", "colour": "orange", "code": "        threading_enumerate = enumerate\n", "error": "none", "author": "tom@organisms.be"}, {"index": "210", "colour": "orange", "code": "        __getattribute__ = object.__getattribute__\n", "error": "none", "author": "tom@organisms.be"}, {"index": "211", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "212", "colour": "orange", "code": "        def __del__(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "213", "colour": "orange", "code": "            key = __getattribute__(self, '_local__key')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "214", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "215", "colour": "orange", "code": "            try:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "216", "colour": "orange", "code": "                threads = list(threading_enumerate())\n", "error": "none", "author": "tom@organisms.be"}, {"index": "217", "colour": "green", "code": "            except:\n", "error": "W", "author": "tom@organisms.be"}, {"index": "218", "colour": "orange", "code": "                # if enumerate fails, as it seems to do during\n", "error": "none", "author": "tom@organisms.be"}, {"index": "219", "colour": "orange", "code": "                # shutdown, we'll skip cleanup under the assumption\n", "error": "none", "author": "tom@organisms.be"}, {"index": "220", "colour": "orange", "code": "                # that there is nothing to clean up\n", "error": "none", "author": "tom@organisms.be"}, {"index": "221", "colour": "orange", "code": "                return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "222", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "223", "colour": "orange", "code": "            for thread in threads:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "224", "colour": "orange", "code": "                try:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "225", "colour": "orange", "code": "                    __dict__ = thread.__dict__\n", "error": "none", "author": "tom@organisms.be"}, {"index": "226", "colour": "orange", "code": "                except AttributeError:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "227", "colour": "orange", "code": "                    # Thread is dying, rest in peace\n", "error": "none", "author": "tom@organisms.be"}, {"index": "228", "colour": "orange", "code": "                    continue\n", "error": "none", "author": "tom@organisms.be"}, {"index": "229", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "230", "colour": "orange", "code": "                if key in __dict__:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "231", "colour": "orange", "code": "                    try:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "232", "colour": "orange", "code": "                        del __dict__[key]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "233", "colour": "orange", "code": "                    except KeyError:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "234", "colour": "orange", "code": "                        pass # didn't have anything in this thread\n", "error": "none", "author": "tom@organisms.be"}, {"index": "235", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "236", "colour": "orange", "code": "        return __del__\n", "error": "none", "author": "tom@organisms.be"}, {"index": "237", "colour": "orange", "code": "    __del__ = __del__()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "238", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "239", "colour": "green", "code": "from threading import currentThread, enumerate, RLock\n", "error": "W", "author": "tom@organisms.be"}]}