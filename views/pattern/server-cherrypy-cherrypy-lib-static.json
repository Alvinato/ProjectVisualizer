{"path": "/home/asumal/git/cs410/pattern/pattern/server/cherrypy/cherrypy/lib/static.py", "lines": [[{"index": "1", "colour": "orange", "code": "try:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "2", "colour": "orange", "code": "    from io import UnsupportedOperation\n", "error": "none", "author": "tom@organisms.be"}, {"index": "3", "colour": "orange", "code": "except ImportError:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "4", "colour": "orange", "code": "    UnsupportedOperation = object()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "5", "colour": "green", "code": "import logging\n", "error": "W", "author": "tom@organisms.be"}, {"index": "6", "colour": "orange", "code": "import mimetypes\n", "error": "none", "author": "tom@organisms.be"}, {"index": "7", "colour": "orange", "code": "mimetypes.init()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "8", "colour": "orange", "code": "mimetypes.types_map['.dwg']='image/x-dwg'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "9", "colour": "orange", "code": "mimetypes.types_map['.ico']='image/x-icon'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "10", "colour": "orange", "code": "mimetypes.types_map['.bz2']='application/x-bzip2'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "11", "colour": "orange", "code": "mimetypes.types_map['.gz']='application/x-gzip'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "12", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "13", "colour": "orange", "code": "import os\n", "error": "none", "author": "tom@organisms.be"}, {"index": "14", "colour": "orange", "code": "import re\n", "error": "none", "author": "tom@organisms.be"}, {"index": "15", "colour": "orange", "code": "import stat\n", "error": "none", "author": "tom@organisms.be"}, {"index": "16", "colour": "green", "code": "import time\n", "error": "W", "author": "tom@organisms.be"}, {"index": "17", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "18", "colour": "orange", "code": "import cherrypy\n", "error": "none", "author": "tom@organisms.be"}, {"index": "19", "colour": "orange", "code": "from cherrypy._cpcompat import ntob, unquote\n", "error": "none", "author": "tom@organisms.be"}, {"index": "20", "colour": "orange", "code": "from cherrypy.lib import cptools, httputil, file_generator_limited\n", "error": "none", "author": "tom@organisms.be"}, {"index": "21", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "22", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "23", "colour": "blue", "code": "def serve_file(path, content_type=None, disposition=None, name=None, debug=False):\n", "error": "R", "author": "tom@organisms.be"}, {"index": "24", "colour": "orange", "code": "    \"\"\"Set status, headers, and body in order to serve the given path.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "25", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "26", "colour": "orange", "code": "    The Content-Type header will be set to the content_type arg, if provided.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "27", "colour": "orange", "code": "    If not provided, the Content-Type will be guessed by the file extension\n", "error": "none", "author": "tom@organisms.be"}, {"index": "28", "colour": "orange", "code": "    of the 'path' argument.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "29", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "30", "colour": "orange", "code": "    If disposition is not None, the Content-Disposition header will be set\n", "error": "none", "author": "tom@organisms.be"}, {"index": "31", "colour": "orange", "code": "    to \"<disposition>; filename=<name>\". If name is None, it will be set\n", "error": "none", "author": "tom@organisms.be"}, {"index": "32", "colour": "orange", "code": "    to the basename of path. If disposition is None, no Content-Disposition\n", "error": "none", "author": "tom@organisms.be"}, {"index": "33", "colour": "orange", "code": "    header will be written.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "34", "colour": "orange", "code": "    \"\"\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "35", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "36", "colour": "orange", "code": "    response = cherrypy.serving.response\n", "error": "none", "author": "tom@organisms.be"}, {"index": "37", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "38", "colour": "orange", "code": "    # If path is relative, users should fix it by making path absolute.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "39", "colour": "orange", "code": "    # That is, CherryPy should not guess where the application root is.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "40", "colour": "orange", "code": "    # It certainly should *not* use cwd (since CP may be invoked from a\n", "error": "none", "author": "tom@organisms.be"}, {"index": "41", "colour": "orange", "code": "    # variety of paths). If using tools.staticdir, you can make your relative\n", "error": "none", "author": "tom@organisms.be"}, {"index": "42", "colour": "orange", "code": "    # paths become absolute by supplying a value for \"tools.staticdir.root\".\n", "error": "none", "author": "tom@organisms.be"}, {"index": "43", "colour": "orange", "code": "    if not os.path.isabs(path):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "44", "colour": "orange", "code": "        msg = \"'%s' is not an absolute path.\" % path\n", "error": "none", "author": "tom@organisms.be"}, {"index": "45", "colour": "orange", "code": "        if debug:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "46", "colour": "orange", "code": "            cherrypy.log(msg, 'TOOLS.STATICFILE')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "47", "colour": "orange", "code": "        raise ValueError(msg)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "48", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "49", "colour": "orange", "code": "    try:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "50", "colour": "orange", "code": "        st = os.stat(path)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "51", "colour": "orange", "code": "    except OSError:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "52", "colour": "orange", "code": "        if debug:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "53", "colour": "orange", "code": "            cherrypy.log('os.stat(%r) failed' % path, 'TOOLS.STATIC')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "54", "colour": "orange", "code": "        raise cherrypy.NotFound()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "55", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "56", "colour": "orange", "code": "    # Check if path is a directory.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "57", "colour": "orange", "code": "    if stat.S_ISDIR(st.st_mode):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "58", "colour": "orange", "code": "        # Let the caller deal with it as they like.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "59", "colour": "orange", "code": "        if debug:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "60", "colour": "orange", "code": "            cherrypy.log('%r is a directory' % path, 'TOOLS.STATIC')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "61", "colour": "orange", "code": "        raise cherrypy.NotFound()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "62", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "63", "colour": "orange", "code": "    # Set the Last-Modified response header, so that\n", "error": "none", "author": "tom@organisms.be"}, {"index": "64", "colour": "orange", "code": "    # modified-since validation code can work.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "65", "colour": "orange", "code": "    response.headers['Last-Modified'] = httputil.HTTPDate(st.st_mtime)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "66", "colour": "orange", "code": "    cptools.validate_since()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "67", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "68", "colour": "orange", "code": "    if content_type is None:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "69", "colour": "orange", "code": "        # Set content-type based on filename extension\n", "error": "none", "author": "tom@organisms.be"}, {"index": "70", "colour": "orange", "code": "        ext = \"\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "71", "colour": "orange", "code": "        i = path.rfind('.')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "72", "colour": "orange", "code": "        if i != -1:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "73", "colour": "orange", "code": "            ext = path[i:].lower()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "74", "colour": "orange", "code": "        content_type = mimetypes.types_map.get(ext, None)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "75", "colour": "orange", "code": "    if content_type is not None:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "76", "colour": "orange", "code": "        response.headers['Content-Type'] = content_type\n", "error": "none", "author": "tom@organisms.be"}, {"index": "77", "colour": "orange", "code": "    if debug:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "78", "colour": "orange", "code": "        cherrypy.log('Content-Type: %r' % content_type, 'TOOLS.STATIC')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "79", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "80", "colour": "orange", "code": "    cd = None\n", "error": "none", "author": "tom@organisms.be"}, {"index": "81", "colour": "orange", "code": "    if disposition is not None:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "82", "colour": "orange", "code": "        if name is None:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "83", "colour": "orange", "code": "            name = os.path.basename(path)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "84", "colour": "orange", "code": "        cd = '%s; filename=\"%s\"' % (disposition, name)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "85", "colour": "orange", "code": "        response.headers[\"Content-Disposition\"] = cd\n", "error": "none", "author": "tom@organisms.be"}, {"index": "86", "colour": "orange", "code": "    if debug:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "87", "colour": "orange", "code": "        cherrypy.log('Content-Disposition: %r' % cd, 'TOOLS.STATIC')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "88", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "89", "colour": "orange", "code": "    # Set Content-Length and use an iterable (file object)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "90", "colour": "orange", "code": "    #   this way CP won't load the whole file in memory\n", "error": "none", "author": "tom@organisms.be"}, {"index": "91", "colour": "orange", "code": "    content_length = st.st_size\n", "error": "none", "author": "tom@organisms.be"}, {"index": "92", "colour": "orange", "code": "    fileobj = open(path, 'rb')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "93", "colour": "orange", "code": "    return _serve_fileobj(fileobj, content_type, content_length, debug=debug)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "94", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "95", "colour": "orange", "code": "def serve_fileobj(fileobj, content_type=None, disposition=None, name=None,\n", "error": "none", "author": "tom@organisms.be"}, {"index": "96", "colour": "orange", "code": "                  debug=False):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "97", "colour": "orange", "code": "    \"\"\"Set status, headers, and body in order to serve the given file object.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "98", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "99", "colour": "orange", "code": "    The Content-Type header will be set to the content_type arg, if provided.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "100", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "101", "colour": "orange", "code": "    If disposition is not None, the Content-Disposition header will be set\n", "error": "none", "author": "tom@organisms.be"}, {"index": "102", "colour": "orange", "code": "    to \"<disposition>; filename=<name>\". If name is None, 'filename' will\n", "error": "none", "author": "tom@organisms.be"}, {"index": "103", "colour": "orange", "code": "    not be set. If disposition is None, no Content-Disposition header will\n", "error": "none", "author": "tom@organisms.be"}, {"index": "104", "colour": "orange", "code": "    be written.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "105", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "106", "colour": "orange", "code": "    CAUTION: If the request contains a 'Range' header, one or more seek()s will\n", "error": "none", "author": "tom@organisms.be"}, {"index": "107", "colour": "orange", "code": "    be performed on the file object.  This may cause undesired behavior if\n", "error": "none", "author": "tom@organisms.be"}, {"index": "108", "colour": "orange", "code": "    the file object is not seekable.  It could also produce undesired results\n", "error": "none", "author": "tom@organisms.be"}, {"index": "109", "colour": "orange", "code": "    if the caller set the read position of the file object prior to calling\n", "error": "none", "author": "tom@organisms.be"}, {"index": "110", "colour": "orange", "code": "    serve_fileobj(), expecting that the data would be served starting from that\n", "error": "none", "author": "tom@organisms.be"}, {"index": "111", "colour": "orange", "code": "    position.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "112", "colour": "orange", "code": "    \"\"\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "113", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "114", "colour": "orange", "code": "    response = cherrypy.serving.response\n", "error": "none", "author": "tom@organisms.be"}, {"index": "115", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "116", "colour": "orange", "code": "    try:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "117", "colour": "orange", "code": "        st = os.fstat(fileobj.fileno())\n", "error": "none", "author": "tom@organisms.be"}, {"index": "118", "colour": "orange", "code": "    except AttributeError:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "119", "colour": "orange", "code": "        if debug:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "120", "colour": "orange", "code": "            cherrypy.log('os has no fstat attribute', 'TOOLS.STATIC')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "121", "colour": "orange", "code": "        content_length = None\n", "error": "none", "author": "tom@organisms.be"}, {"index": "122", "colour": "orange", "code": "    except UnsupportedOperation:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "123", "colour": "orange", "code": "        content_length = None\n", "error": "none", "author": "tom@organisms.be"}, {"index": "124", "colour": "orange", "code": "    else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "125", "colour": "orange", "code": "        # Set the Last-Modified response header, so that\n", "error": "none", "author": "tom@organisms.be"}, {"index": "126", "colour": "orange", "code": "        # modified-since validation code can work.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "127", "colour": "orange", "code": "        response.headers['Last-Modified'] = httputil.HTTPDate(st.st_mtime)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "128", "colour": "orange", "code": "        cptools.validate_since()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "129", "colour": "orange", "code": "        content_length = st.st_size\n", "error": "none", "author": "tom@organisms.be"}, {"index": "130", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "131", "colour": "orange", "code": "    if content_type is not None:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "132", "colour": "orange", "code": "        response.headers['Content-Type'] = content_type\n", "error": "none", "author": "tom@organisms.be"}, {"index": "133", "colour": "orange", "code": "    if debug:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "134", "colour": "orange", "code": "        cherrypy.log('Content-Type: %r' % content_type, 'TOOLS.STATIC')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "135", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "136", "colour": "orange", "code": "    cd = None\n", "error": "none", "author": "tom@organisms.be"}, {"index": "137", "colour": "orange", "code": "    if disposition is not None:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "138", "colour": "orange", "code": "        if name is None:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "139", "colour": "orange", "code": "            cd = disposition\n", "error": "none", "author": "tom@organisms.be"}, {"index": "140", "colour": "orange", "code": "        else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "141", "colour": "orange", "code": "            cd = '%s; filename=\"%s\"' % (disposition, name)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "142", "colour": "orange", "code": "        response.headers[\"Content-Disposition\"] = cd\n", "error": "none", "author": "tom@organisms.be"}, {"index": "143", "colour": "orange", "code": "    if debug:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "144", "colour": "orange", "code": "        cherrypy.log('Content-Disposition: %r' % cd, 'TOOLS.STATIC')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "145", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "146", "colour": "orange", "code": "    return _serve_fileobj(fileobj, content_type, content_length, debug=debug)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "147", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "148", "colour": "blue", "code": "def _serve_fileobj(fileobj, content_type, content_length, debug=False):\n", "error": "R", "author": "tom@organisms.be"}, {"index": "149", "colour": "orange", "code": "    \"\"\"Internal. Set response.body to the given file object, perhaps ranged.\"\"\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "150", "colour": "orange", "code": "    response = cherrypy.serving.response\n", "error": "none", "author": "tom@organisms.be"}, {"index": "151", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "152", "colour": "orange", "code": "    # HTTP/1.0 didn't have Range/Accept-Ranges headers, or the 206 code\n", "error": "none", "author": "tom@organisms.be"}, {"index": "153", "colour": "orange", "code": "    request = cherrypy.serving.request\n", "error": "none", "author": "tom@organisms.be"}, {"index": "154", "colour": "orange", "code": "    if request.protocol >= (1, 1):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "155", "colour": "orange", "code": "        response.headers[\"Accept-Ranges\"] = \"bytes\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "156", "colour": "orange", "code": "        r = httputil.get_ranges(request.headers.get('Range'), content_length)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "157", "colour": "orange", "code": "        if r == []:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "158", "colour": "orange", "code": "            response.headers['Content-Range'] = \"bytes */%s\" % content_length\n", "error": "none", "author": "tom@organisms.be"}, {"index": "159", "colour": "orange", "code": "            message = \"Invalid Range (first-byte-pos greater than Content-Length)\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "160", "colour": "orange", "code": "            if debug:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "161", "colour": "orange", "code": "                cherrypy.log(message, 'TOOLS.STATIC')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "162", "colour": "orange", "code": "            raise cherrypy.HTTPError(416, message)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "163", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "164", "colour": "orange", "code": "        if r:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "165", "colour": "orange", "code": "            if len(r) == 1:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "166", "colour": "orange", "code": "                # Return a single-part response.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "167", "colour": "orange", "code": "                start, stop = r[0]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "168", "colour": "orange", "code": "                if stop > content_length:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "169", "colour": "orange", "code": "                    stop = content_length\n", "error": "none", "author": "tom@organisms.be"}, {"index": "170", "colour": "orange", "code": "                r_len = stop - start\n", "error": "none", "author": "tom@organisms.be"}, {"index": "171", "colour": "orange", "code": "                if debug:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "172", "colour": "orange", "code": "                    cherrypy.log('Single part; start: %r, stop: %r' % (start, stop),\n", "error": "none", "author": "tom@organisms.be"}, {"index": "173", "colour": "orange", "code": "                                 'TOOLS.STATIC')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "174", "colour": "orange", "code": "                response.status = \"206 Partial Content\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "175", "colour": "orange", "code": "                response.headers['Content-Range'] = (\n", "error": "none", "author": "tom@organisms.be"}, {"index": "176", "colour": "orange", "code": "                    \"bytes %s-%s/%s\" % (start, stop - 1, content_length))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "177", "colour": "orange", "code": "                response.headers['Content-Length'] = r_len\n", "error": "none", "author": "tom@organisms.be"}, {"index": "178", "colour": "orange", "code": "                fileobj.seek(start)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "179", "colour": "orange", "code": "                response.body = file_generator_limited(fileobj, r_len)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "180", "colour": "orange", "code": "            else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "181", "colour": "orange", "code": "                # Return a multipart/byteranges response.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "182", "colour": "orange", "code": "                response.status = \"206 Partial Content\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "183", "colour": "orange", "code": "                try:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "184", "colour": "orange", "code": "                    # Python 3\n", "error": "none", "author": "tom@organisms.be"}, {"index": "185", "colour": "orange", "code": "                    from email.generator import _make_boundary as choose_boundary\n", "error": "none", "author": "tom@organisms.be"}, {"index": "186", "colour": "orange", "code": "                except ImportError:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "187", "colour": "orange", "code": "                    # Python 2\n", "error": "none", "author": "tom@organisms.be"}, {"index": "188", "colour": "orange", "code": "                    from mimetools import choose_boundary\n", "error": "none", "author": "tom@organisms.be"}, {"index": "189", "colour": "orange", "code": "                boundary = choose_boundary()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "190", "colour": "orange", "code": "                ct = \"multipart/byteranges; boundary=%s\" % boundary\n", "error": "none", "author": "tom@organisms.be"}, {"index": "191", "colour": "orange", "code": "                response.headers['Content-Type'] = ct\n", "error": "none", "author": "tom@organisms.be"}, {"index": "192", "colour": "orange", "code": "                if \"Content-Length\" in response.headers:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "193", "colour": "orange", "code": "                    # Delete Content-Length header so finalize() recalcs it.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "194", "colour": "orange", "code": "                    del response.headers[\"Content-Length\"]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "195", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "196", "colour": "orange", "code": "                def file_ranges():\n", "error": "none", "author": "tom@organisms.be"}, {"index": "197", "colour": "orange", "code": "                    # Apache compatibility:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "198", "colour": "orange", "code": "                    yield ntob(\"\\r\\n\")\n", "error": "none", "author": "tom@organisms.be"}, {"index": "199", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "200", "colour": "orange", "code": "                    for start, stop in r:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "201", "colour": "orange", "code": "                        if debug:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "202", "colour": "orange", "code": "                            cherrypy.log('Multipart; start: %r, stop: %r' % (start, stop),\n", "error": "none", "author": "tom@organisms.be"}, {"index": "203", "colour": "orange", "code": "                                         'TOOLS.STATIC')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "204", "colour": "orange", "code": "                        yield ntob(\"--\" + boundary, 'ascii')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "205", "colour": "orange", "code": "                        yield ntob(\"\\r\\nContent-type: %s\" % content_type, 'ascii')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "206", "colour": "orange", "code": "                        yield ntob(\"\\r\\nContent-range: bytes %s-%s/%s\\r\\n\\r\\n\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "207", "colour": "orange", "code": "                                   % (start, stop - 1, content_length), 'ascii')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "208", "colour": "orange", "code": "                        fileobj.seek(start)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "209", "colour": "orange", "code": "                        for chunk in file_generator_limited(fileobj, stop-start):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "210", "colour": "orange", "code": "                            yield chunk\n", "error": "none", "author": "tom@organisms.be"}, {"index": "211", "colour": "orange", "code": "                        yield ntob(\"\\r\\n\")\n", "error": "none", "author": "tom@organisms.be"}, {"index": "212", "colour": "orange", "code": "                    # Final boundary\n", "error": "none", "author": "tom@organisms.be"}, {"index": "213", "colour": "orange", "code": "                    yield ntob(\"--\" + boundary + \"--\", 'ascii')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "214", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "215", "colour": "orange", "code": "                    # Apache compatibility:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "216", "colour": "orange", "code": "                    yield ntob(\"\\r\\n\")\n", "error": "none", "author": "tom@organisms.be"}, {"index": "217", "colour": "orange", "code": "                response.body = file_ranges()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "218", "colour": "orange", "code": "            return response.body\n", "error": "none", "author": "tom@organisms.be"}, {"index": "219", "colour": "orange", "code": "        else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "220", "colour": "orange", "code": "            if debug:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "221", "colour": "orange", "code": "                cherrypy.log('No byteranges requested', 'TOOLS.STATIC')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "222", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "223", "colour": "orange", "code": "    # Set Content-Length and use an iterable (file object)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "224", "colour": "orange", "code": "    #   this way CP won't load the whole file in memory\n", "error": "none", "author": "tom@organisms.be"}, {"index": "225", "colour": "orange", "code": "    response.headers['Content-Length'] = content_length\n", "error": "none", "author": "tom@organisms.be"}, {"index": "226", "colour": "orange", "code": "    response.body = fileobj\n", "error": "none", "author": "tom@organisms.be"}, {"index": "227", "colour": "orange", "code": "    return response.body\n", "error": "none", "author": "tom@organisms.be"}, {"index": "228", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "229", "colour": "orange", "code": "def serve_download(path, name=None):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "230", "colour": "orange", "code": "    \"\"\"Serve 'path' as an application/x-download attachment.\"\"\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "231", "colour": "orange", "code": "    # This is such a common idiom I felt it deserved its own wrapper.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "232", "colour": "orange", "code": "    return serve_file(path, \"application/x-download\", \"attachment\", name)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "233", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "234", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "235", "colour": "orange", "code": "def _attempt(filename, content_types, debug=False):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "236", "colour": "orange", "code": "    if debug:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "237", "colour": "orange", "code": "        cherrypy.log('Attempting %r (content_types %r)' %\n", "error": "none", "author": "tom@organisms.be"}, {"index": "238", "colour": "orange", "code": "                     (filename, content_types), 'TOOLS.STATICDIR')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "239", "colour": "orange", "code": "    try:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "240", "colour": "orange", "code": "        # you can set the content types for a\n", "error": "none", "author": "tom@organisms.be"}, {"index": "241", "colour": "orange", "code": "        # complete directory per extension\n", "error": "none", "author": "tom@organisms.be"}, {"index": "242", "colour": "orange", "code": "        content_type = None\n", "error": "none", "author": "tom@organisms.be"}, {"index": "243", "colour": "orange", "code": "        if content_types:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "244", "colour": "green", "code": "            r, ext = os.path.splitext(filename)\n", "error": "W", "author": "tom@organisms.be"}, {"index": "245", "colour": "orange", "code": "            content_type = content_types.get(ext[1:], None)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "246", "colour": "orange", "code": "        serve_file(filename, content_type=content_type, debug=debug)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "247", "colour": "orange", "code": "        return True\n", "error": "none", "author": "tom@organisms.be"}, {"index": "248", "colour": "orange", "code": "    except cherrypy.NotFound:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "249", "colour": "orange", "code": "        # If we didn't find the static file, continue handling the\n", "error": "none", "author": "tom@organisms.be"}, {"index": "250", "colour": "orange", "code": "        # request. We might find a dynamic handler instead.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "251", "colour": "orange", "code": "        if debug:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "252", "colour": "orange", "code": "            cherrypy.log('NotFound', 'TOOLS.STATICFILE')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "253", "colour": "orange", "code": "        return False\n", "error": "none", "author": "tom@organisms.be"}, {"index": "254", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "255", "colour": "blue", "code": "def staticdir(section, dir, root=\"\", match=\"\", content_types=None, index=\"\",\n", "error": "R", "author": "tom@organisms.be"}, {"index": "256", "colour": "orange", "code": "              debug=False):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "257", "colour": "orange", "code": "    \"\"\"Serve a static resource from the given (root +) dir.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "258", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "259", "colour": "orange", "code": "    match\n", "error": "none", "author": "tom@organisms.be"}, {"index": "260", "colour": "orange", "code": "        If given, request.path_info will be searched for the given\n", "error": "none", "author": "tom@organisms.be"}, {"index": "261", "colour": "orange", "code": "        regular expression before attempting to serve static content.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "262", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "263", "colour": "orange", "code": "    content_types\n", "error": "none", "author": "tom@organisms.be"}, {"index": "264", "colour": "orange", "code": "        If given, it should be a Python dictionary of\n", "error": "none", "author": "tom@organisms.be"}, {"index": "265", "colour": "orange", "code": "        {file-extension: content-type} pairs, where 'file-extension' is\n", "error": "none", "author": "tom@organisms.be"}, {"index": "266", "colour": "orange", "code": "        a string (e.g. \"gif\") and 'content-type' is the value to write\n", "error": "none", "author": "tom@organisms.be"}, {"index": "267", "colour": "orange", "code": "        out in the Content-Type response header (e.g. \"image/gif\").\n", "error": "none", "author": "tom@organisms.be"}, {"index": "268", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "269", "colour": "orange", "code": "    index\n", "error": "none", "author": "tom@organisms.be"}, {"index": "270", "colour": "orange", "code": "        If provided, it should be the (relative) name of a file to\n", "error": "none", "author": "tom@organisms.be"}, {"index": "271", "colour": "orange", "code": "        serve for directory requests. For example, if the dir argument is\n", "error": "none", "author": "tom@organisms.be"}, {"index": "272", "colour": "orange", "code": "        '/home/me', the Request-URI is 'myapp', and the index arg is\n", "error": "none", "author": "tom@organisms.be"}, {"index": "273", "colour": "orange", "code": "        'index.html', the file '/home/me/myapp/index.html' will be sought.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "274", "colour": "orange", "code": "    \"\"\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "275", "colour": "orange", "code": "    request = cherrypy.serving.request\n", "error": "none", "author": "tom@organisms.be"}, {"index": "276", "colour": "orange", "code": "    if request.method not in ('GET', 'HEAD'):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "277", "colour": "orange", "code": "        if debug:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "278", "colour": "orange", "code": "            cherrypy.log('request.method not GET or HEAD', 'TOOLS.STATICDIR')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "279", "colour": "orange", "code": "        return False\n", "error": "none", "author": "tom@organisms.be"}, {"index": "280", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "281", "colour": "orange", "code": "    if match and not re.search(match, request.path_info):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "282", "colour": "orange", "code": "        if debug:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "283", "colour": "orange", "code": "            cherrypy.log('request.path_info %r does not match pattern %r' %\n", "error": "none", "author": "tom@organisms.be"}, {"index": "284", "colour": "orange", "code": "                         (request.path_info, match), 'TOOLS.STATICDIR')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "285", "colour": "orange", "code": "        return False\n", "error": "none", "author": "tom@organisms.be"}, {"index": "286", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "287", "colour": "orange", "code": "    # Allow the use of '~' to refer to a user's home directory.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "288", "colour": "orange", "code": "    dir = os.path.expanduser(dir)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "289", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "290", "colour": "orange", "code": "    # If dir is relative, make absolute using \"root\".\n", "error": "none", "author": "tom@organisms.be"}, {"index": "291", "colour": "orange", "code": "    if not os.path.isabs(dir):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "292", "colour": "orange", "code": "        if not root:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "293", "colour": "orange", "code": "            msg = \"Static dir requires an absolute dir (or root).\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "294", "colour": "orange", "code": "            if debug:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "295", "colour": "orange", "code": "                cherrypy.log(msg, 'TOOLS.STATICDIR')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "296", "colour": "orange", "code": "            raise ValueError(msg)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "297", "colour": "orange", "code": "        dir = os.path.join(root, dir)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "298", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "299", "colour": "orange", "code": "    # Determine where we are in the object tree relative to 'section'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "300", "colour": "orange", "code": "    # (where the static tool was defined).\n", "error": "none", "author": "tom@organisms.be"}, {"index": "301", "colour": "orange", "code": "    if section == 'global':\n", "error": "none", "author": "tom@organisms.be"}, {"index": "302", "colour": "orange", "code": "        section = \"/\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "303", "colour": "orange", "code": "    section = section.rstrip(r\"\\/\")\n", "error": "none", "author": "tom@organisms.be"}, {"index": "304", "colour": "orange", "code": "    branch = request.path_info[len(section) + 1:]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "305", "colour": "orange", "code": "    branch = unquote(branch.lstrip(r\"\\/\"))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "306", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "307", "colour": "orange", "code": "    # If branch is \"\", filename will end in a slash\n", "error": "none", "author": "tom@organisms.be"}, {"index": "308", "colour": "orange", "code": "    filename = os.path.join(dir, branch)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "309", "colour": "orange", "code": "    if debug:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "310", "colour": "orange", "code": "        cherrypy.log('Checking file %r to fulfill %r' %\n", "error": "none", "author": "tom@organisms.be"}, {"index": "311", "colour": "orange", "code": "                     (filename, request.path_info), 'TOOLS.STATICDIR')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "312", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "313", "colour": "orange", "code": "    # There's a chance that the branch pulled from the URL might\n", "error": "none", "author": "tom@organisms.be"}, {"index": "314", "colour": "orange", "code": "    # have \"..\" or similar uplevel attacks in it. Check that the final\n", "error": "none", "author": "tom@organisms.be"}, {"index": "315", "colour": "orange", "code": "    # filename is a child of dir.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "316", "colour": "orange", "code": "    if not os.path.normpath(filename).startswith(os.path.normpath(dir)):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "317", "colour": "orange", "code": "        raise cherrypy.HTTPError(403) # Forbidden\n", "error": "none", "author": "tom@organisms.be"}, {"index": "318", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "319", "colour": "orange", "code": "    handled = _attempt(filename, content_types)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "320", "colour": "orange", "code": "    if not handled:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "321", "colour": "orange", "code": "        # Check for an index file if a folder was requested.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "322", "colour": "orange", "code": "        if index:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "323", "colour": "orange", "code": "            handled = _attempt(os.path.join(filename, index), content_types)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "324", "colour": "orange", "code": "            if handled:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "325", "colour": "orange", "code": "                request.is_index = filename[-1] in (r\"\\/\")\n", "error": "none", "author": "tom@organisms.be"}, {"index": "326", "colour": "orange", "code": "    return handled\n", "error": "none", "author": "tom@organisms.be"}, {"index": "327", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "328", "colour": "orange", "code": "def staticfile(filename, root=None, match=\"\", content_types=None, debug=False):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "329", "colour": "orange", "code": "    \"\"\"Serve a static resource from the given (root +) filename.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "330", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "331", "colour": "orange", "code": "    match\n", "error": "none", "author": "tom@organisms.be"}, {"index": "332", "colour": "orange", "code": "        If given, request.path_info will be searched for the given\n", "error": "none", "author": "tom@organisms.be"}, {"index": "333", "colour": "orange", "code": "        regular expression before attempting to serve static content.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "334", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "335", "colour": "orange", "code": "    content_types\n", "error": "none", "author": "tom@organisms.be"}, {"index": "336", "colour": "orange", "code": "        If given, it should be a Python dictionary of\n", "error": "none", "author": "tom@organisms.be"}, {"index": "337", "colour": "orange", "code": "        {file-extension: content-type} pairs, where 'file-extension' is\n", "error": "none", "author": "tom@organisms.be"}, {"index": "338", "colour": "orange", "code": "        a string (e.g. \"gif\") and 'content-type' is the value to write\n", "error": "none", "author": "tom@organisms.be"}, {"index": "339", "colour": "orange", "code": "        out in the Content-Type response header (e.g. \"image/gif\").\n", "error": "none", "author": "tom@organisms.be"}, {"index": "340", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "341", "colour": "orange", "code": "    \"\"\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "342", "colour": "orange", "code": "    request = cherrypy.serving.request\n", "error": "none", "author": "tom@organisms.be"}, {"index": "343", "colour": "orange", "code": "    if request.method not in ('GET', 'HEAD'):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "344", "colour": "orange", "code": "        if debug:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "345", "colour": "orange", "code": "            cherrypy.log('request.method not GET or HEAD', 'TOOLS.STATICFILE')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "346", "colour": "orange", "code": "        return False\n", "error": "none", "author": "tom@organisms.be"}, {"index": "347", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "348", "colour": "orange", "code": "    if match and not re.search(match, request.path_info):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "349", "colour": "orange", "code": "        if debug:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "350", "colour": "orange", "code": "            cherrypy.log('request.path_info %r does not match pattern %r' %\n", "error": "none", "author": "tom@organisms.be"}, {"index": "351", "colour": "orange", "code": "                         (request.path_info, match), 'TOOLS.STATICFILE')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "352", "colour": "orange", "code": "        return False\n", "error": "none", "author": "tom@organisms.be"}, {"index": "353", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "354", "colour": "orange", "code": "    # If filename is relative, make absolute using \"root\".\n", "error": "none", "author": "tom@organisms.be"}, {"index": "355", "colour": "orange", "code": "    if not os.path.isabs(filename):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "356", "colour": "orange", "code": "        if not root:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "357", "colour": "orange", "code": "            msg = \"Static tool requires an absolute filename (got '%s').\" % filename\n", "error": "none", "author": "tom@organisms.be"}, {"index": "358", "colour": "orange", "code": "            if debug:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "359", "colour": "orange", "code": "                cherrypy.log(msg, 'TOOLS.STATICFILE')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "360", "colour": "orange", "code": "            raise ValueError(msg)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "361", "colour": "orange", "code": "        filename = os.path.join(root, filename)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "362", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "363", "colour": "orange", "code": "    return _attempt(filename, content_types, debug=debug)\n", "error": "none", "author": "tom@organisms.be"}]]}