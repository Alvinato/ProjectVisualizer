{"path": "/home/asumal/git/cs410/pattern/pattern/text/nl/inflect.py", "lines": [{"index": "1", "colour": "orange", "code": "#### PATTERN | NL | INFLECT ########################################################################\n", "error": "none", "author": "tom@organisms.be"}, {"index": "2", "colour": "orange", "code": "# -*- coding: utf-8 -*-\n", "error": "none", "author": "tom@organisms.be"}, {"index": "3", "colour": "orange", "code": "# Copyright (c) 2010 University of Antwerp, Belgium\n", "error": "none", "author": "tom@organisms.be"}, {"index": "4", "colour": "orange", "code": "# Author: Tom De Smedt <tom@organisms.be>\n", "error": "none", "author": "tom@organisms.be"}, {"index": "5", "colour": "orange", "code": "# License: BSD (see LICENSE.txt for details).\n", "error": "none", "author": "tom@organisms.be"}, {"index": "6", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "7", "colour": "orange", "code": "####################################################################################################\n", "error": "none", "author": "tom@organisms.be"}, {"index": "8", "colour": "orange", "code": "# Regular expressions-based rules for Dutch word inflection:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "9", "colour": "orange", "code": "# - pluralization and singularization of nouns,\n", "error": "none", "author": "tom@organisms.be"}, {"index": "10", "colour": "orange", "code": "# - conjugation of verbs,\n", "error": "none", "author": "tom@organisms.be"}, {"index": "11", "colour": "orange", "code": "# - predicative and attributive of adjectives.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "12", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "13", "colour": "orange", "code": "# Accuracy (measured on CELEX Dutch morphology word forms):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "14", "colour": "orange", "code": "# 79% for pluralize()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "15", "colour": "orange", "code": "# 91% for singularize()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "16", "colour": "orange", "code": "# 90% for Verbs.find_lemma()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "17", "colour": "orange", "code": "# 88% for Verbs.find_lexeme()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "18", "colour": "orange", "code": "# 99% for predicative()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "19", "colour": "orange", "code": "# 99% for attributive()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "20", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "21", "colour": "orange", "code": "import os\n", "error": "none", "author": "tom@organisms.be"}, {"index": "22", "colour": "orange", "code": "import sys\n", "error": "none", "author": "tom@organisms.be"}, {"index": "23", "colour": "orange", "code": "import re\n", "error": "none", "author": "tom@organisms.be"}, {"index": "24", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "25", "colour": "orange", "code": "try:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "26", "colour": "orange", "code": "    MODULE = os.path.dirname(os.path.realpath(__file__))\n", "error": "none", "author": "tom@alice-2.local"}, {"index": "27", "colour": "green", "code": "except:\n", "error": "W", "author": "tom@organisms.be"}, {"index": "28", "colour": "orange", "code": "    MODULE = \"\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "29", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "30", "colour": "orange", "code": "sys.path.insert(0, os.path.join(MODULE, \"..\", \"..\", \"..\", \"..\"))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "31", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "32", "colour": "orange", "code": "from pattern.text import Verbs as _Verbs\n", "error": "none", "author": "tom@organisms.be"}, {"index": "33", "colour": "green", "code": "from pattern.text import (\n", "error": "W", "author": "tom@organisms.be"}, {"index": "34", "colour": "orange", "code": "    INFINITIVE, PRESENT, PAST, FUTURE,\n", "error": "none", "author": "tom@organisms.be"}, {"index": "35", "colour": "orange", "code": "    FIRST, SECOND, THIRD,\n", "error": "none", "author": "tom@organisms.be"}, {"index": "36", "colour": "orange", "code": "    SINGULAR, PLURAL, SG, PL,\n", "error": "none", "author": "tom@organisms.be"}, {"index": "37", "colour": "orange", "code": "    PROGRESSIVE,\n", "error": "none", "author": "tom@organisms.be"}, {"index": "38", "colour": "orange", "code": "    PARTICIPLE\n", "error": "none", "author": "tom@organisms.be"}, {"index": "39", "colour": "orange", "code": ")\n", "error": "none", "author": "tom@organisms.be"}, {"index": "40", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "41", "colour": "orange", "code": "sys.path.pop(0)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "42", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "43", "colour": "orange", "code": "VERB, NOUN, ADJECTIVE, ADVERB = \"VB\", \"NN\", \"JJ\", \"RB\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "44", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "45", "colour": "orange", "code": "VOWELS = (\"a\", \"e\", \"i\", \"o\", \"u\")\n", "error": "none", "author": "tom@organisms.be"}, {"index": "46", "colour": "orange", "code": "re_vowel = re.compile(r\"a|e|i|o|u|y\", re.I)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "47", "colour": "orange", "code": "is_vowel = lambda ch: ch in VOWELS\n", "error": "none", "author": "tom@organisms.be"}, {"index": "48", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "49", "colour": "orange", "code": "#### PLURALIZE ######################################################################################\n", "error": "none", "author": "tom@organisms.be"}, {"index": "50", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "51", "colour": "orange", "code": "plural_irregular_en = set((\"dag\", \"dak\", \"dal\", \"pad\", \"vat\", \"weg\"))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "52", "colour": "orange", "code": "plural_irregular_een = set((\"fee\", \"genie\", \"idee\", \"orgie\", \"ree\"))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "53", "colour": "orange", "code": "plural_irregular_eren = set((\"blad\", \"ei\", \"gelid\", \"gemoed\", \"kalf\", \"kind\", \"lied\", \"rad\", \"rund\"))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "54", "colour": "orange", "code": "plural_irregular_deren = set((\"hoen\", \"been\"))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "55", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "56", "colour": "orange", "code": "plural_irregular = {\n", "error": "none", "author": "tom@organisms.be"}, {"index": "57", "colour": "orange", "code": "     \"centrum\": \"centra\",\n", "error": "none", "author": "tom@organisms.be"}, {"index": "58", "colour": "orange", "code": "    \"escargot\": \"escargots\",\n", "error": "none", "author": "tom@organisms.be"}, {"index": "59", "colour": "orange", "code": "      \"gedrag\": \"gedragingen\",\n", "error": "none", "author": "tom@organisms.be"}, {"index": "60", "colour": "orange", "code": "       \"gelid\": \"gelederen\",\n", "error": "none", "author": "tom@organisms.be"}, {"index": "61", "colour": "orange", "code": "       \"kaars\": \"kaarsen\",\n", "error": "none", "author": "tom@organisms.be"}, {"index": "62", "colour": "orange", "code": "       \"kleed\": \"kleren\",\n", "error": "none", "author": "tom@organisms.be"}, {"index": "63", "colour": "orange", "code": "         \"koe\": \"koeien\",\n", "error": "none", "author": "tom@organisms.be"}, {"index": "64", "colour": "orange", "code": "         \"lam\": \"lammeren\",\n", "error": "none", "author": "tom@organisms.be"}, {"index": "65", "colour": "orange", "code": "      \"museum\": \"museums\",\n", "error": "none", "author": "tom@organisms.be"}, {"index": "66", "colour": "orange", "code": "        \"stad\": \"steden\",\n", "error": "none", "author": "tom@organisms.be"}, {"index": "67", "colour": "orange", "code": "       \"stoel\": \"stoelen\",\n", "error": "none", "author": "tom@organisms.be"}, {"index": "68", "colour": "orange", "code": "         \"vlo\": \"vlooien\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "69", "colour": "orange", "code": "}\n", "error": "none", "author": "tom@organisms.be"}, {"index": "70", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "71", "colour": "blue", "code": "def pluralize(word, pos=NOUN, custom={}):\n", "error": "R", "author": "tom@organisms.be"}, {"index": "72", "colour": "orange", "code": "    \"\"\" Returns the plural of a given word.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "73", "colour": "orange", "code": "        For example: stad => steden.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "74", "colour": "orange", "code": "        The custom dictionary is for user-defined replacements.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "75", "colour": "orange", "code": "    \"\"\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "76", "colour": "orange", "code": "    if word in custom.keys():\n", "error": "none", "author": "tom@organisms.be"}, {"index": "77", "colour": "orange", "code": "        return custom[word]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "78", "colour": "orange", "code": "    w = word.lower()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "79", "colour": "orange", "code": "    if pos == NOUN:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "80", "colour": "orange", "code": "        if w in plural_irregular_en:    # dag => dagen\n", "error": "none", "author": "tom@organisms.be"}, {"index": "81", "colour": "orange", "code": "            return w + \"en\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "82", "colour": "orange", "code": "        if w in plural_irregular_een:   # fee => fee\u00ebn\n", "error": "none", "author": "tom@organisms.be"}, {"index": "83", "colour": "orange", "code": "            return w + u\"\u00ebn\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "84", "colour": "orange", "code": "        if w in plural_irregular_eren:  # blad => bladeren\n", "error": "none", "author": "tom@organisms.be"}, {"index": "85", "colour": "orange", "code": "            return w + \"eren\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "86", "colour": "orange", "code": "        if w in plural_irregular_deren: # been => beenderen\n", "error": "none", "author": "tom@organisms.be"}, {"index": "87", "colour": "orange", "code": "            return w + \"deren\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "88", "colour": "orange", "code": "        if w in plural_irregular:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "89", "colour": "orange", "code": "            return plural_irregular[w]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "90", "colour": "orange", "code": "        # Words ending in -icus get -ici: academicus => academici\n", "error": "none", "author": "tom@organisms.be"}, {"index": "91", "colour": "orange", "code": "        if w.endswith(\"icus\"):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "92", "colour": "orange", "code": "            return w[:-2] + \"i\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "93", "colour": "orange", "code": "        # Words ending in -s usually get -sen: les => lessen.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "94", "colour": "orange", "code": "        if w.endswith((\"es\", \"as\", \"nis\", \"ris\", \"vis\")):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "95", "colour": "orange", "code": "            return w + \"sen\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "96", "colour": "orange", "code": "        # Words ending in -s usually get -zen: huis => huizen.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "97", "colour": "orange", "code": "        if w.endswith(\"s\") and not w.endswith((\"us\", \"ts\", \"mens\")):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "98", "colour": "orange", "code": "            return w[:-1] + \"zen\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "99", "colour": "orange", "code": "        # Words ending in -f usually get -ven: brief => brieven.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "100", "colour": "orange", "code": "        if w.endswith(\"f\"):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "101", "colour": "orange", "code": "            return w[:-1] + \"ven\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "102", "colour": "orange", "code": "        # Words ending in -um get -ums: museum => museums.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "103", "colour": "orange", "code": "        if w.endswith(\"um\"):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "104", "colour": "orange", "code": "            return w + \"s\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "105", "colour": "orange", "code": "        # Words ending in unstressed -ee or -ie get -\u00ebn: bacterie => bacteri\u00ebn\n", "error": "none", "author": "tom@organisms.be"}, {"index": "106", "colour": "orange", "code": "        if w.endswith(\"ie\"):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "107", "colour": "orange", "code": "            return w + \"s\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "108", "colour": "orange", "code": "        if w.endswith((\"ee\",\"ie\")):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "109", "colour": "orange", "code": "            return w[:-1] + u\"\u00ebn\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "110", "colour": "orange", "code": "        # Words ending in -heid get -heden: mogelijkheid => mogelijkheden\n", "error": "none", "author": "tom@organisms.be"}, {"index": "111", "colour": "orange", "code": "        if w.endswith(\"heid\"):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "112", "colour": "orange", "code": "            return w[:-4] + \"heden\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "113", "colour": "orange", "code": "        # Words ending in -e -el -em -en -er -ie get -s: broer => broers.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "114", "colour": "orange", "code": "        if w.endswith((u\"\u00e9\", \"e\", \"el\", \"em\", \"en\", \"er\", \"eu\", \"ie\", \"ue\", \"ui\", \"eau\", \"ah\")):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "115", "colour": "orange", "code": "            return w + \"s\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "116", "colour": "orange", "code": "        # Words ending in a vowel get 's: auto => auto's.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "117", "colour": "orange", "code": "        if w.endswith(VOWELS) or w.endswith(\"y\") and not w.endswith(\"e\"):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "118", "colour": "orange", "code": "            return w + \"'s\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "119", "colour": "orange", "code": "        # Words ending in -or always get -en: motor => motoren.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "120", "colour": "orange", "code": "        if w.endswith(\"or\"):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "121", "colour": "orange", "code": "            return w + \"en\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "122", "colour": "orange", "code": "        # Words ending in -ij get -en: boerderij => boerderijen.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "123", "colour": "orange", "code": "        if w.endswith(\"ij\"):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "124", "colour": "orange", "code": "            return w + \"en\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "125", "colour": "orange", "code": "        # Words ending in two consonants get -en: hand => handen.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "126", "colour": "orange", "code": "        if len(w) > 1 and not is_vowel(w[-1]) and not is_vowel(w[-2]):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "127", "colour": "orange", "code": "            return w + \"en\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "128", "colour": "orange", "code": "        # Words ending in one consonant with a short sound: fles => flessen.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "129", "colour": "orange", "code": "        if len(w) > 2 and not is_vowel(w[-1]) and not is_vowel(w[-3]):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "130", "colour": "orange", "code": "            return w + w[-1] + \"en\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "131", "colour": "orange", "code": "        # Words ending in one consonant with a long sound: raam => ramen.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "132", "colour": "orange", "code": "        if len(w) > 2 and not is_vowel(w[-1]) and w[-2] == w[-3]:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "133", "colour": "orange", "code": "            return w[:-2] + w[-1] + \"en\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "134", "colour": "orange", "code": "        return w + \"en\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "135", "colour": "orange", "code": "    return w\n", "error": "none", "author": "tom@organisms.be"}, {"index": "136", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "137", "colour": "orange", "code": "#### SINGULARIZE ###################################################################################\n", "error": "none", "author": "tom@organisms.be"}, {"index": "138", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "139", "colour": "orange", "code": "singular_irregular = dict((v,k) for k,v in plural_irregular.items())\n", "error": "none", "author": "tom@organisms.be"}, {"index": "140", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "141", "colour": "blue", "code": "def singularize(word, pos=NOUN, custom={}):\n", "error": "R", "author": "tom@organisms.be"}, {"index": "142", "colour": "orange", "code": "    if word in custom.keys():\n", "error": "none", "author": "tom@organisms.be"}, {"index": "143", "colour": "orange", "code": "        return custom[word]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "144", "colour": "orange", "code": "    w = word.lower()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "145", "colour": "orange", "code": "    if pos == NOUN and w in singular_irregular:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "146", "colour": "orange", "code": "        return singular_irregular[w]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "147", "colour": "orange", "code": "    if pos == NOUN and w.endswith((u\"\u00ebn\", \"en\", \"s\", \"i\")):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "148", "colour": "orange", "code": "        # auto's => auto\n", "error": "none", "author": "tom@organisms.be"}, {"index": "149", "colour": "orange", "code": "        if w.endswith(\"'s\"):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "150", "colour": "orange", "code": "            return w[:-2]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "151", "colour": "orange", "code": "        # broers => broer\n", "error": "none", "author": "tom@organisms.be"}, {"index": "152", "colour": "orange", "code": "        if w.endswith(\"s\"):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "153", "colour": "orange", "code": "            return w[:-1]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "154", "colour": "orange", "code": "        # academici => academicus\n", "error": "none", "author": "tom@organisms.be"}, {"index": "155", "colour": "orange", "code": "        if w.endswith(\"ici\"):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "156", "colour": "orange", "code": "            return w[:-1] + \"us\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "157", "colour": "orange", "code": "        # fee\u00ebn => fee\n", "error": "none", "author": "tom@organisms.be"}, {"index": "158", "colour": "orange", "code": "        if w.endswith(u\"\u00ebn\") and w[:-2] in plural_irregular_een:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "159", "colour": "orange", "code": "            return w[:-2]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "160", "colour": "orange", "code": "        # bacteri\u00ebn => bacterie\n", "error": "none", "author": "tom@organisms.be"}, {"index": "161", "colour": "orange", "code": "        if w.endswith(u\"\u00ebn\"):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "162", "colour": "orange", "code": "            return w[:-2] + \"e\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "163", "colour": "orange", "code": "        # mogelijkheden => mogelijkheid\n", "error": "none", "author": "tom@organisms.be"}, {"index": "164", "colour": "orange", "code": "        if w.endswith(\"heden\"):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "165", "colour": "orange", "code": "            return w[:-5] + \"heid\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "166", "colour": "orange", "code": "        # artikelen => artikel\n", "error": "none", "author": "tom@organisms.be"}, {"index": "167", "colour": "orange", "code": "        if w.endswith(\"elen\") and not w.endswith(\"delen\"):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "168", "colour": "orange", "code": "            return w[:-2]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "169", "colour": "orange", "code": "        # chinezen => chinees\n", "error": "none", "author": "tom@organisms.be"}, {"index": "170", "colour": "orange", "code": "        if w.endswith(\"ezen\"):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "171", "colour": "orange", "code": "            return w[:-4] + \"ees\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "172", "colour": "orange", "code": "        # neven => neef\n", "error": "none", "author": "tom@organisms.be"}, {"index": "173", "colour": "orange", "code": "        if w.endswith(\"even\") and len(w) > 4 and not is_vowel(w[-5]):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "174", "colour": "orange", "code": "            return w[:-4] + \"eef\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "175", "colour": "orange", "code": "        if w.endswith(\"en\"):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "176", "colour": "orange", "code": "            w = w[:-2]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "177", "colour": "orange", "code": "            # ogen => oog\n", "error": "none", "author": "tom@organisms.be"}, {"index": "178", "colour": "orange", "code": "            if w in (\"og\",\"om\",\"ur\"):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "179", "colour": "orange", "code": "                return w[:-1] + w[-2] + w[-1]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "180", "colour": "orange", "code": "            # hoenderen => hoen\n", "error": "none", "author": "tom@organisms.be"}, {"index": "181", "colour": "orange", "code": "            if w.endswith(\"der\") and w[:-3] in plural_irregular_deren:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "182", "colour": "orange", "code": "                return w[:-3]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "183", "colour": "orange", "code": "            # eieren => ei\n", "error": "none", "author": "tom@organisms.be"}, {"index": "184", "colour": "orange", "code": "            if w.endswith(\"er\") and w[:-2] in plural_irregular_eren:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "185", "colour": "orange", "code": "                return w[:-2]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "186", "colour": "orange", "code": "            # dagen => dag (not daag)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "187", "colour": "orange", "code": "            if w in plural_irregular_en:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "188", "colour": "orange", "code": "                return w\n", "error": "none", "author": "tom@organisms.be"}, {"index": "189", "colour": "orange", "code": "            # huizen => huis\n", "error": "none", "author": "tom@organisms.be"}, {"index": "190", "colour": "orange", "code": "            if w.endswith(\"z\"):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "191", "colour": "orange", "code": "                return w[:-1] + \"s\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "192", "colour": "orange", "code": "            # brieven => brief\n", "error": "none", "author": "tom@organisms.be"}, {"index": "193", "colour": "orange", "code": "            if w.endswith(\"v\"):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "194", "colour": "orange", "code": "                return w[:-1] + \"f\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "195", "colour": "orange", "code": "             # motoren => motor\n", "error": "none", "author": "tom@organisms.be"}, {"index": "196", "colour": "orange", "code": "            if w.endswith(\"or\"):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "197", "colour": "orange", "code": "                return w\n", "error": "none", "author": "tom@organisms.be"}, {"index": "198", "colour": "orange", "code": "            # flessen => fles\n", "error": "none", "author": "tom@organisms.be"}, {"index": "199", "colour": "orange", "code": "            if len(w) > 1 and not is_vowel(w[-1]) and w[-1] == w[-2]:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "200", "colour": "orange", "code": "                return w[:-1]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "201", "colour": "orange", "code": "            # baarden => baard\n", "error": "none", "author": "tom@organisms.be"}, {"index": "202", "colour": "orange", "code": "            if len(w) > 1 and not is_vowel(w[-1]) and not is_vowel(w[-2]):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "203", "colour": "orange", "code": "                return w\n", "error": "none", "author": "tom@organisms.be"}, {"index": "204", "colour": "orange", "code": "            # boerderijen => boerderij\n", "error": "none", "author": "tom@organisms.be"}, {"index": "205", "colour": "orange", "code": "            if w.endswith(\"ij\"):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "206", "colour": "orange", "code": "                return w\n", "error": "none", "author": "tom@organisms.be"}, {"index": "207", "colour": "orange", "code": "            # idealen => ideaal\n", "error": "none", "author": "tom@organisms.be"}, {"index": "208", "colour": "orange", "code": "            if w.endswith((\"eal\", \"ean\", \"eol\", \"ial\", \"ian\", \"iat\", \"iol\")):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "209", "colour": "orange", "code": "                return w[:-1] + w[-2] + w[-1]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "210", "colour": "orange", "code": "            # ramen => raam\n", "error": "none", "author": "tom@organisms.be"}, {"index": "211", "colour": "orange", "code": "            if len(w) > 2 and not is_vowel(w[-1]) and is_vowel(w[-2]) and not is_vowel(w[-3]):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "212", "colour": "orange", "code": "                return w[:-1] + w[-2] + w[-1]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "213", "colour": "orange", "code": "            return w\n", "error": "none", "author": "tom@organisms.be"}, {"index": "214", "colour": "orange", "code": "    return w\n", "error": "none", "author": "tom@organisms.be"}, {"index": "215", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "216", "colour": "orange", "code": "#### VERB CONJUGATION ##############################################################################\n", "error": "none", "author": "tom@organisms.be"}, {"index": "217", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "218", "colour": "blue", "code": "class Verbs(_Verbs):\n", "error": "R", "author": "tom@organisms.be"}, {"index": "219", "colour": "orange", "code": "    \n", "error": "none", "author": "tom@organisms.be"}, {"index": "220", "colour": "orange", "code": "    def __init__(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "221", "colour": "orange", "code": "        _Verbs.__init__(self, os.path.join(MODULE, \"nl-verbs.txt\"),\n", "error": "none", "author": "tom@organisms.be"}, {"index": "222", "colour": "orange", "code": "            language = \"nl\",\n", "error": "none", "author": "tom@organisms.be"}, {"index": "223", "colour": "orange", "code": "              format = [0, 1, 2, 3, 7, 8, 17, 18, 19, 23, 25, 24, 16, 9, 10, 11, 15, 33, 26, 27, 28, 32],\n", "error": "none", "author": "tom@organisms.be"}, {"index": "224", "colour": "orange", "code": "             default = {\n", "error": "none", "author": "tom@organisms.be"}, {"index": "225", "colour": "orange", "code": "                 1: 0,   2: 0,   3: 0,   7: 0,  # present singular\n", "error": "none", "author": "tom@organisms.be"}, {"index": "226", "colour": "orange", "code": "                 4: 7,   5: 7,   6: 7,          # present plural\n", "error": "none", "author": "tom@organisms.be"}, {"index": "227", "colour": "orange", "code": "                17: 25, 18: 25, 19: 25, 23: 25, # past singular\n", "error": "none", "author": "tom@organisms.be"}, {"index": "228", "colour": "orange", "code": "                20: 23, 21: 23, 22: 23,         # past plural\n", "error": "none", "author": "tom@organisms.be"}, {"index": "229", "colour": "orange", "code": "                 9: 16, 10: 16, 11: 16, 15: 16, # present singular negated\n", "error": "none", "author": "tom@organisms.be"}, {"index": "230", "colour": "orange", "code": "                12: 15, 13: 15, 14: 15,         # present plural negated\n", "error": "none", "author": "tom@organisms.be"}, {"index": "231", "colour": "orange", "code": "                26: 33, 27: 33, 28: 33,         # past singular negated\n", "error": "none", "author": "tom@organisms.be"}, {"index": "232", "colour": "orange", "code": "                29: 32, 30: 32, 31: 32, 32: 33  # past plural negated\n", "error": "none", "author": "tom@organisms.be"}, {"index": "233", "colour": "orange", "code": "            })\n", "error": "none", "author": "tom@organisms.be"}, {"index": "234", "colour": "orange", "code": "    \n", "error": "none", "author": "tom@organisms.be"}, {"index": "235", "colour": "orange", "code": "    def load(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "236", "colour": "orange", "code": "        _Verbs.load(self)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "237", "colour": "orange", "code": "        self._inverse[\"was\"]   = \"zijn\" # Instead of \"wassen\".\n", "error": "none", "author": "tom@organisms.be"}, {"index": "238", "colour": "orange", "code": "        self._inverse[\"waren\"] = \"zijn\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "239", "colour": "orange", "code": "        self._inverse[\"zagen\"] = \"zien\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "240", "colour": "orange", "code": "        self._inverse[\"wist\"]  = \"weten\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "241", "colour": "orange", "code": "        self._inverse[\"zou\"]   = \"zullen\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "242", "colour": "orange", "code": "    \n", "error": "none", "author": "tom@organisms.be"}, {"index": "243", "colour": "blue", "code": "    def find_lemma(self, verb):\n", "error": "R", "author": "tom@organisms.be"}, {"index": "244", "colour": "orange", "code": "        \"\"\" Returns the base form of the given inflected verb, using a rule-based approach.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "245", "colour": "orange", "code": "            This is problematic if a verb ending in -e is given in the past tense or gerund.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "246", "colour": "orange", "code": "        \"\"\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "247", "colour": "orange", "code": "        v = verb.lower()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "248", "colour": "orange", "code": "        # Common prefixes: op-bouwen and ver-bouwen inflect like bouwen.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "249", "colour": "orange", "code": "        for prefix in (\"aan\", \"be\", \"her\", \"in\", \"mee\", \"ont\", \"op\", \"over\", \"uit\", \"ver\"):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "250", "colour": "orange", "code": "            if v.startswith(prefix) and v[len(prefix):] in self.inflections:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "251", "colour": "orange", "code": "                return prefix + self.inflections[v[len(prefix):]]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "252", "colour": "orange", "code": "        # Present participle -end: hengelend, knippend.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "253", "colour": "orange", "code": "        if v.endswith(\"end\"):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "254", "colour": "orange", "code": "            b = v[:-3]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "255", "colour": "orange", "code": "        # Past singular -de or -te: hengelde, knipte.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "256", "colour": "orange", "code": "        elif v.endswith((\"de\", \"det\", \"te\", \"tet\")):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "257", "colour": "orange", "code": "            b = v[:-2]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "258", "colour": "orange", "code": "        # Past plural -den or -ten: hengelden, knipten.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "259", "colour": "orange", "code": "        elif v.endswith((\"chten\"),):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "260", "colour": "orange", "code": "            b = v[:-2]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "261", "colour": "orange", "code": "        elif v.endswith((\"den\", \"ten\")) and len(v) > 3 and is_vowel(v[-4]):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "262", "colour": "orange", "code": "            b = v[:-2]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "263", "colour": "orange", "code": "        elif v.endswith((\"den\", \"ten\")):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "264", "colour": "orange", "code": "            b = v[:-3]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "265", "colour": "orange", "code": "        # Past participle ge- and -d or -t: gehengeld, geknipt.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "266", "colour": "orange", "code": "        elif v.endswith((\"d\",\"t\")) and v.startswith(\"ge\"):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "267", "colour": "orange", "code": "            b = v[2:-1]    \n", "error": "none", "author": "tom@organisms.be"}, {"index": "268", "colour": "orange", "code": "        # Present 2nd or 3rd singular: wordt, denkt, snakt, wacht.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "269", "colour": "orange", "code": "        elif v.endswith((\"cht\"),):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "270", "colour": "orange", "code": "            b = v\n", "error": "none", "author": "tom@organisms.be"}, {"index": "271", "colour": "orange", "code": "        elif v.endswith((\"dt\", \"bt\", \"gt\", \"kt\", \"mt\", \"pt\", \"wt\", \"xt\", \"aait\", \"ooit\")):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "272", "colour": "orange", "code": "            b = v[:-1]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "273", "colour": "orange", "code": "        elif v.endswith(\"t\") and len(v) > 2 and not is_vowel(v[-2]):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "274", "colour": "orange", "code": "            b = v[:-1]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "275", "colour": "orange", "code": "        elif v.endswith(\"en\") and len(v) > 3:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "276", "colour": "orange", "code": "            return v\n", "error": "none", "author": "tom@organisms.be"}, {"index": "277", "colour": "orange", "code": "        else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "278", "colour": "orange", "code": "            b = v\n", "error": "none", "author": "tom@organisms.be"}, {"index": "279", "colour": "orange", "code": "        # hengel => hengelen (and not hengellen)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "280", "colour": "orange", "code": "        if len(b) > 2 and b.endswith((\"el\", \"nder\", \"om\", \"tter\")) and not is_vowel(b[-3]):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "281", "colour": "orange", "code": "            pass\n", "error": "none", "author": "tom@organisms.be"}, {"index": "282", "colour": "orange", "code": "        # Long vowel followed by -f or -s: geef => geven.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "283", "colour": "orange", "code": "        elif len(b) > 2 and not is_vowel(b[-1]) and is_vowel(b[-2]) and is_vowel(b[-3])\\\n", "error": "none", "author": "tom@organisms.be"}, {"index": "284", "colour": "orange", "code": "          or b.endswith((\"ijf\", \"erf\"),):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "285", "colour": "orange", "code": "            if b.endswith(\"f\"): b = b[:-1] + \"v\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "286", "colour": "orange", "code": "            if b.endswith(\"s\"): b = b[:-1] + \"z\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "287", "colour": "orange", "code": "            if b[-2] == b[-3]: \n", "error": "none", "author": "tom@organisms.be"}, {"index": "288", "colour": "orange", "code": "                b = b[:-2] + b[-1]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "289", "colour": "orange", "code": "        # Short vowel followed by consonant: snak => snakken.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "290", "colour": "orange", "code": "        elif len(b) > 1 and not is_vowel(b[-1]) and is_vowel(b[-2]) and not b.endswith((\"er\",\"ig\")):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "291", "colour": "orange", "code": "            b = b + b[-1]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "292", "colour": "orange", "code": "        b = b + \"en\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "293", "colour": "orange", "code": "        b = b.replace(\"vven\", \"ven\") # omgevven => omgeven\n", "error": "none", "author": "tom@organisms.be"}, {"index": "294", "colour": "orange", "code": "        b = b.replace(\"zzen\", \"zen\") # genezzen => genezen\n", "error": "none", "author": "tom@organisms.be"}, {"index": "295", "colour": "orange", "code": "        b = b.replace(\"aen\", \"aan\")  # doorgaen => doorgaan\n", "error": "none", "author": "tom@organisms.be"}, {"index": "296", "colour": "orange", "code": "        return b\n", "error": "none", "author": "tom@organisms.be"}, {"index": "297", "colour": "orange", "code": "        \n", "error": "none", "author": "tom@organisms.be"}, {"index": "298", "colour": "orange", "code": "    def find_lexeme(self, verb):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "299", "colour": "orange", "code": "        \"\"\" For a regular verb (base form), returns the forms using a rule-based approach.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "300", "colour": "orange", "code": "        \"\"\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "301", "colour": "orange", "code": "        v = verb.lower()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "302", "colour": "orange", "code": "        # Stem = infinitive minus -en.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "303", "colour": "orange", "code": "        b = b0 = re.sub(\"en$\", \"\", v)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "304", "colour": "orange", "code": "        # zweven => zweef, graven => graaf\n", "error": "none", "author": "tom@organisms.be"}, {"index": "305", "colour": "orange", "code": "        if b.endswith(\"v\"): b = b[:-1] + \"f\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "306", "colour": "orange", "code": "        if b.endswith(\"z\"): b = b[:-1] + \"s\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "307", "colour": "orange", "code": "        # Vowels with a long sound are doubled, we need to guess how it sounds:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "308", "colour": "orange", "code": "        if len(b) > 2 and not is_vowel(b[-1]) and is_vowel(b[-2]) and not is_vowel(b[-3]):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "309", "colour": "orange", "code": "            if not v.endswith((\"elen\", \"deren\", \"keren\", \"nderen\", \"tteren\")):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "310", "colour": "orange", "code": "                b = b[:-1] + b[-2] + b[-1]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "311", "colour": "orange", "code": "        # pakk => pak\n", "error": "none", "author": "tom@organisms.be"}, {"index": "312", "colour": "orange", "code": "        if len(b) > 1 and not is_vowel(b[-1]) and b[-1] == b[-2]:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "313", "colour": "orange", "code": "            b = b[:-1]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "314", "colour": "orange", "code": "        # Present tense gets -t:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "315", "colour": "orange", "code": "        sg = not b.endswith(\"t\") and b + \"t\" or b\n", "error": "none", "author": "tom@organisms.be"}, {"index": "316", "colour": "orange", "code": "        # Past tense ending in a consonant in \"xtc-koffieshop\" gets -t, otherwise -d:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "317", "colour": "orange", "code": "        dt = b0 and b0[-1] in \"xtckfshp\" and \"t\" or (not b.endswith(\"d\") and \"d\" or \"\")\n", "error": "none", "author": "tom@organisms.be"}, {"index": "318", "colour": "orange", "code": "        # Past tense -e and handle common irregular inflections:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "319", "colour": "orange", "code": "        p = b + dt + \"e\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "320", "colour": "orange", "code": "        for suffix, irregular in ((\"erfde\", \"ierf\"), (\"ijfde\", \"eef\"), (\"ingde\", \"ong\"), (\"inkte\", \"onk\")):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "321", "colour": "orange", "code": "            if p.endswith(suffix):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "322", "colour": "orange", "code": "                p = p[:-len(suffix)] + irregular; break\n", "error": "none", "author": "tom@organisms.be"}, {"index": "323", "colour": "orange", "code": "        # Past participle: ge-:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "324", "colour": "orange", "code": "        pp = re.sub(\"tt$\", \"t\", \"ge\" + b + dt)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "325", "colour": "orange", "code": "        pp = pp.startswith((\"geop\", \"gein\", \"geaf\")) and pp[2:4]+\"ge\"+pp[4:] or pp # geopstart => opgestart\n", "error": "none", "author": "tom@organisms.be"}, {"index": "326", "colour": "orange", "code": "        pp = pp.startswith((\"gever\", \"gebe\", \"gege\")) and pp[2:] or pp\n", "error": "none", "author": "tom@organisms.be"}, {"index": "327", "colour": "orange", "code": "        return [v, b, sg, sg, v, b0+\"end\", p, p, p, b+dt+\"en\", p, pp]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "328", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "329", "colour": "orange", "code": "verbs = Verbs()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "330", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "331", "colour": "orange", "code": "conjugate, lemma, lexeme, tenses = \\\n", "error": "none", "author": "tom@organisms.be"}, {"index": "332", "colour": "orange", "code": "    verbs.conjugate, verbs.lemma, verbs.lexeme, verbs.tenses\n", "error": "none", "author": "tom@organisms.be"}, {"index": "333", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "334", "colour": "orange", "code": "#### ATTRIBUTIVE & PREDICATIVE #####################################################################\n", "error": "none", "author": "tom@organisms.be"}, {"index": "335", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "336", "colour": "orange", "code": "adjective_attributive = {\n", "error": "none", "author": "tom@organisms.be"}, {"index": "337", "colour": "orange", "code": "     \"civiel\": \"civiele\",\n", "error": "none", "author": "tom@organisms.be"}, {"index": "338", "colour": "orange", "code": "    \"complex\": \"complexe\",\n", "error": "none", "author": "tom@organisms.be"}, {"index": "339", "colour": "orange", "code": "      \"enkel\": \"enkele\",\n", "error": "none", "author": "tom@organisms.be"}, {"index": "340", "colour": "orange", "code": "       \"grof\": \"grove\",\n", "error": "none", "author": "tom@organisms.be"}, {"index": "341", "colour": "orange", "code": "       \"half\": \"halve\",\n", "error": "none", "author": "tom@organisms.be"}, {"index": "342", "colour": "orange", "code": "     \"luttel\": \"luttele\",\n", "error": "none", "author": "tom@organisms.be"}, {"index": "343", "colour": "orange", "code": "     \"mobiel\": \"mobiele\",\n", "error": "none", "author": "tom@organisms.be"}, {"index": "344", "colour": "orange", "code": "     \"parijs\": \"parijse\",\n", "error": "none", "author": "tom@organisms.be"}, {"index": "345", "colour": "orange", "code": "        \"ruw\": \"ruwe\",\n", "error": "none", "author": "tom@organisms.be"}, {"index": "346", "colour": "orange", "code": "     \"simpel\": \"simpele\",\n", "error": "none", "author": "tom@organisms.be"}, {"index": "347", "colour": "orange", "code": "    \"stabiel\": \"stabiele\",\n", "error": "none", "author": "tom@organisms.be"}, {"index": "348", "colour": "orange", "code": "    \"steriel\": \"steriele\",\n", "error": "none", "author": "tom@organisms.be"}, {"index": "349", "colour": "orange", "code": "    \"subtiel\": \"subtiele\",\n", "error": "none", "author": "tom@organisms.be"}, {"index": "350", "colour": "orange", "code": "       \"teer\": \"tere\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "351", "colour": "orange", "code": "}\n", "error": "none", "author": "tom@organisms.be"}, {"index": "352", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "353", "colour": "blue", "code": "def attributive(adjective):\n", "error": "R", "author": "tom@organisms.be"}, {"index": "354", "colour": "orange", "code": "    \"\"\" For a predicative adjective, returns the attributive form (lowercase).\n", "error": "none", "author": "tom@organisms.be"}, {"index": "355", "colour": "orange", "code": "        In Dutch, the attributive is formed with -e: \"fel\" => \"felle kritiek\".\n", "error": "none", "author": "tom@organisms.be"}, {"index": "356", "colour": "orange", "code": "    \"\"\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "357", "colour": "orange", "code": "    w = adjective.lower()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "358", "colour": "orange", "code": "    if w in adjective_attributive:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "359", "colour": "orange", "code": "        return adjective_attributive[w]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "360", "colour": "orange", "code": "    if w.endswith(\"e\"):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "361", "colour": "orange", "code": "        return w\n", "error": "none", "author": "tom@organisms.be"}, {"index": "362", "colour": "orange", "code": "    if w.endswith((\"er\",\"st\")) and len(w) > 4:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "363", "colour": "orange", "code": "        return w + \"e\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "364", "colour": "orange", "code": "    if w.endswith(\"ees\"):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "365", "colour": "orange", "code": "        return w[:-2] + w[-1] + \"e\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "366", "colour": "orange", "code": "    if w.endswith(\"el\") and len(w) > 2 and not is_vowel(w[-3]):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "367", "colour": "orange", "code": "        return w + \"e\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "368", "colour": "orange", "code": "    if w.endswith(\"ig\"):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "369", "colour": "orange", "code": "        return w + \"e\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "370", "colour": "orange", "code": "    if len(w) > 2 and (not is_vowel(w[-1]) and is_vowel(w[-2]) and is_vowel(w[-3]) or w[:-1].endswith(\"ij\")):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "371", "colour": "orange", "code": "        if w.endswith(\"f\"): w = w[:-1] + \"v\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "372", "colour": "orange", "code": "        if w.endswith(\"s\"): w = w[:-1] + \"z\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "373", "colour": "orange", "code": "        if w[-2] == w[-3]:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "374", "colour": "orange", "code": "            w = w[:-2] + w[-1]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "375", "colour": "orange", "code": "    elif len(w) > 1 and is_vowel(w[-2]) and w.endswith(tuple(\"bdfgklmnprst\")):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "376", "colour": "orange", "code": "        w = w + w[-1]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "377", "colour": "orange", "code": "    return w + \"e\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "378", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "379", "colour": "orange", "code": "adjective_predicative = dict((v,k) for k,v in adjective_attributive.items())\n", "error": "none", "author": "tom@organisms.be"}, {"index": "380", "colour": "orange", "code": "adjective_predicative.update({\n", "error": "none", "author": "tom@organisms.be"}, {"index": "381", "colour": "orange", "code": "          \"moe\": \"moe\",\n", "error": "none", "author": "tom@organisms.be"}, {"index": "382", "colour": "orange", "code": "        \"taboe\": \"taboe\",\n", "error": "none", "author": "tom@organisms.be"}, {"index": "383", "colour": "orange", "code": "    \"voldoende\": \"voldoende\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "384", "colour": "orange", "code": "})\n", "error": "none", "author": "tom@organisms.be"}, {"index": "385", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "386", "colour": "blue", "code": "def predicative(adjective):\n", "error": "R", "author": "tom@organisms.be"}, {"index": "387", "colour": "orange", "code": "    \"\"\" Returns the predicative adjective (lowercase).\n", "error": "none", "author": "tom@organisms.be"}, {"index": "388", "colour": "orange", "code": "        In Dutch, the attributive form preceding a noun is common:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "389", "colour": "orange", "code": "        \"rake opmerking\" => \"raak\", \"straffe uitspraak\" => \"straf\", \"dwaze blik\" => \"dwaas\".\n", "error": "none", "author": "tom@organisms.be"}, {"index": "390", "colour": "orange", "code": "    \"\"\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "391", "colour": "orange", "code": "    w = adjective.lower()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "392", "colour": "orange", "code": "    if w in adjective_predicative:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "393", "colour": "orange", "code": "        return adjective_predicative[w]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "394", "colour": "orange", "code": "    if w.endswith(\"ste\"):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "395", "colour": "orange", "code": "        return w[:-1]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "396", "colour": "orange", "code": "    if w.endswith(\"ere\"):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "397", "colour": "orange", "code": "        return w[:-1]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "398", "colour": "orange", "code": "    if w.endswith(\"bele\"):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "399", "colour": "orange", "code": "        return w[:-1]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "400", "colour": "orange", "code": "    if w.endswith(\"le\") and len(w) > 2 and is_vowel(w[-3]) and not w.endswith((\"eule\", \"oele\")):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "401", "colour": "orange", "code": "        return w[:-2] + w[-3] + \"l\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "402", "colour": "orange", "code": "    if w.endswith(\"ve\") and len(w) > 2 and is_vowel(w[-3]) and not w.endswith((\"euve\", \"oeve\", \"ieve\")):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "403", "colour": "orange", "code": "        return w[:-2] + w[-3] + \"f\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "404", "colour": "orange", "code": "    if w.endswith(\"ze\") and len(w) > 2 and is_vowel(w[-3]) and not w.endswith((\"euze\", \"oeze\", \"ieze\")):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "405", "colour": "orange", "code": "        return w[:-2] + w[-3] + \"s\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "406", "colour": "orange", "code": "    if w.endswith(\"ve\"):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "407", "colour": "orange", "code": "        return w[:-2] + \"f\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "408", "colour": "orange", "code": "    if w.endswith(\"ze\"):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "409", "colour": "orange", "code": "        return w[:-2] + \"s\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "410", "colour": "orange", "code": "    if w.endswith(\"e\") and len(w) > 2:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "411", "colour": "orange", "code": "        if not is_vowel(w[-2]) and w[-2] == w[-3]:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "412", "colour": "orange", "code": "            return w[:-2]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "413", "colour": "orange", "code": "        if len(w) > 3 and not is_vowel(w[-2]) and is_vowel(w[-3]) and w[-3] != \"i\" and not is_vowel(w[-4]):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "414", "colour": "orange", "code": "            return w[:-2] + w[-3] + w[-2]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "415", "colour": "orange", "code": "        return w[:-1]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "416", "colour": "orange", "code": "    return w\n", "error": "none", "author": "tom@organisms.be"}]}