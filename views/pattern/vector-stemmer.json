{"path": "/home/asumal/git/cs410/pattern/pattern/vector/stemmer.py", "lines": [[{"error": "C", "line": "1", "code": "##### PATTERN | VECTOR | PORTER STEMMER ############################################################\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "2", "code": "# Copyright (c) 2010 University of Antwerp, Belgium\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "3", "code": "# Author: Tom De Smedt <tom@organisms.be>\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "4", "code": "# License: BSD (see LICENSE.txt for details).\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "5", "code": "# http://www.clips.ua.ac.be/pages/pattern\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "6", "code": "\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "7", "code": "####################################################################################################\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "8", "code": "# The Porter2 stemming algorithm (or \"Porter stemmer\") is a process for removing the commoner \n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "9", "code": "# morphological and inflexional endings from words in English. \n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "10", "code": "# Its main use is as part of a term normalisation process that is usually done \n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "11", "code": "# when setting up Information Retrieval systems.\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "12", "code": "\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "13", "code": "# Reference:\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "14", "code": "# C.J. van Rijsbergen, S.E. Robertson and M.F. Porter, 1980. \n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "15", "code": "# \"New models in probabilistic information retrieval.\" \n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "16", "code": "# London: British Library. (British Library Research and Development Report, no. 5587).\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "17", "code": "#\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "18", "code": "# http://tartarus.org/~martin/PorterStemmer/\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "19", "code": "\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "20", "code": "# Comments throughout the source code were taken from:\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "21", "code": "# http://snowball.tartarus.org/algorithms/english/stemmer.html\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "22", "code": "\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "23", "code": "import re\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "24", "code": "\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "25", "code": "#---------------------------------------------------------------------------------------------------\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "26", "code": "# Note: this module is optimized for performance.\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "27", "code": "# There is little gain in using more regular expressions.\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "28", "code": "\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "29", "code": "VOWELS = [\"a\", \"e\", \"i\", \"o\", \"u\", \"y\"]\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "30", "code": "DOUBLE = [\"bb\", \"dd\", \"ff\", \"gg\", \"mm\", \"nn\", \"pp\", \"rr\", \"tt\"]\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "31", "code": "VALID_LI = [\"b\", \"c\", \"d\", \"e\", \"g\", \"h\", \"k\", \"m\", \"n\", \"r\", \"t\"]\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "32", "code": "\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "33", "code": "def is_vowel(s):\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "34", "code": "    return s in VOWELS\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "35", "code": "def is_consonant(s):\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "36", "code": "    return s not in VOWELS\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "37", "code": "def is_double_consonant(s):\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "38", "code": "    return s in DOUBLE\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "39", "code": "\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "40", "code": "def is_short_syllable(w, before=None):\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "41", "code": "    \"\"\" A short syllable in a word is either:\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "42", "code": "        - a vowel followed by a non-vowel other than w, x or Y and preceded by a non-vowel\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "43", "code": "        - a vowel at the beginning of the word followed by a non-vowel. \n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "44", "code": "        Checks the three characters before the given index in the word (or entire word if None).\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "45", "code": "    \"\"\"\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "46", "code": "    if before != None:\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "47", "code": "        i = before<0 and len(w)+before or before\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "48", "code": "        return is_short_syllable(w[max(0,i-3):i])\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "49", "code": "    if len(w) == 3 and is_consonant(w[0]) and is_vowel(w[1]) and is_consonant(w[2]) and w[2] not in \"wxY\":\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "50", "code": "        return True\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "51", "code": "    if len(w) == 2 and is_vowel(w[0]) and is_consonant(w[1]):\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "52", "code": "        return True\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "53", "code": "    return False\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "54", "code": "        \n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "55", "code": "def is_short(w):\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "56", "code": "    \"\"\" A word is called short if it consists of a short syllable preceded by zero or more consonants. \n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "57", "code": "    \"\"\"\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "58", "code": "    return is_short_syllable(w[-3:]) and len([ch for ch in w[:-3] if ch in VOWELS]) == 0\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "59", "code": "\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "60", "code": "# A point made at least twice in the literature is that words beginning with gener- \n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "61", "code": "# are overstemmed by the Porter stemmer:\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "62", "code": "# generate => gener, generically => gener\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "63", "code": "# Moving the region one vowel-consonant pair to the right fixes this:\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "64", "code": "# generate => generat, generically => generic\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "65", "code": "overstemmed = (\"gener\", \"commun\", \"arsen\")\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "66", "code": "\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "67", "code": "RE_R1 = re.compile(r\"[aeiouy][^aeiouy]\")\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "68", "code": "def R1(w):\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "69", "code": "    \"\"\" R1 is the region after the first non-vowel following a vowel, \n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "70", "code": "        or the end of the word if there is no such non-vowel. \n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "71", "code": "    \"\"\"\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "72", "code": "    m = RE_R1.search(w)\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "73", "code": "    if m: \n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "74", "code": "        return w[m.end():]\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "75", "code": "    return \"\"\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "76", "code": "    \n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "77", "code": "def R2(w):\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "78", "code": "    \"\"\" R2 is the region after the first non-vowel following a vowel in R1, \n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "79", "code": "        or the end of the word if there is no such non-vowel.\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "80", "code": "    \"\"\"\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "81", "code": "    if w.startswith(tuple(overstemmed)): return R1(R1(R1(w)))\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "82", "code": "    return R1(R1(w))\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "83", "code": "\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "84", "code": "def find_vowel(w):\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "85", "code": "    \"\"\" Returns the index of the first vowel in the word.\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "86", "code": "        When no vowel is found, returns len(word).\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "87", "code": "    \"\"\"\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "88", "code": "    for i, ch in enumerate(w):\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "89", "code": "        if ch in VOWELS: return i\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "90", "code": "    return len(w)\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "91", "code": "\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "92", "code": "def has_vowel(w):\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "93", "code": "    \"\"\" Returns True if there is a vowel in the given string.\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "94", "code": "    \"\"\"\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "95", "code": "    for ch in w:\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "96", "code": "        if ch in VOWELS: return True\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "97", "code": "    return False\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "98", "code": "\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "W", "line": "99", "code": "def vowel_consonant_pairs(w, max=None):\n", "colour": "purple", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "100", "code": "    \"\"\" Returns the number of consecutive vowel-consonant pairs in the word.\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "101", "code": "    \"\"\"\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "102", "code": "    m = 0\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "103", "code": "    for i, ch in enumerate(w):\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "104", "code": "        if is_vowel(ch) and i<len(w)-1 and is_consonant(w[i+1]):\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "105", "code": "            m += 1\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "106", "code": "            # An optimisation to stop searching once we reach the amount of <vc> pairs we need.\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "107", "code": "            if m == max: break\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "108", "code": "    return m\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "109", "code": "\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "110", "code": "#--- REPLACEMENT RULES -----------------------------------------------------------------------------\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "111", "code": "\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "112", "code": "def step_1a(w):\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "113", "code": "    \"\"\" Step 1a handles -s suffixes.\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "114", "code": "    \"\"\"\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "115", "code": "    if w.endswith(\"s\"):\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "116", "code": "        if w.endswith(\"sses\"):\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "117", "code": "            return w[:-2]\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "118", "code": "        if w.endswith(\"ies\"):\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "119", "code": "            # Replace by -ie if preceded by just one letter, \n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "120", "code": "            # otherwise by -i (so ties => tie, cries => cri).\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "121", "code": "            return len(w)==4 and w[:-1] or w[:-2]\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "122", "code": "        if w.endswith((\"us\", \"ss\")):\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "123", "code": "            return w\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "124", "code": "        if find_vowel(w) < len(w)-2:\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "125", "code": "            # Delete -s if the preceding part contains a vowel not immediately before the -s \n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "126", "code": "            # (so gas and this retain the -s, gaps and kiwis lose it).\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "127", "code": "            return w[:-1]\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "128", "code": "    return w\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "129", "code": "\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "130", "code": "def step_1b(w):\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "131", "code": "    \"\"\" Step 1b handles -ed and -ing suffixes (or -edly and -ingly).\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "132", "code": "        Removes double consonants at the end of the stem and adds -e to some words.\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "133", "code": "    \"\"\"\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "134", "code": "    if w.endswith(\"y\") and w.endswith((\"edly\", \"ingly\")):\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "135", "code": "        w = w[:-2] # Strip -ly for next step.\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "136", "code": "    if w.endswith((\"ed\", \"ing\")):\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "137", "code": "        if w.endswith(\"ied\"):\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "138", "code": "            # See -ies in step 1a.\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "139", "code": "            return len(w)==4 and w[:-1] or w[:-2]\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "140", "code": "        if w.endswith(\"eed\"):\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "141", "code": "            # Replace by -ee if preceded by at least one vowel-consonant pair.\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "142", "code": "            return R1(w).endswith(\"eed\") and w[:-1] or w\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "143", "code": "        for suffix in (\"ed\", \"ing\"):\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "144", "code": "            # Delete if the preceding word part contains a vowel.\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "145", "code": "            # - If the word ends -at, -bl or -iz add -e (luxuriat => luxuriate).\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "146", "code": "            # - If the word ends with a double remove the last letter (hopp => hop).\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "147", "code": "            # - If the word is short, add e (hop => hope).\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "148", "code": "            if w.endswith(suffix) and has_vowel(w[:-len(suffix)]):\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "149", "code": "                w = w[:-len(suffix)]\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "150", "code": "                if w.endswith((\"at\", \"bl\", \"iz\")):\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "151", "code": "                    return w+\"e\"\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "152", "code": "                if is_double_consonant(w[-2:]):\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "153", "code": "                    return w[:-1]\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "154", "code": "                if is_short(w):\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "155", "code": "                    return w+\"e\"\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "156", "code": "    return w\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "157", "code": "\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "158", "code": "def step_1c(w):\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "159", "code": "    \"\"\" Step 1c replaces suffix -y or -Y by -i if preceded by a non-vowel \n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "160", "code": "        which is not the first letter of the word (cry => cri, by => by, say => say).\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "161", "code": "    \"\"\"\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "162", "code": "    if len(w) > 2 and w.endswith((\"y\",\"Y\")) and is_consonant(w[-2]):\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "163", "code": "        return w[:-1] + \"i\"\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "164", "code": "    return w\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "165", "code": "\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "166", "code": "suffixes2 = [\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "167", "code": "    (\"al\", ((\"ational\", \"ate\"), (\"tional\", \"tion\"))),\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "168", "code": "    (\"ci\", ((\"enci\", \"ence\"), (\"anci\", \"ance\"))),\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "169", "code": "    (\"er\", ((\"izer\", \"ize\"),)),\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "170", "code": "    (\"li\", ((\"bli\", \"ble\"), (\"alli\", \"al\"), (\"entli\", \"ent\"), (\"eli\", \"e\"), (\"ousli\", \"ous\"))),\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "171", "code": "    (\"on\", ((\"ization\", \"ize\"), (\"isation\", \"ize\"), (\"ation\", \"ate\"))),\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "172", "code": "    (\"or\", ((\"ator\", \"ate\"),)),\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "173", "code": "    (\"ss\", ((\"iveness\", \"ive\"), (\"fulness\", \"ful\"), (\"ousness\", \"ous\"))),\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "174", "code": "    (\"sm\", ((\"alism\", \"al\"),)),\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "175", "code": "    (\"ti\", ((\"aliti\", \"al\"), (\"iviti\", \"ive\"), (\"biliti\", \"ble\"))),\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "176", "code": "    (\"gi\", ((\"logi\", \"log\"),))\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "177", "code": "]\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "178", "code": "def step_2(w):\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "179", "code": "    \"\"\" Step 2 replaces double suffixes (singularization => singularize).\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "180", "code": "        This only happens if there is at least one vowel-consonant pair before the suffix.\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "181", "code": "    \"\"\"\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "182", "code": "    for suffix, rules in suffixes2:\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "183", "code": "        if w.endswith(suffix):\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "184", "code": "            for A,B in rules:\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "185", "code": "                if w.endswith(A): \n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "186", "code": "                    return R1(w).endswith(A) and w[:-len(A)] + B or w\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "187", "code": "    if w.endswith(\"li\") and R1(w)[-3:-2] in VALID_LI:\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "188", "code": "        # Delete -li if preceded by a valid li-ending.\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "189", "code": "        return w[:-2]\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "190", "code": "    return w\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "191", "code": "\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "192", "code": "suffixes3 = [\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "193", "code": "    (\"e\", ((\"icate\", \"ic\"), (\"ative\", \"\"), (\"alize\", \"al\"))),\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "194", "code": "    (\"i\", ((\"iciti\", \"ic\"),)),\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "195", "code": "    (\"l\", ((\"ical\", \"ic\"), (\"ful\", \"\"))),\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "196", "code": "    (\"s\", ((\"ness\", \"\"),))\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "197", "code": "]    \n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "198", "code": "def step_3(w):\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "199", "code": "    \"\"\" Step 3 replaces -ic, -ful, -ness etc. suffixes.\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "200", "code": "        This only happens if there is at least one vowel-consonant pair before the suffix.\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "201", "code": "    \"\"\"\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "202", "code": "    for suffix, rules in suffixes3:\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "203", "code": "        if w.endswith(suffix):\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "204", "code": "            for A,B in rules:\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "205", "code": "                if w.endswith(A): \n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "206", "code": "                    return R1(w).endswith(A) and w[:-len(A)] + B or w\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "207", "code": "    return w\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "208", "code": "\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "209", "code": "suffixes4 = [\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "210", "code": "    (\"al\", (\"al\",)),\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "211", "code": "    (\"ce\", (\"ance\", \"ence\")),\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "212", "code": "    (\"er\", (\"er\",)),\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "213", "code": "    (\"ic\", (\"ic\",)),\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "214", "code": "    (\"le\", (\"able\", \"ible\")),\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "215", "code": "    (\"nt\", (\"ant\", \"ement\", \"ment\", \"ent\")),\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "216", "code": "    ( \"e\", (\"ate\", \"ive\", \"ize\")),\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "217", "code": "    ((\"m\",\"i\",\"s\"), (\"ism\", \"iti\", \"ous\"))\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "218", "code": "]    \n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "219", "code": "def step_4(w):\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "220", "code": "    \"\"\" Step 4 strips -ant, -ent etc. suffixes.\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "221", "code": "        This only happens if there is more than one vowel-consonant pair before the suffix.\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "222", "code": "    \"\"\"\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "223", "code": "    for suffix, rules in suffixes4:\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "224", "code": "        if w.endswith(suffix):\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "225", "code": "            for A in rules:\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "226", "code": "                if w.endswith(A):\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "227", "code": "                    return R2(w).endswith(A) and w[:-len(A)] or w\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "228", "code": "    if R2(w).endswith(\"ion\") and w[:-3].endswith((\"s\", \"t\")):\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "229", "code": "        # Delete -ion if preceded by s or t.\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "230", "code": "        return w[:-3]\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "231", "code": "    return w\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "232", "code": "    \n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "233", "code": "def step_5a(w):\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "234", "code": "    \"\"\" Step 5a strips suffix -e if preceded by multiple vowel-consonant pairs,\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "235", "code": "        or one vowel-consonant pair that is not a short syllable.\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "236", "code": "    \"\"\"\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "237", "code": "    if w.endswith(\"e\"):\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "238", "code": "        if R2(w).endswith(\"e\") or R1(w).endswith(\"e\") and not is_short_syllable(w, before=-1):\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "239", "code": "            return w[:-1]\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "240", "code": "    return w\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "241", "code": "    \n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "242", "code": "def step_5b(w):\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "243", "code": "    \"\"\" Step 5b strips suffix -l if preceded by l and multiple vowel-consonant pairs,\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "244", "code": "        bell => bell, rebell => rebel.\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "245", "code": "    \"\"\"\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "246", "code": "    if w.endswith(\"ll\") and R2(w).endswith(\"l\"):\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "247", "code": "        return w[:-1]\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "248", "code": "    return w\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "249", "code": "\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "250", "code": "#--- EXCEPTIONS ------------------------------------------------------------------------------------\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "251", "code": "\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "252", "code": "# Exceptions:\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "253", "code": "# - in, out and can stems could be seen as stop words later on.\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "254", "code": "# - Special -ly cases.\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "255", "code": "exceptions = {\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "256", "code": "    \"skis\": \"ski\",\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "257", "code": "    \"skies\": \"sky\",\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "258", "code": "    \"dying\": \"die\",\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "259", "code": "    \"lying\": \"lie\",\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "260", "code": "    \"tying\": \"tie\",\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "261", "code": "    \"innings\": \"inning\", \n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "262", "code": "    \"outings\": \"outing\",\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "263", "code": "    \"cannings\": \"canning\",\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "264", "code": "    \"idly\": \"idl\", \n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "265", "code": "    \"gently\": \"gentl\",\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "266", "code": "    \"ugly\": \"ugli\",\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "267", "code": "    \"early\": \"earli\", \n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "268", "code": "    \"only\": \"onli\", \n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "269", "code": "    \"singly\": \"singl\"\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "270", "code": "}\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "271", "code": "\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "272", "code": "# Words that are never stemmed:\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "273", "code": "uninflected = dict.fromkeys([\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "274", "code": "    \"sky\",\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "275", "code": "    \"news\",\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "276", "code": "    \"howe\",\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "277", "code": "    \"inning\", \"outing\", \"canning\",\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "278", "code": "    \"proceed\", \"exceed\", \"succeed\",\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "279", "code": "    \"atlas\", \"cosmos\", \"bias\", \"andes\" # not plural forms\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "280", "code": "], True)\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "281", "code": "\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "282", "code": "#--- STEMMER ---------------------------------------------------------------------------------------\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "283", "code": "\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "W", "line": "284", "code": "def case_sensitive(stem, word):\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "285", "code": "    \"\"\" Applies the letter case of the word to the stem:\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "286", "code": "        Ponies => Poni\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "287", "code": "    \"\"\"\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "288", "code": "    ch = []\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "289", "code": "    for i in xrange(len(stem)):\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "290", "code": "        if word[i] == word[i].upper():\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "291", "code": "            ch.append(stem[i].upper())\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "292", "code": "        else:\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "293", "code": "            ch.append(stem[i])\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "294", "code": "    return \"\".join(ch)\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "295", "code": "\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "296", "code": "def upper_consonant_y(w):\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "297", "code": "    \"\"\" Sets the initial y, or y after a vowel, to Y.\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "298", "code": "        Of course, y is interpreted as a vowel and Y as a consonant.\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "299", "code": "    \"\"\"\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "300", "code": "    a = []\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "301", "code": "    p = None\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "302", "code": "    for ch in w:\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "303", "code": "        if ch == \"y\" and (p is None or p in VOWELS):\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "304", "code": "            a.append(\"Y\")\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "305", "code": "        else:\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "306", "code": "            a.append(ch)\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "307", "code": "        p = ch\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "308", "code": "    return \"\".join(a)\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "309", "code": "\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "310", "code": "# If we stemmed a word once, we can cache the result and reuse it.\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "311", "code": "# By default, keep a history of a 10000 entries (<500KB).\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "312", "code": "cache = {}\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "313", "code": "\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "W", "line": "314", "code": "def stem(word, cached=True, history=10000, **kwargs):\n", "colour": "purple", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "315", "code": "    \"\"\" Returns the stem of the given word: ponies => poni.\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "316", "code": "        Note: it is often taken to be a crude error \n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "317", "code": "        that a stemming algorithm does not leave a real word after removing the stem. \n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "318", "code": "        But the purpose of stemming is to bring variant forms of a word together, \n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "319", "code": "        not to map a word onto its \"paradigm\" form. \n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "320", "code": "    \"\"\"\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "W", "line": "321", "code": "    stem = word.lower()\n", "colour": "purple", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "322", "code": "    if cached and stem in cache:\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "323", "code": "        return case_sensitive(cache[stem], word)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "324", "code": "    if cached and len(cache) > history: # Empty cache every now and then.\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "325", "code": "        cache.clear()\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "326", "code": "    if len(stem) <= 2:\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "327", "code": "        # If the word has two letters or less, leave it as it is. \n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "328", "code": "        return case_sensitive(stem, word)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "329", "code": "    if stem in exceptions:\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "330", "code": "        return case_sensitive(exceptions[stem], word)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "331", "code": "    if stem in uninflected:\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "332", "code": "        return case_sensitive(stem, word)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "333", "code": "    # Mark y treated as a consonant as Y.\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "334", "code": "    stem = upper_consonant_y(stem)\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "335", "code": "    for f in (step_1a, step_1b, step_1c, step_2, step_3, step_4, step_5a, step_5b):\n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "336", "code": "        stem = f(stem)\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "337", "code": "    # Turn any remaining Y letters in the stem back into lower case.\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "C", "line": "338", "code": "    # Apply the case of the original word to the stem. \n", "colour": "blue", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "339", "code": "    stem = stem.lower()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "340", "code": "    stem = case_sensitive(stem, word)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "341", "code": "    if cached:\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}, {"error": "none", "line": "342", "code": "        cache[word.lower()] = stem.lower()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "343", "code": "    return stem\n", "colour": "black", "author": "tomdesmedt@gmail.com@b69ec992-5447-3b6c-d919-7ed00d13665f"}]]}