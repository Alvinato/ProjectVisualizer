{"path": "/home/asumal/git/cs410/pattern/pattern/web/pdf/psparser.py", "lines": [{"index": "1", "colour": "orange", "code": "#!/usr/bin/env python2\n", "error": "none", "author": "tom@organisms.be"}, {"index": "2", "colour": "orange", "code": "import sys\n", "error": "none", "author": "tom@organisms.be"}, {"index": "3", "colour": "orange", "code": "import re\n", "error": "none", "author": "tom@organisms.be"}, {"index": "4", "colour": "green", "code": "from utils import choplist\n", "error": "W", "author": "tom@organisms.be"}, {"index": "5", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "6", "colour": "orange", "code": "STRICT = 0\n", "error": "none", "author": "tom@organisms.be"}, {"index": "7", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "8", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "9", "colour": "orange", "code": "##  PS Exceptions\n", "error": "none", "author": "tom@organisms.be"}, {"index": "10", "colour": "orange", "code": "##\n", "error": "none", "author": "tom@organisms.be"}, {"index": "11", "colour": "orange", "code": "class PSException(Exception): pass\n", "error": "none", "author": "tom@organisms.be"}, {"index": "12", "colour": "orange", "code": "class PSEOF(PSException): pass\n", "error": "none", "author": "tom@organisms.be"}, {"index": "13", "colour": "orange", "code": "class PSSyntaxError(PSException): pass\n", "error": "none", "author": "tom@organisms.be"}, {"index": "14", "colour": "orange", "code": "class PSTypeError(PSException): pass\n", "error": "none", "author": "tom@organisms.be"}, {"index": "15", "colour": "orange", "code": "class PSValueError(PSException): pass\n", "error": "none", "author": "tom@organisms.be"}, {"index": "16", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "17", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "18", "colour": "orange", "code": "##  Basic PostScript Types\n", "error": "none", "author": "tom@organisms.be"}, {"index": "19", "colour": "orange", "code": "##\n", "error": "none", "author": "tom@organisms.be"}, {"index": "20", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "21", "colour": "orange", "code": "##  PSObject\n", "error": "none", "author": "tom@organisms.be"}, {"index": "22", "colour": "orange", "code": "##\n", "error": "none", "author": "tom@organisms.be"}, {"index": "23", "colour": "blue", "code": "class PSObject(object):\n", "error": "R", "author": "tom@organisms.be"}, {"index": "24", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "25", "colour": "orange", "code": "    \"\"\"Base class for all PS or PDF-related data types.\"\"\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "26", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "27", "colour": "orange", "code": "    pass\n", "error": "none", "author": "tom@organisms.be"}, {"index": "28", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "29", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "30", "colour": "orange", "code": "##  PSLiteral\n", "error": "none", "author": "tom@organisms.be"}, {"index": "31", "colour": "orange", "code": "##\n", "error": "none", "author": "tom@organisms.be"}, {"index": "32", "colour": "blue", "code": "class PSLiteral(PSObject):\n", "error": "R", "author": "tom@organisms.be"}, {"index": "33", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "34", "colour": "orange", "code": "    \"\"\"A class that represents a PostScript literal.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "35", "colour": "orange", "code": "    \n", "error": "none", "author": "tom@organisms.be"}, {"index": "36", "colour": "orange", "code": "    Postscript literals are used as identifiers, such as\n", "error": "none", "author": "tom@organisms.be"}, {"index": "37", "colour": "orange", "code": "    variable names, property names and dictionary keys.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "38", "colour": "orange", "code": "    Literals are case sensitive and denoted by a preceding\n", "error": "none", "author": "tom@organisms.be"}, {"index": "39", "colour": "orange", "code": "    slash sign (e.g. \"/Name\")\n", "error": "none", "author": "tom@organisms.be"}, {"index": "40", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "41", "colour": "orange", "code": "    Note: Do not create an instance of PSLiteral directly.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "42", "colour": "orange", "code": "    Always use PSLiteralTable.intern().\n", "error": "none", "author": "tom@organisms.be"}, {"index": "43", "colour": "orange", "code": "    \"\"\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "44", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "45", "colour": "orange", "code": "    def __init__(self, name):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "46", "colour": "orange", "code": "        self.name = name\n", "error": "none", "author": "tom@organisms.be"}, {"index": "47", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "48", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "49", "colour": "orange", "code": "    def __repr__(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "50", "colour": "orange", "code": "        return '/%s' % self.name\n", "error": "none", "author": "tom@organisms.be"}, {"index": "51", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "52", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "53", "colour": "orange", "code": "##  PSKeyword\n", "error": "none", "author": "tom@organisms.be"}, {"index": "54", "colour": "orange", "code": "##\n", "error": "none", "author": "tom@organisms.be"}, {"index": "55", "colour": "blue", "code": "class PSKeyword(PSObject):\n", "error": "R", "author": "tom@organisms.be"}, {"index": "56", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "57", "colour": "orange", "code": "    \"\"\"A class that represents a PostScript keyword.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "58", "colour": "orange", "code": "    \n", "error": "none", "author": "tom@organisms.be"}, {"index": "59", "colour": "orange", "code": "    PostScript keywords are a dozen of predefined words.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "60", "colour": "orange", "code": "    Commands and directives in PostScript are expressed by keywords.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "61", "colour": "orange", "code": "    They are also used to denote the content boundaries.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "62", "colour": "orange", "code": "    \n", "error": "none", "author": "tom@organisms.be"}, {"index": "63", "colour": "orange", "code": "    Note: Do not create an instance of PSKeyword directly.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "64", "colour": "orange", "code": "    Always use PSKeywordTable.intern().\n", "error": "none", "author": "tom@organisms.be"}, {"index": "65", "colour": "orange", "code": "    \"\"\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "66", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "67", "colour": "orange", "code": "    def __init__(self, name):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "68", "colour": "orange", "code": "        self.name = name\n", "error": "none", "author": "tom@organisms.be"}, {"index": "69", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "70", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "71", "colour": "orange", "code": "    def __repr__(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "72", "colour": "orange", "code": "        return self.name\n", "error": "none", "author": "tom@organisms.be"}, {"index": "73", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "74", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "75", "colour": "orange", "code": "##  PSSymbolTable\n", "error": "none", "author": "tom@organisms.be"}, {"index": "76", "colour": "orange", "code": "##\n", "error": "none", "author": "tom@organisms.be"}, {"index": "77", "colour": "blue", "code": "class PSSymbolTable(object):\n", "error": "R", "author": "tom@organisms.be"}, {"index": "78", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "79", "colour": "orange", "code": "    \"\"\"A utility class for storing PSLiteral/PSKeyword objects.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "80", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "81", "colour": "orange", "code": "    Interned objects can be checked its identity with \"is\" operator.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "82", "colour": "orange", "code": "    \"\"\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "83", "colour": "orange", "code": "    \n", "error": "none", "author": "tom@organisms.be"}, {"index": "84", "colour": "orange", "code": "    def __init__(self, klass):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "85", "colour": "orange", "code": "        self.dict = {}\n", "error": "none", "author": "tom@organisms.be"}, {"index": "86", "colour": "orange", "code": "        self.klass = klass\n", "error": "none", "author": "tom@organisms.be"}, {"index": "87", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "88", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "89", "colour": "orange", "code": "    def intern(self, name):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "90", "colour": "orange", "code": "        if name in self.dict:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "91", "colour": "orange", "code": "            lit = self.dict[name]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "92", "colour": "orange", "code": "        else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "93", "colour": "orange", "code": "            lit = self.klass(name)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "94", "colour": "orange", "code": "            self.dict[name] = lit\n", "error": "none", "author": "tom@organisms.be"}, {"index": "95", "colour": "orange", "code": "        return lit\n", "error": "none", "author": "tom@organisms.be"}, {"index": "96", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "97", "colour": "orange", "code": "PSLiteralTable = PSSymbolTable(PSLiteral)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "98", "colour": "orange", "code": "PSKeywordTable = PSSymbolTable(PSKeyword)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "99", "colour": "orange", "code": "LIT = PSLiteralTable.intern\n", "error": "none", "author": "tom@organisms.be"}, {"index": "100", "colour": "orange", "code": "KWD = PSKeywordTable.intern\n", "error": "none", "author": "tom@organisms.be"}, {"index": "101", "colour": "orange", "code": "KEYWORD_PROC_BEGIN = KWD('{')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "102", "colour": "orange", "code": "KEYWORD_PROC_END = KWD('}')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "103", "colour": "orange", "code": "KEYWORD_ARRAY_BEGIN = KWD('[')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "104", "colour": "orange", "code": "KEYWORD_ARRAY_END = KWD(']')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "105", "colour": "orange", "code": "KEYWORD_DICT_BEGIN = KWD('<<')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "106", "colour": "orange", "code": "KEYWORD_DICT_END = KWD('>>')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "107", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "108", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "109", "colour": "orange", "code": "def literal_name(x):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "110", "colour": "orange", "code": "    if not isinstance(x, PSLiteral):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "111", "colour": "orange", "code": "        if STRICT:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "112", "colour": "orange", "code": "            raise PSTypeError('Literal required: %r' % x)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "113", "colour": "orange", "code": "        else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "114", "colour": "orange", "code": "            return str(x)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "115", "colour": "orange", "code": "    return x.name\n", "error": "none", "author": "tom@organisms.be"}, {"index": "116", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "117", "colour": "orange", "code": "def keyword_name(x):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "118", "colour": "orange", "code": "    if not isinstance(x, PSKeyword):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "119", "colour": "orange", "code": "        if STRICT:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "120", "colour": "orange", "code": "            raise PSTypeError('Keyword required: %r' % x)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "121", "colour": "orange", "code": "        else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "122", "colour": "orange", "code": "            return str(x)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "123", "colour": "orange", "code": "    return x.name\n", "error": "none", "author": "tom@organisms.be"}, {"index": "124", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "125", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "126", "colour": "orange", "code": "##  PSBaseParser\n", "error": "none", "author": "tom@organisms.be"}, {"index": "127", "colour": "orange", "code": "##\n", "error": "none", "author": "tom@organisms.be"}, {"index": "128", "colour": "orange", "code": "EOL = re.compile(r'[\\r\\n]')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "129", "colour": "orange", "code": "SPC = re.compile(r'\\s')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "130", "colour": "orange", "code": "NONSPC = re.compile(r'\\S')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "131", "colour": "orange", "code": "HEX = re.compile(r'[0-9a-fA-F]')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "132", "colour": "orange", "code": "END_LITERAL = re.compile(r'[#/%\\[\\]()<>{}\\s]')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "133", "colour": "orange", "code": "END_HEX_STRING = re.compile(r'[^\\s0-9a-fA-F]')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "134", "colour": "orange", "code": "HEX_PAIR = re.compile(r'[0-9a-fA-F]{2}|.')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "135", "colour": "orange", "code": "END_NUMBER = re.compile(r'[^0-9]')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "136", "colour": "orange", "code": "END_KEYWORD = re.compile(r'[#/%\\[\\]()<>{}\\s]')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "137", "colour": "orange", "code": "END_STRING = re.compile(r'[()\\134]')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "138", "colour": "orange", "code": "OCT_STRING = re.compile(r'[0-7]')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "139", "colour": "orange", "code": "ESC_STRING = { 'b':8, 't':9, 'n':10, 'f':12, 'r':13, '(':40, ')':41, '\\\\':92 }\n", "error": "none", "author": "tom@organisms.be"}, {"index": "140", "colour": "blue", "code": "class PSBaseParser(object):\n", "error": "R", "author": "tom@organisms.be"}, {"index": "141", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "142", "colour": "orange", "code": "    \"\"\"Most basic PostScript parser that performs only tokenization.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "143", "colour": "orange", "code": "    \"\"\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "144", "colour": "orange", "code": "    BUFSIZ = 4096\n", "error": "none", "author": "tom@organisms.be"}, {"index": "145", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "146", "colour": "orange", "code": "    debug = 0\n", "error": "none", "author": "tom@organisms.be"}, {"index": "147", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "148", "colour": "orange", "code": "    def __init__(self, fp):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "149", "colour": "orange", "code": "        self.fp = fp\n", "error": "none", "author": "tom@organisms.be"}, {"index": "150", "colour": "orange", "code": "        self.seek(0)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "151", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "152", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "153", "colour": "orange", "code": "    def __repr__(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "154", "colour": "orange", "code": "        return '<%s: %r, bufpos=%d>' % (self.__class__.__name__, self.fp, self.bufpos)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "155", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "156", "colour": "blue", "code": "    def flush(self):\n", "error": "R", "author": "tom@organisms.be"}, {"index": "157", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "158", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "159", "colour": "orange", "code": "    def close(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "160", "colour": "orange", "code": "        self.flush()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "161", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "162", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "163", "colour": "orange", "code": "    def tell(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "164", "colour": "orange", "code": "        return self.bufpos+self.charpos\n", "error": "none", "author": "tom@organisms.be"}, {"index": "165", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "166", "colour": "orange", "code": "    def poll(self, pos=None, n=80):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "167", "colour": "orange", "code": "        pos0 = self.fp.tell()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "168", "colour": "orange", "code": "        if not pos:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "169", "colour": "orange", "code": "            pos = self.bufpos+self.charpos\n", "error": "none", "author": "tom@organisms.be"}, {"index": "170", "colour": "orange", "code": "        self.fp.seek(pos)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "171", "colour": "orange", "code": "        print >>sys.stderr, 'poll(%d): %r' % (pos, self.fp.read(n))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "172", "colour": "orange", "code": "        self.fp.seek(pos0)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "173", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "174", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "175", "colour": "orange", "code": "    def seek(self, pos):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "176", "colour": "orange", "code": "        \"\"\"Seeks the parser to the given position.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "177", "colour": "orange", "code": "        \"\"\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "178", "colour": "orange", "code": "        if 2 <= self.debug:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "179", "colour": "orange", "code": "            print >>sys.stderr, 'seek: %r' % pos\n", "error": "none", "author": "tom@organisms.be"}, {"index": "180", "colour": "orange", "code": "        self.fp.seek(pos)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "181", "colour": "orange", "code": "        # reset the status for nextline()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "182", "colour": "green", "code": "        self.bufpos = pos\n", "error": "W", "author": "tom@organisms.be"}, {"index": "183", "colour": "green", "code": "        self.buf = ''\n", "error": "W", "author": "tom@organisms.be"}, {"index": "184", "colour": "green", "code": "        self.charpos = 0\n", "error": "W", "author": "tom@organisms.be"}, {"index": "185", "colour": "orange", "code": "        # reset the status for nexttoken()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "186", "colour": "green", "code": "        self._parse1 = self._parse_main\n", "error": "W", "author": "tom@organisms.be"}, {"index": "187", "colour": "green", "code": "        self._curtoken = ''\n", "error": "W", "author": "tom@organisms.be"}, {"index": "188", "colour": "green", "code": "        self._curtokenpos = 0\n", "error": "W", "author": "tom@organisms.be"}, {"index": "189", "colour": "green", "code": "        self._tokens = []\n", "error": "W", "author": "tom@organisms.be"}, {"index": "190", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "191", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "192", "colour": "orange", "code": "    def fillbuf(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "193", "colour": "orange", "code": "        if self.charpos < len(self.buf): return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "194", "colour": "orange", "code": "        # fetch next chunk.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "195", "colour": "green", "code": "        self.bufpos = self.fp.tell()\n", "error": "W", "author": "tom@organisms.be"}, {"index": "196", "colour": "green", "code": "        self.buf = self.fp.read(self.BUFSIZ)\n", "error": "W", "author": "tom@organisms.be"}, {"index": "197", "colour": "orange", "code": "        if not self.buf:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "198", "colour": "orange", "code": "            raise PSEOF('Unexpected EOF')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "199", "colour": "green", "code": "        self.charpos = 0\n", "error": "W", "author": "tom@organisms.be"}, {"index": "200", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "201", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "202", "colour": "orange", "code": "    def nextline(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "203", "colour": "orange", "code": "        \"\"\"Fetches a next line that ends either with \\\\r or \\\\n.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "204", "colour": "orange", "code": "        \"\"\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "205", "colour": "orange", "code": "        linebuf = ''\n", "error": "none", "author": "tom@organisms.be"}, {"index": "206", "colour": "orange", "code": "        linepos = self.bufpos + self.charpos\n", "error": "none", "author": "tom@organisms.be"}, {"index": "207", "colour": "orange", "code": "        eol = False\n", "error": "none", "author": "tom@organisms.be"}, {"index": "208", "colour": "orange", "code": "        while 1:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "209", "colour": "orange", "code": "            self.fillbuf()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "210", "colour": "orange", "code": "            if eol:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "211", "colour": "orange", "code": "                c = self.buf[self.charpos]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "212", "colour": "orange", "code": "                # handle '\\r\\n'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "213", "colour": "orange", "code": "                if c == '\\n':\n", "error": "none", "author": "tom@organisms.be"}, {"index": "214", "colour": "orange", "code": "                    linebuf += c\n", "error": "none", "author": "tom@organisms.be"}, {"index": "215", "colour": "orange", "code": "                    self.charpos += 1\n", "error": "none", "author": "tom@organisms.be"}, {"index": "216", "colour": "orange", "code": "                break\n", "error": "none", "author": "tom@organisms.be"}, {"index": "217", "colour": "orange", "code": "            m = EOL.search(self.buf, self.charpos)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "218", "colour": "orange", "code": "            if m:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "219", "colour": "orange", "code": "                linebuf += self.buf[self.charpos:m.end(0)]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "220", "colour": "green", "code": "                self.charpos = m.end(0)\n", "error": "W", "author": "tom@organisms.be"}, {"index": "221", "colour": "orange", "code": "                if linebuf[-1] == '\\r':\n", "error": "none", "author": "tom@organisms.be"}, {"index": "222", "colour": "orange", "code": "                    eol = True\n", "error": "none", "author": "tom@organisms.be"}, {"index": "223", "colour": "orange", "code": "                else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "224", "colour": "orange", "code": "                    break\n", "error": "none", "author": "tom@organisms.be"}, {"index": "225", "colour": "orange", "code": "            else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "226", "colour": "orange", "code": "                linebuf += self.buf[self.charpos:]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "227", "colour": "green", "code": "                self.charpos = len(self.buf)\n", "error": "W", "author": "tom@organisms.be"}, {"index": "228", "colour": "orange", "code": "        if 2 <= self.debug:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "229", "colour": "orange", "code": "            print >>sys.stderr, 'nextline: %r' % ((linepos, linebuf),)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "230", "colour": "orange", "code": "        return (linepos, linebuf)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "231", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "232", "colour": "orange", "code": "    def revreadlines(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "233", "colour": "orange", "code": "        \"\"\"Fetches a next line backword.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "234", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "235", "colour": "orange", "code": "        This is used to locate the trailers at the end of a file.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "236", "colour": "orange", "code": "        \"\"\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "237", "colour": "orange", "code": "        self.fp.seek(0, 2)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "238", "colour": "orange", "code": "        pos = self.fp.tell()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "239", "colour": "orange", "code": "        buf = ''\n", "error": "none", "author": "tom@organisms.be"}, {"index": "240", "colour": "orange", "code": "        while 0 < pos:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "241", "colour": "orange", "code": "            prevpos = pos\n", "error": "none", "author": "tom@organisms.be"}, {"index": "242", "colour": "orange", "code": "            pos = max(0, pos-self.BUFSIZ)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "243", "colour": "orange", "code": "            self.fp.seek(pos)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "244", "colour": "orange", "code": "            s = self.fp.read(prevpos-pos)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "245", "colour": "orange", "code": "            if not s: break\n", "error": "none", "author": "tom@organisms.be"}, {"index": "246", "colour": "orange", "code": "            while 1:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "247", "colour": "orange", "code": "                n = max(s.rfind('\\r'), s.rfind('\\n'))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "248", "colour": "orange", "code": "                if n == -1:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "249", "colour": "orange", "code": "                    buf = s + buf\n", "error": "none", "author": "tom@organisms.be"}, {"index": "250", "colour": "orange", "code": "                    break\n", "error": "none", "author": "tom@organisms.be"}, {"index": "251", "colour": "orange", "code": "                yield s[n:]+buf\n", "error": "none", "author": "tom@organisms.be"}, {"index": "252", "colour": "orange", "code": "                s = s[:n]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "253", "colour": "orange", "code": "                buf = ''\n", "error": "none", "author": "tom@organisms.be"}, {"index": "254", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "255", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "256", "colour": "blue", "code": "    def _parse_main(self, s, i):\n", "error": "R", "author": "tom@organisms.be"}, {"index": "257", "colour": "orange", "code": "        m = NONSPC.search(s, i)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "258", "colour": "orange", "code": "        if not m:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "259", "colour": "orange", "code": "            return len(s)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "260", "colour": "orange", "code": "        j = m.start(0)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "261", "colour": "orange", "code": "        c = s[j]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "262", "colour": "green", "code": "        self._curtokenpos = self.bufpos+j\n", "error": "W", "author": "tom@organisms.be"}, {"index": "263", "colour": "orange", "code": "        if c == '%':\n", "error": "none", "author": "tom@organisms.be"}, {"index": "264", "colour": "green", "code": "            self._curtoken = '%'\n", "error": "W", "author": "tom@organisms.be"}, {"index": "265", "colour": "green", "code": "            self._parse1 = self._parse_comment\n", "error": "W", "author": "tom@organisms.be"}, {"index": "266", "colour": "orange", "code": "            return j+1\n", "error": "none", "author": "tom@organisms.be"}, {"index": "267", "colour": "orange", "code": "        elif c == '/':\n", "error": "none", "author": "tom@organisms.be"}, {"index": "268", "colour": "green", "code": "            self._curtoken = ''\n", "error": "W", "author": "tom@organisms.be"}, {"index": "269", "colour": "green", "code": "            self._parse1 = self._parse_literal\n", "error": "W", "author": "tom@organisms.be"}, {"index": "270", "colour": "orange", "code": "            return j+1\n", "error": "none", "author": "tom@organisms.be"}, {"index": "271", "colour": "orange", "code": "        elif c in '-+' or c.isdigit():\n", "error": "none", "author": "tom@organisms.be"}, {"index": "272", "colour": "green", "code": "            self._curtoken = c\n", "error": "W", "author": "tom@organisms.be"}, {"index": "273", "colour": "green", "code": "            self._parse1 = self._parse_number\n", "error": "W", "author": "tom@organisms.be"}, {"index": "274", "colour": "orange", "code": "            return j+1\n", "error": "none", "author": "tom@organisms.be"}, {"index": "275", "colour": "orange", "code": "        elif c == '.':\n", "error": "none", "author": "tom@organisms.be"}, {"index": "276", "colour": "green", "code": "            self._curtoken = c\n", "error": "W", "author": "tom@organisms.be"}, {"index": "277", "colour": "green", "code": "            self._parse1 = self._parse_float\n", "error": "W", "author": "tom@organisms.be"}, {"index": "278", "colour": "orange", "code": "            return j+1\n", "error": "none", "author": "tom@organisms.be"}, {"index": "279", "colour": "orange", "code": "        elif c.isalpha():\n", "error": "none", "author": "tom@organisms.be"}, {"index": "280", "colour": "green", "code": "            self._curtoken = c\n", "error": "W", "author": "tom@organisms.be"}, {"index": "281", "colour": "green", "code": "            self._parse1 = self._parse_keyword\n", "error": "W", "author": "tom@organisms.be"}, {"index": "282", "colour": "orange", "code": "            return j+1\n", "error": "none", "author": "tom@organisms.be"}, {"index": "283", "colour": "orange", "code": "        elif c == '(':\n", "error": "none", "author": "tom@organisms.be"}, {"index": "284", "colour": "green", "code": "            self._curtoken = ''\n", "error": "W", "author": "tom@organisms.be"}, {"index": "285", "colour": "green", "code": "            self.paren = 1\n", "error": "W", "author": "tom@organisms.be"}, {"index": "286", "colour": "green", "code": "            self._parse1 = self._parse_string\n", "error": "W", "author": "tom@organisms.be"}, {"index": "287", "colour": "orange", "code": "            return j+1\n", "error": "none", "author": "tom@organisms.be"}, {"index": "288", "colour": "orange", "code": "        elif c == '<':\n", "error": "none", "author": "tom@organisms.be"}, {"index": "289", "colour": "green", "code": "            self._curtoken = ''\n", "error": "W", "author": "tom@organisms.be"}, {"index": "290", "colour": "green", "code": "            self._parse1 = self._parse_wopen\n", "error": "W", "author": "tom@organisms.be"}, {"index": "291", "colour": "orange", "code": "            return j+1\n", "error": "none", "author": "tom@organisms.be"}, {"index": "292", "colour": "orange", "code": "        elif c == '>':\n", "error": "none", "author": "tom@organisms.be"}, {"index": "293", "colour": "green", "code": "            self._curtoken = ''\n", "error": "W", "author": "tom@organisms.be"}, {"index": "294", "colour": "green", "code": "            self._parse1 = self._parse_wclose\n", "error": "W", "author": "tom@organisms.be"}, {"index": "295", "colour": "orange", "code": "            return j+1\n", "error": "none", "author": "tom@organisms.be"}, {"index": "296", "colour": "orange", "code": "        else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "297", "colour": "orange", "code": "            self._add_token(KWD(c))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "298", "colour": "orange", "code": "            return j+1\n", "error": "none", "author": "tom@organisms.be"}, {"index": "299", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "300", "colour": "orange", "code": "    def _add_token(self, obj):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "301", "colour": "orange", "code": "        self._tokens.append((self._curtokenpos, obj))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "302", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "303", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "304", "colour": "orange", "code": "    def _parse_comment(self, s, i):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "305", "colour": "orange", "code": "        m = EOL.search(s, i)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "306", "colour": "orange", "code": "        if not m:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "307", "colour": "orange", "code": "            self._curtoken += s[i:]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "308", "colour": "orange", "code": "            return (self._parse_comment, len(s))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "309", "colour": "orange", "code": "        j = m.start(0)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "310", "colour": "orange", "code": "        self._curtoken += s[i:j]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "311", "colour": "green", "code": "        self._parse1 = self._parse_main\n", "error": "W", "author": "tom@organisms.be"}, {"index": "312", "colour": "orange", "code": "        # We ignore comments.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "313", "colour": "orange", "code": "        #self._tokens.append(self._curtoken)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "314", "colour": "orange", "code": "        return j\n", "error": "none", "author": "tom@organisms.be"}, {"index": "315", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "316", "colour": "orange", "code": "    def _parse_literal(self, s, i):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "317", "colour": "orange", "code": "        m = END_LITERAL.search(s, i)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "318", "colour": "orange", "code": "        if not m:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "319", "colour": "orange", "code": "            self._curtoken += s[i:]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "320", "colour": "orange", "code": "            return len(s)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "321", "colour": "orange", "code": "        j = m.start(0)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "322", "colour": "orange", "code": "        self._curtoken += s[i:j]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "323", "colour": "orange", "code": "        c = s[j]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "324", "colour": "orange", "code": "        if c == '#':\n", "error": "none", "author": "tom@organisms.be"}, {"index": "325", "colour": "green", "code": "            self.hex = ''\n", "error": "W", "author": "tom@organisms.be"}, {"index": "326", "colour": "green", "code": "            self._parse1 = self._parse_literal_hex\n", "error": "W", "author": "tom@organisms.be"}, {"index": "327", "colour": "orange", "code": "            return j+1\n", "error": "none", "author": "tom@organisms.be"}, {"index": "328", "colour": "orange", "code": "        self._add_token(LIT(self._curtoken))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "329", "colour": "green", "code": "        self._parse1 = self._parse_main\n", "error": "W", "author": "tom@organisms.be"}, {"index": "330", "colour": "orange", "code": "        return j\n", "error": "none", "author": "tom@organisms.be"}, {"index": "331", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "332", "colour": "orange", "code": "    def _parse_literal_hex(self, s, i):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "333", "colour": "orange", "code": "        c = s[i]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "334", "colour": "orange", "code": "        if HEX.match(c) and len(self.hex) < 2:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "335", "colour": "orange", "code": "            self.hex += c\n", "error": "none", "author": "tom@organisms.be"}, {"index": "336", "colour": "orange", "code": "            return i+1\n", "error": "none", "author": "tom@organisms.be"}, {"index": "337", "colour": "orange", "code": "        if self.hex:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "338", "colour": "orange", "code": "            self._curtoken += chr(int(self.hex, 16))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "339", "colour": "green", "code": "        self._parse1 = self._parse_literal\n", "error": "W", "author": "tom@organisms.be"}, {"index": "340", "colour": "orange", "code": "        return i\n", "error": "none", "author": "tom@organisms.be"}, {"index": "341", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "342", "colour": "orange", "code": "    def _parse_number(self, s, i):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "343", "colour": "orange", "code": "        m = END_NUMBER.search(s, i)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "344", "colour": "orange", "code": "        if not m:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "345", "colour": "orange", "code": "            self._curtoken += s[i:]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "346", "colour": "orange", "code": "            return len(s)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "347", "colour": "orange", "code": "        j = m.start(0)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "348", "colour": "orange", "code": "        self._curtoken += s[i:j]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "349", "colour": "orange", "code": "        c = s[j]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "350", "colour": "orange", "code": "        if c == '.':\n", "error": "none", "author": "tom@organisms.be"}, {"index": "351", "colour": "orange", "code": "            self._curtoken += c\n", "error": "none", "author": "tom@organisms.be"}, {"index": "352", "colour": "green", "code": "            self._parse1 = self._parse_float\n", "error": "W", "author": "tom@organisms.be"}, {"index": "353", "colour": "orange", "code": "            return j+1\n", "error": "none", "author": "tom@organisms.be"}, {"index": "354", "colour": "orange", "code": "        try:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "355", "colour": "orange", "code": "            self._add_token(int(self._curtoken))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "356", "colour": "orange", "code": "        except ValueError:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "357", "colour": "orange", "code": "            pass\n", "error": "none", "author": "tom@organisms.be"}, {"index": "358", "colour": "green", "code": "        self._parse1 = self._parse_main\n", "error": "W", "author": "tom@organisms.be"}, {"index": "359", "colour": "orange", "code": "        return j\n", "error": "none", "author": "tom@organisms.be"}, {"index": "360", "colour": "orange", "code": "    \n", "error": "none", "author": "tom@organisms.be"}, {"index": "361", "colour": "orange", "code": "    def _parse_float(self, s, i):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "362", "colour": "orange", "code": "        m = END_NUMBER.search(s, i)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "363", "colour": "orange", "code": "        if not m:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "364", "colour": "orange", "code": "            self._curtoken += s[i:]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "365", "colour": "orange", "code": "            return len(s)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "366", "colour": "orange", "code": "        j = m.start(0)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "367", "colour": "orange", "code": "        self._curtoken += s[i:j]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "368", "colour": "orange", "code": "        try:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "369", "colour": "orange", "code": "            self._add_token(float(self._curtoken))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "370", "colour": "orange", "code": "        except ValueError:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "371", "colour": "orange", "code": "            pass\n", "error": "none", "author": "tom@organisms.be"}, {"index": "372", "colour": "green", "code": "        self._parse1 = self._parse_main\n", "error": "W", "author": "tom@organisms.be"}, {"index": "373", "colour": "orange", "code": "        return j\n", "error": "none", "author": "tom@organisms.be"}, {"index": "374", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "375", "colour": "orange", "code": "    def _parse_keyword(self, s, i):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "376", "colour": "orange", "code": "        m = END_KEYWORD.search(s, i)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "377", "colour": "orange", "code": "        if not m:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "378", "colour": "orange", "code": "            self._curtoken += s[i:]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "379", "colour": "orange", "code": "            return len(s)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "380", "colour": "orange", "code": "        j = m.start(0)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "381", "colour": "orange", "code": "        self._curtoken += s[i:j]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "382", "colour": "orange", "code": "        if self._curtoken == 'true':\n", "error": "none", "author": "tom@organisms.be"}, {"index": "383", "colour": "orange", "code": "            token = True\n", "error": "none", "author": "tom@organisms.be"}, {"index": "384", "colour": "orange", "code": "        elif self._curtoken == 'false':\n", "error": "none", "author": "tom@organisms.be"}, {"index": "385", "colour": "orange", "code": "            token = False\n", "error": "none", "author": "tom@organisms.be"}, {"index": "386", "colour": "orange", "code": "        else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "387", "colour": "orange", "code": "            token = KWD(self._curtoken)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "388", "colour": "orange", "code": "        self._add_token(token)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "389", "colour": "green", "code": "        self._parse1 = self._parse_main\n", "error": "W", "author": "tom@organisms.be"}, {"index": "390", "colour": "orange", "code": "        return j\n", "error": "none", "author": "tom@organisms.be"}, {"index": "391", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "392", "colour": "orange", "code": "    def _parse_string(self, s, i):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "393", "colour": "orange", "code": "        m = END_STRING.search(s, i)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "394", "colour": "orange", "code": "        if not m:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "395", "colour": "orange", "code": "            self._curtoken += s[i:]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "396", "colour": "orange", "code": "            return len(s)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "397", "colour": "orange", "code": "        j = m.start(0)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "398", "colour": "orange", "code": "        self._curtoken += s[i:j]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "399", "colour": "orange", "code": "        c = s[j]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "400", "colour": "orange", "code": "        if c == '\\\\':\n", "error": "none", "author": "tom@organisms.be"}, {"index": "401", "colour": "green", "code": "            self.oct = ''\n", "error": "W", "author": "tom@organisms.be"}, {"index": "402", "colour": "green", "code": "            self._parse1 = self._parse_string_1\n", "error": "W", "author": "tom@organisms.be"}, {"index": "403", "colour": "orange", "code": "            return j+1\n", "error": "none", "author": "tom@organisms.be"}, {"index": "404", "colour": "orange", "code": "        if c == '(':\n", "error": "none", "author": "tom@organisms.be"}, {"index": "405", "colour": "orange", "code": "            self.paren += 1\n", "error": "none", "author": "tom@organisms.be"}, {"index": "406", "colour": "orange", "code": "            self._curtoken += c\n", "error": "none", "author": "tom@organisms.be"}, {"index": "407", "colour": "orange", "code": "            return j+1\n", "error": "none", "author": "tom@organisms.be"}, {"index": "408", "colour": "orange", "code": "        if c == ')':\n", "error": "none", "author": "tom@organisms.be"}, {"index": "409", "colour": "orange", "code": "            self.paren -= 1\n", "error": "none", "author": "tom@organisms.be"}, {"index": "410", "colour": "orange", "code": "            if self.paren: # WTF, they said balanced parens need no special treatment.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "411", "colour": "orange", "code": "                self._curtoken += c\n", "error": "none", "author": "tom@organisms.be"}, {"index": "412", "colour": "orange", "code": "                return j+1\n", "error": "none", "author": "tom@organisms.be"}, {"index": "413", "colour": "orange", "code": "        self._add_token(self._curtoken)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "414", "colour": "green", "code": "        self._parse1 = self._parse_main\n", "error": "W", "author": "tom@organisms.be"}, {"index": "415", "colour": "orange", "code": "        return j+1\n", "error": "none", "author": "tom@organisms.be"}, {"index": "416", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "417", "colour": "orange", "code": "    def _parse_string_1(self, s, i):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "418", "colour": "orange", "code": "        c = s[i]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "419", "colour": "orange", "code": "        if OCT_STRING.match(c) and len(self.oct) < 3:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "420", "colour": "orange", "code": "            self.oct += c\n", "error": "none", "author": "tom@organisms.be"}, {"index": "421", "colour": "orange", "code": "            return i+1\n", "error": "none", "author": "tom@organisms.be"}, {"index": "422", "colour": "orange", "code": "        if self.oct:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "423", "colour": "orange", "code": "            self._curtoken += chr(int(self.oct, 8))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "424", "colour": "green", "code": "            self._parse1 = self._parse_string\n", "error": "W", "author": "tom@organisms.be"}, {"index": "425", "colour": "orange", "code": "            return i\n", "error": "none", "author": "tom@organisms.be"}, {"index": "426", "colour": "orange", "code": "        if c in ESC_STRING:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "427", "colour": "orange", "code": "            self._curtoken += chr(ESC_STRING[c])\n", "error": "none", "author": "tom@organisms.be"}, {"index": "428", "colour": "green", "code": "        self._parse1 = self._parse_string\n", "error": "W", "author": "tom@organisms.be"}, {"index": "429", "colour": "orange", "code": "        return i+1\n", "error": "none", "author": "tom@organisms.be"}, {"index": "430", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "431", "colour": "orange", "code": "    def _parse_wopen(self, s, i):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "432", "colour": "orange", "code": "        c = s[i]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "433", "colour": "orange", "code": "        if c == '<':\n", "error": "none", "author": "tom@organisms.be"}, {"index": "434", "colour": "orange", "code": "            self._add_token(KEYWORD_DICT_BEGIN)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "435", "colour": "green", "code": "            self._parse1 = self._parse_main\n", "error": "W", "author": "tom@organisms.be"}, {"index": "436", "colour": "orange", "code": "            i += 1\n", "error": "none", "author": "tom@organisms.be"}, {"index": "437", "colour": "orange", "code": "        else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "438", "colour": "green", "code": "            self._parse1 = self._parse_hexstring\n", "error": "W", "author": "tom@organisms.be"}, {"index": "439", "colour": "orange", "code": "        return i\n", "error": "none", "author": "tom@organisms.be"}, {"index": "440", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "441", "colour": "orange", "code": "    def _parse_wclose(self, s, i):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "442", "colour": "orange", "code": "        c = s[i]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "443", "colour": "orange", "code": "        if c == '>':\n", "error": "none", "author": "tom@organisms.be"}, {"index": "444", "colour": "orange", "code": "            self._add_token(KEYWORD_DICT_END)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "445", "colour": "orange", "code": "            i += 1\n", "error": "none", "author": "tom@organisms.be"}, {"index": "446", "colour": "green", "code": "        self._parse1 = self._parse_main\n", "error": "W", "author": "tom@organisms.be"}, {"index": "447", "colour": "orange", "code": "        return i\n", "error": "none", "author": "tom@organisms.be"}, {"index": "448", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "449", "colour": "orange", "code": "    def _parse_hexstring(self, s, i):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "450", "colour": "orange", "code": "        m = END_HEX_STRING.search(s, i)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "451", "colour": "orange", "code": "        if not m:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "452", "colour": "orange", "code": "            self._curtoken += s[i:]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "453", "colour": "orange", "code": "            return len(s)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "454", "colour": "orange", "code": "        j = m.start(0)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "455", "colour": "orange", "code": "        self._curtoken += s[i:j]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "456", "colour": "orange", "code": "        token = HEX_PAIR.sub(lambda m: chr(int(m.group(0), 16)),\n", "error": "none", "author": "tom@organisms.be"}, {"index": "457", "colour": "orange", "code": "                             SPC.sub('', self._curtoken))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "458", "colour": "orange", "code": "        self._add_token(token)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "459", "colour": "green", "code": "        self._parse1 = self._parse_main\n", "error": "W", "author": "tom@organisms.be"}, {"index": "460", "colour": "orange", "code": "        return j\n", "error": "none", "author": "tom@organisms.be"}, {"index": "461", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "462", "colour": "orange", "code": "    def nexttoken(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "463", "colour": "orange", "code": "        while not self._tokens:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "464", "colour": "orange", "code": "            self.fillbuf()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "465", "colour": "green", "code": "            self.charpos = self._parse1(self.buf, self.charpos)\n", "error": "W", "author": "tom@organisms.be"}, {"index": "466", "colour": "orange", "code": "        token = self._tokens.pop(0)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "467", "colour": "orange", "code": "        if 2 <= self.debug:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "468", "colour": "orange", "code": "            print >>sys.stderr, 'nexttoken: %r' % (token,)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "469", "colour": "orange", "code": "        return token\n", "error": "none", "author": "tom@organisms.be"}, {"index": "470", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "471", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "472", "colour": "orange", "code": "##  PSStackParser\n", "error": "none", "author": "tom@organisms.be"}, {"index": "473", "colour": "orange", "code": "##\n", "error": "none", "author": "tom@organisms.be"}, {"index": "474", "colour": "orange", "code": "class PSStackParser(PSBaseParser):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "475", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "476", "colour": "orange", "code": "    def __init__(self, fp):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "477", "colour": "orange", "code": "        PSBaseParser.__init__(self, fp)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "478", "colour": "orange", "code": "        self.reset()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "479", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "480", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "481", "colour": "orange", "code": "    def reset(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "482", "colour": "green", "code": "        self.context = []\n", "error": "W", "author": "tom@organisms.be"}, {"index": "483", "colour": "green", "code": "        self.curtype = None\n", "error": "W", "author": "tom@organisms.be"}, {"index": "484", "colour": "green", "code": "        self.curstack = []\n", "error": "W", "author": "tom@organisms.be"}, {"index": "485", "colour": "green", "code": "        self.results = []\n", "error": "W", "author": "tom@organisms.be"}, {"index": "486", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "487", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "488", "colour": "orange", "code": "    def seek(self, pos):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "489", "colour": "orange", "code": "        PSBaseParser.seek(self, pos)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "490", "colour": "orange", "code": "        self.reset()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "491", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "492", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "493", "colour": "orange", "code": "    def push(self, *objs):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "494", "colour": "orange", "code": "        self.curstack.extend(objs)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "495", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "496", "colour": "orange", "code": "    \n", "error": "none", "author": "tom@organisms.be"}, {"index": "497", "colour": "orange", "code": "    def pop(self, n):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "498", "colour": "orange", "code": "        objs = self.curstack[-n:]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "499", "colour": "orange", "code": "        self.curstack[-n:] = []\n", "error": "none", "author": "tom@organisms.be"}, {"index": "500", "colour": "orange", "code": "        return objs\n", "error": "none", "author": "tom@organisms.be"}, {"index": "501", "colour": "orange", "code": "    \n", "error": "none", "author": "tom@organisms.be"}, {"index": "502", "colour": "orange", "code": "    def popall(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "503", "colour": "orange", "code": "        objs = self.curstack\n", "error": "none", "author": "tom@organisms.be"}, {"index": "504", "colour": "green", "code": "        self.curstack = []\n", "error": "W", "author": "tom@organisms.be"}, {"index": "505", "colour": "orange", "code": "        return objs\n", "error": "none", "author": "tom@organisms.be"}, {"index": "506", "colour": "orange", "code": "    \n", "error": "none", "author": "tom@organisms.be"}, {"index": "507", "colour": "orange", "code": "    def add_results(self, *objs):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "508", "colour": "orange", "code": "        if 2 <= self.debug:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "509", "colour": "orange", "code": "            print >>sys.stderr, 'add_results: %r' % (objs,)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "510", "colour": "orange", "code": "        self.results.extend(objs)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "511", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "512", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "513", "colour": "green", "code": "    def start_type(self, pos, type):\n", "error": "W", "author": "tom@organisms.be"}, {"index": "514", "colour": "orange", "code": "        self.context.append((pos, self.curtype, self.curstack))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "515", "colour": "green", "code": "        (self.curtype, self.curstack) = (type, [])\n", "error": "W", "author": "tom@organisms.be"}, {"index": "516", "colour": "orange", "code": "        if 2 <= self.debug:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "517", "colour": "orange", "code": "            print >>sys.stderr, 'start_type: pos=%r, type=%r' % (pos, type)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "518", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "519", "colour": "orange", "code": "    \n", "error": "none", "author": "tom@organisms.be"}, {"index": "520", "colour": "green", "code": "    def end_type(self, type):\n", "error": "W", "author": "tom@organisms.be"}, {"index": "521", "colour": "orange", "code": "        if self.curtype != type:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "522", "colour": "orange", "code": "            raise PSTypeError('Type mismatch: %r != %r' % (self.curtype, type))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "523", "colour": "orange", "code": "        objs = [ obj for (_,obj) in self.curstack ]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "524", "colour": "green", "code": "        (pos, self.curtype, self.curstack) = self.context.pop()\n", "error": "W", "author": "tom@organisms.be"}, {"index": "525", "colour": "orange", "code": "        if 2 <= self.debug:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "526", "colour": "orange", "code": "            print >>sys.stderr, 'end_type: pos=%r, type=%r, objs=%r' % (pos, type, objs)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "527", "colour": "orange", "code": "        return (pos, objs)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "528", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "529", "colour": "blue", "code": "    def do_keyword(self, pos, token):\n", "error": "R", "author": "tom@organisms.be"}, {"index": "530", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "531", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "532", "colour": "blue", "code": "    def nextobject(self):\n", "error": "R", "author": "tom@organisms.be"}, {"index": "533", "colour": "orange", "code": "        \"\"\"Yields a list of objects.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "534", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "535", "colour": "orange", "code": "        Returns keywords, literals, strings, numbers, arrays and dictionaries.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "536", "colour": "orange", "code": "        Arrays and dictionaries are represented as Python lists and dictionaries.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "537", "colour": "orange", "code": "        \"\"\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "538", "colour": "orange", "code": "        while not self.results:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "539", "colour": "orange", "code": "            (pos, token) = self.nexttoken()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "540", "colour": "orange", "code": "            #print (pos,token), (self.curtype, self.curstack)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "541", "colour": "orange", "code": "            if (isinstance(token, int) or\n", "error": "none", "author": "tom@organisms.be"}, {"index": "542", "colour": "orange", "code": "                isinstance(token, float) or\n", "error": "none", "author": "tom@organisms.be"}, {"index": "543", "colour": "orange", "code": "                isinstance(token, bool) or\n", "error": "none", "author": "tom@organisms.be"}, {"index": "544", "colour": "orange", "code": "                isinstance(token, str) or\n", "error": "none", "author": "tom@organisms.be"}, {"index": "545", "colour": "orange", "code": "                isinstance(token, PSLiteral)):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "546", "colour": "orange", "code": "                # normal token\n", "error": "none", "author": "tom@organisms.be"}, {"index": "547", "colour": "orange", "code": "                self.push((pos, token))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "548", "colour": "orange", "code": "            elif token == KEYWORD_ARRAY_BEGIN:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "549", "colour": "orange", "code": "                # begin array\n", "error": "none", "author": "tom@organisms.be"}, {"index": "550", "colour": "orange", "code": "                self.start_type(pos, 'a')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "551", "colour": "orange", "code": "            elif token == KEYWORD_ARRAY_END:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "552", "colour": "orange", "code": "                # end array\n", "error": "none", "author": "tom@organisms.be"}, {"index": "553", "colour": "orange", "code": "                try:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "554", "colour": "orange", "code": "                    self.push(self.end_type('a'))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "555", "colour": "orange", "code": "                except PSTypeError:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "556", "colour": "orange", "code": "                    if STRICT: raise\n", "error": "none", "author": "tom@organisms.be"}, {"index": "557", "colour": "orange", "code": "            elif token == KEYWORD_DICT_BEGIN:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "558", "colour": "orange", "code": "                # begin dictionary\n", "error": "none", "author": "tom@organisms.be"}, {"index": "559", "colour": "orange", "code": "                self.start_type(pos, 'd')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "560", "colour": "orange", "code": "            elif token == KEYWORD_DICT_END:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "561", "colour": "orange", "code": "                # end dictionary\n", "error": "none", "author": "tom@organisms.be"}, {"index": "562", "colour": "orange", "code": "                try:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "563", "colour": "orange", "code": "                    (pos, objs) = self.end_type('d')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "564", "colour": "orange", "code": "                    if len(objs) % 2 != 0:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "565", "colour": "orange", "code": "                        raise PSSyntaxError('Invalid dictionary construct: %r' % objs)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "566", "colour": "orange", "code": "                    # construct a Python dictionary.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "567", "colour": "orange", "code": "                    d = dict( (literal_name(k), v) for (k,v) in choplist(2, objs) if v is not None )\n", "error": "none", "author": "tom@organisms.be"}, {"index": "568", "colour": "orange", "code": "                    self.push((pos, d))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "569", "colour": "orange", "code": "                except PSTypeError:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "570", "colour": "orange", "code": "                    if STRICT: raise\n", "error": "none", "author": "tom@organisms.be"}, {"index": "571", "colour": "orange", "code": "            elif token == KEYWORD_PROC_BEGIN:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "572", "colour": "orange", "code": "                # begin proc\n", "error": "none", "author": "tom@organisms.be"}, {"index": "573", "colour": "orange", "code": "                self.start_type(pos, 'p')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "574", "colour": "orange", "code": "            elif token == KEYWORD_PROC_END:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "575", "colour": "orange", "code": "                # end proc\n", "error": "none", "author": "tom@organisms.be"}, {"index": "576", "colour": "orange", "code": "                try:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "577", "colour": "orange", "code": "                    self.push(self.end_type('p'))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "578", "colour": "orange", "code": "                except PSTypeError:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "579", "colour": "orange", "code": "                    if STRICT: raise\n", "error": "none", "author": "tom@organisms.be"}, {"index": "580", "colour": "orange", "code": "            else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "581", "colour": "orange", "code": "                if 2 <= self.debug:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "582", "colour": "orange", "code": "                    print >>sys.stderr, 'do_keyword: pos=%r, token=%r, stack=%r' % \\\n", "error": "none", "author": "tom@organisms.be"}, {"index": "583", "colour": "orange", "code": "                          (pos, token, self.curstack)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "584", "colour": "orange", "code": "                self.do_keyword(pos, token)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "585", "colour": "orange", "code": "            if self.context:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "586", "colour": "orange", "code": "                continue\n", "error": "none", "author": "tom@organisms.be"}, {"index": "587", "colour": "orange", "code": "            else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "588", "colour": "orange", "code": "                self.flush()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "589", "colour": "orange", "code": "        obj = self.results.pop(0)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "590", "colour": "orange", "code": "        if 2 <= self.debug:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "591", "colour": "orange", "code": "            print >>sys.stderr, 'nextobject: %r' % (obj,)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "592", "colour": "orange", "code": "        return obj\n", "error": "none", "author": "tom@organisms.be"}, {"index": "593", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "594", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "595", "colour": "orange", "code": "##  Simplistic Test cases\n", "error": "none", "author": "tom@organisms.be"}, {"index": "596", "colour": "orange", "code": "##\n", "error": "none", "author": "tom@organisms.be"}, {"index": "597", "colour": "orange", "code": "import unittest\n", "error": "none", "author": "tom@organisms.be"}, {"index": "598", "colour": "blue", "code": "class TestPSBaseParser(unittest.TestCase):\n", "error": "R", "author": "tom@organisms.be"}, {"index": "599", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "600", "colour": "orange", "code": "    TESTDATA = r'''%!PS\n", "error": "none", "author": "tom@organisms.be"}, {"index": "601", "colour": "orange", "code": "begin end\n", "error": "none", "author": "tom@organisms.be"}, {"index": "602", "colour": "orange", "code": " \"  @ #\n", "error": "none", "author": "tom@organisms.be"}, {"index": "603", "colour": "orange", "code": "/a/BCD /Some_Name /foo#5f#xbaa\n", "error": "none", "author": "tom@organisms.be"}, {"index": "604", "colour": "orange", "code": "0 +1 -2 .5 1.234\n", "error": "none", "author": "tom@organisms.be"}, {"index": "605", "colour": "orange", "code": "(abc) () (abc ( def ) ghi)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "606", "colour": "orange", "code": "(def\\040\\0\\0404ghi) (bach\\\\slask) (foo\\nbaa)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "607", "colour": "orange", "code": "(this % is not a comment.)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "608", "colour": "orange", "code": "(foo\n", "error": "none", "author": "tom@organisms.be"}, {"index": "609", "colour": "orange", "code": "baa)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "610", "colour": "orange", "code": "(foo\\\n", "error": "none", "author": "tom@organisms.be"}, {"index": "611", "colour": "orange", "code": "baa)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "612", "colour": "orange", "code": "<> <20> < 40 4020 >\n", "error": "none", "author": "tom@organisms.be"}, {"index": "613", "colour": "orange", "code": "<abcd00\n", "error": "none", "author": "tom@organisms.be"}, {"index": "614", "colour": "orange", "code": "12345>\n", "error": "none", "author": "tom@organisms.be"}, {"index": "615", "colour": "orange", "code": "func/a/b{(c)do*}def\n", "error": "none", "author": "tom@organisms.be"}, {"index": "616", "colour": "orange", "code": "[ 1 (z) ! ]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "617", "colour": "orange", "code": "<< /foo (bar) >>\n", "error": "none", "author": "tom@organisms.be"}, {"index": "618", "colour": "orange", "code": "'''\n", "error": "none", "author": "tom@organisms.be"}, {"index": "619", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "620", "colour": "orange", "code": "    TOKENS = [\n", "error": "none", "author": "tom@organisms.be"}, {"index": "621", "colour": "orange", "code": "      (5, KWD('begin')), (11, KWD('end')), (16, KWD('\"')), (19, KWD('@')),\n", "error": "none", "author": "tom@organisms.be"}, {"index": "622", "colour": "orange", "code": "      (21, KWD('#')), (23, LIT('a')), (25, LIT('BCD')), (30, LIT('Some_Name')),\n", "error": "none", "author": "tom@organisms.be"}, {"index": "623", "colour": "orange", "code": "      (41, LIT('foo_xbaa')), (54, 0), (56, 1), (59, -2), (62, 0.5),\n", "error": "none", "author": "tom@organisms.be"}, {"index": "624", "colour": "orange", "code": "      (65, 1.234), (71, 'abc'), (77, ''), (80, 'abc ( def ) ghi'),\n", "error": "none", "author": "tom@organisms.be"}, {"index": "625", "colour": "orange", "code": "      (98, 'def \\x00 4ghi'), (118, 'bach\\\\slask'), (132, 'foo\\nbaa'),\n", "error": "none", "author": "tom@organisms.be"}, {"index": "626", "colour": "orange", "code": "      (143, 'this % is not a comment.'), (170, 'foo\\nbaa'), (180, 'foobaa'),\n", "error": "none", "author": "tom@organisms.be"}, {"index": "627", "colour": "orange", "code": "      (191, ''), (194, ' '), (199, '@@ '), (211, '\\xab\\xcd\\x00\\x124\\x05'),\n", "error": "none", "author": "tom@organisms.be"}, {"index": "628", "colour": "orange", "code": "      (226, KWD('func')), (230, LIT('a')), (232, LIT('b')),\n", "error": "none", "author": "tom@organisms.be"}, {"index": "629", "colour": "orange", "code": "      (234, KWD('{')), (235, 'c'), (238, KWD('do*')), (241, KWD('}')),\n", "error": "none", "author": "tom@organisms.be"}, {"index": "630", "colour": "orange", "code": "      (242, KWD('def')), (246, KWD('[')), (248, 1), (250, 'z'), (254, KWD('!')),\n", "error": "none", "author": "tom@organisms.be"}, {"index": "631", "colour": "orange", "code": "      (256, KWD(']')), (258, KWD('<<')), (261, LIT('foo')), (266, 'bar'),\n", "error": "none", "author": "tom@organisms.be"}, {"index": "632", "colour": "orange", "code": "      (272, KWD('>>'))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "633", "colour": "orange", "code": "      ]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "634", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "635", "colour": "orange", "code": "    OBJS = [\n", "error": "none", "author": "tom@organisms.be"}, {"index": "636", "colour": "orange", "code": "      (23, LIT('a')), (25, LIT('BCD')), (30, LIT('Some_Name')),\n", "error": "none", "author": "tom@organisms.be"}, {"index": "637", "colour": "orange", "code": "      (41, LIT('foo_xbaa')), (54, 0), (56, 1), (59, -2), (62, 0.5),\n", "error": "none", "author": "tom@organisms.be"}, {"index": "638", "colour": "orange", "code": "      (65, 1.234), (71, 'abc'), (77, ''), (80, 'abc ( def ) ghi'),\n", "error": "none", "author": "tom@organisms.be"}, {"index": "639", "colour": "orange", "code": "      (98, 'def \\x00 4ghi'), (118, 'bach\\\\slask'), (132, 'foo\\nbaa'),\n", "error": "none", "author": "tom@organisms.be"}, {"index": "640", "colour": "orange", "code": "      (143, 'this % is not a comment.'), (170, 'foo\\nbaa'), (180, 'foobaa'),\n", "error": "none", "author": "tom@organisms.be"}, {"index": "641", "colour": "orange", "code": "      (191, ''), (194, ' '), (199, '@@ '), (211, '\\xab\\xcd\\x00\\x124\\x05'),\n", "error": "none", "author": "tom@organisms.be"}, {"index": "642", "colour": "orange", "code": "      (230, LIT('a')), (232, LIT('b')), (234, ['c']), (246, [1, 'z']),\n", "error": "none", "author": "tom@organisms.be"}, {"index": "643", "colour": "orange", "code": "      (258, {'foo': 'bar'}),\n", "error": "none", "author": "tom@organisms.be"}, {"index": "644", "colour": "orange", "code": "      ]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "645", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "646", "colour": "orange", "code": "    def get_tokens(self, s):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "647", "colour": "orange", "code": "        import StringIO\n", "error": "none", "author": "tom@organisms.be"}, {"index": "648", "colour": "orange", "code": "        class MyParser(PSBaseParser):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "649", "colour": "orange", "code": "            def flush(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "650", "colour": "red", "code": "                self.add_results(*self.popall())\n", "error": "E", "author": "tom@organisms.be"}, {"index": "651", "colour": "orange", "code": "        parser = MyParser(StringIO.StringIO(s))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "652", "colour": "orange", "code": "        r = []\n", "error": "none", "author": "tom@organisms.be"}, {"index": "653", "colour": "orange", "code": "        try:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "654", "colour": "orange", "code": "            while 1:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "655", "colour": "orange", "code": "                r.append(parser.nexttoken())\n", "error": "none", "author": "tom@organisms.be"}, {"index": "656", "colour": "orange", "code": "        except PSEOF:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "657", "colour": "orange", "code": "            pass\n", "error": "none", "author": "tom@organisms.be"}, {"index": "658", "colour": "orange", "code": "        return r\n", "error": "none", "author": "tom@organisms.be"}, {"index": "659", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "660", "colour": "orange", "code": "    def get_objects(self, s):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "661", "colour": "orange", "code": "        import StringIO\n", "error": "none", "author": "tom@organisms.be"}, {"index": "662", "colour": "orange", "code": "        class MyParser(PSStackParser):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "663", "colour": "orange", "code": "            def flush(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "664", "colour": "orange", "code": "                self.add_results(*self.popall())\n", "error": "none", "author": "tom@organisms.be"}, {"index": "665", "colour": "orange", "code": "        parser = MyParser(StringIO.StringIO(s))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "666", "colour": "orange", "code": "        r = []\n", "error": "none", "author": "tom@organisms.be"}, {"index": "667", "colour": "orange", "code": "        try:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "668", "colour": "orange", "code": "            while 1:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "669", "colour": "orange", "code": "                r.append(parser.nextobject())\n", "error": "none", "author": "tom@organisms.be"}, {"index": "670", "colour": "orange", "code": "        except PSEOF:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "671", "colour": "orange", "code": "            pass\n", "error": "none", "author": "tom@organisms.be"}, {"index": "672", "colour": "orange", "code": "        return r\n", "error": "none", "author": "tom@organisms.be"}, {"index": "673", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "674", "colour": "orange", "code": "    def test_1(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "675", "colour": "orange", "code": "        tokens = self.get_tokens(self.TESTDATA)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "676", "colour": "orange", "code": "        print tokens\n", "error": "none", "author": "tom@organisms.be"}, {"index": "677", "colour": "orange", "code": "        self.assertEqual(tokens, self.TOKENS)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "678", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "679", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "680", "colour": "orange", "code": "    def test_2(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "681", "colour": "orange", "code": "        objs = self.get_objects(self.TESTDATA)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "682", "colour": "orange", "code": "        print objs\n", "error": "none", "author": "tom@organisms.be"}, {"index": "683", "colour": "orange", "code": "        self.assertEqual(objs, self.OBJS)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "684", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "685", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "686", "colour": "orange", "code": "if __name__ == '__main__': unittest.main()\n", "error": "none", "author": "tom@organisms.be"}]}