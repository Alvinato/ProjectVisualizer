{"path": "/home/asumal/git/cs410/pattern/pattern/web/pdf/psparser.py", "lines": [[{"error": "C", "line": "1", "code": "#!/usr/bin/env python2\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "2", "code": "import sys\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "3", "code": "import re\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "4", "code": "from utils import choplist\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "5", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "6", "code": "STRICT = 0\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "7", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "8", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "9", "code": "##  PS Exceptions\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "10", "code": "##\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "11", "code": "class PSException(Exception): pass\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "12", "code": "class PSEOF(PSException): pass\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "13", "code": "class PSSyntaxError(PSException): pass\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "14", "code": "class PSTypeError(PSException): pass\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "15", "code": "class PSValueError(PSException): pass\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "16", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "17", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "18", "code": "##  Basic PostScript Types\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "19", "code": "##\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "20", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "21", "code": "##  PSObject\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "22", "code": "##\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "23", "code": "class PSObject(object):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "24", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "25", "code": "    \"\"\"Base class for all PS or PDF-related data types.\"\"\"\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "26", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "27", "code": "    pass\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "28", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "29", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "30", "code": "##  PSLiteral\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "31", "code": "##\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "32", "code": "class PSLiteral(PSObject):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "33", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "34", "code": "    \"\"\"A class that represents a PostScript literal.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "35", "code": "    \n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "36", "code": "    Postscript literals are used as identifiers, such as\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "37", "code": "    variable names, property names and dictionary keys.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "38", "code": "    Literals are case sensitive and denoted by a preceding\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "39", "code": "    slash sign (e.g. \"/Name\")\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "40", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "41", "code": "    Note: Do not create an instance of PSLiteral directly.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "42", "code": "    Always use PSLiteralTable.intern().\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "43", "code": "    \"\"\"\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "44", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "45", "code": "    def __init__(self, name):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "46", "code": "        self.name = name\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "47", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "48", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "49", "code": "    def __repr__(self):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "50", "code": "        return '/%s' % self.name\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "51", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "52", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "53", "code": "##  PSKeyword\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "54", "code": "##\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "55", "code": "class PSKeyword(PSObject):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "56", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "57", "code": "    \"\"\"A class that represents a PostScript keyword.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "58", "code": "    \n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "59", "code": "    PostScript keywords are a dozen of predefined words.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "60", "code": "    Commands and directives in PostScript are expressed by keywords.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "61", "code": "    They are also used to denote the content boundaries.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "62", "code": "    \n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "63", "code": "    Note: Do not create an instance of PSKeyword directly.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "64", "code": "    Always use PSKeywordTable.intern().\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "65", "code": "    \"\"\"\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "66", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "67", "code": "    def __init__(self, name):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "68", "code": "        self.name = name\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "69", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "70", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "71", "code": "    def __repr__(self):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "72", "code": "        return self.name\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "73", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "74", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "75", "code": "##  PSSymbolTable\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "76", "code": "##\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "77", "code": "class PSSymbolTable(object):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "78", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "79", "code": "    \"\"\"A utility class for storing PSLiteral/PSKeyword objects.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "80", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "81", "code": "    Interned objects can be checked its identity with \"is\" operator.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "82", "code": "    \"\"\"\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "83", "code": "    \n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "84", "code": "    def __init__(self, klass):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "85", "code": "        self.dict = {}\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "86", "code": "        self.klass = klass\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "87", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "88", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "89", "code": "    def intern(self, name):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "90", "code": "        if name in self.dict:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "91", "code": "            lit = self.dict[name]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "92", "code": "        else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "93", "code": "            lit = self.klass(name)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "94", "code": "            self.dict[name] = lit\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "95", "code": "        return lit\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "96", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "97", "code": "PSLiteralTable = PSSymbolTable(PSLiteral)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "98", "code": "PSKeywordTable = PSSymbolTable(PSKeyword)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "99", "code": "LIT = PSLiteralTable.intern\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "100", "code": "KWD = PSKeywordTable.intern\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "101", "code": "KEYWORD_PROC_BEGIN = KWD('{')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "102", "code": "KEYWORD_PROC_END = KWD('}')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "103", "code": "KEYWORD_ARRAY_BEGIN = KWD('[')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "104", "code": "KEYWORD_ARRAY_END = KWD(']')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "105", "code": "KEYWORD_DICT_BEGIN = KWD('<<')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "106", "code": "KEYWORD_DICT_END = KWD('>>')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "107", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "108", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "109", "code": "def literal_name(x):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "110", "code": "    if not isinstance(x, PSLiteral):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "111", "code": "        if STRICT:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "112", "code": "            raise PSTypeError('Literal required: %r' % x)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "113", "code": "        else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "114", "code": "            return str(x)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "115", "code": "    return x.name\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "116", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "117", "code": "def keyword_name(x):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "118", "code": "    if not isinstance(x, PSKeyword):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "119", "code": "        if STRICT:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "120", "code": "            raise PSTypeError('Keyword required: %r' % x)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "121", "code": "        else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "122", "code": "            return str(x)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "123", "code": "    return x.name\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "124", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "125", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "126", "code": "##  PSBaseParser\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "127", "code": "##\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "128", "code": "EOL = re.compile(r'[\\r\\n]')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "129", "code": "SPC = re.compile(r'\\s')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "130", "code": "NONSPC = re.compile(r'\\S')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "131", "code": "HEX = re.compile(r'[0-9a-fA-F]')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "132", "code": "END_LITERAL = re.compile(r'[#/%\\[\\]()<>{}\\s]')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "133", "code": "END_HEX_STRING = re.compile(r'[^\\s0-9a-fA-F]')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "134", "code": "HEX_PAIR = re.compile(r'[0-9a-fA-F]{2}|.')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "135", "code": "END_NUMBER = re.compile(r'[^0-9]')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "136", "code": "END_KEYWORD = re.compile(r'[#/%\\[\\]()<>{}\\s]')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "137", "code": "END_STRING = re.compile(r'[()\\134]')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "138", "code": "OCT_STRING = re.compile(r'[0-7]')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "139", "code": "ESC_STRING = { 'b':8, 't':9, 'n':10, 'f':12, 'r':13, '(':40, ')':41, '\\\\':92 }\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "R", "line": "140", "code": "class PSBaseParser(object):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "141", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "142", "code": "    \"\"\"Most basic PostScript parser that performs only tokenization.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "143", "code": "    \"\"\"\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "144", "code": "    BUFSIZ = 4096\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "145", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "146", "code": "    debug = 0\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "147", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "148", "code": "    def __init__(self, fp):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "149", "code": "        self.fp = fp\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "150", "code": "        self.seek(0)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "151", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "152", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "153", "code": "    def __repr__(self):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "154", "code": "        return '<%s: %r, bufpos=%d>' % (self.__class__.__name__, self.fp, self.bufpos)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "155", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "156", "code": "    def flush(self):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "157", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "158", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "159", "code": "    def close(self):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "160", "code": "        self.flush()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "161", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "162", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "163", "code": "    def tell(self):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "164", "code": "        return self.bufpos+self.charpos\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "165", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "166", "code": "    def poll(self, pos=None, n=80):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "167", "code": "        pos0 = self.fp.tell()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "168", "code": "        if not pos:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "169", "code": "            pos = self.bufpos+self.charpos\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "170", "code": "        self.fp.seek(pos)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "171", "code": "        print >>sys.stderr, 'poll(%d): %r' % (pos, self.fp.read(n))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "172", "code": "        self.fp.seek(pos0)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "173", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "174", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "175", "code": "    def seek(self, pos):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "176", "code": "        \"\"\"Seeks the parser to the given position.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "177", "code": "        \"\"\"\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "178", "code": "        if 2 <= self.debug:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "179", "code": "            print >>sys.stderr, 'seek: %r' % pos\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "180", "code": "        self.fp.seek(pos)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "181", "code": "        # reset the status for nextline()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "182", "code": "        self.bufpos = pos\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "183", "code": "        self.buf = ''\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "184", "code": "        self.charpos = 0\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "185", "code": "        # reset the status for nexttoken()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "186", "code": "        self._parse1 = self._parse_main\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "187", "code": "        self._curtoken = ''\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "188", "code": "        self._curtokenpos = 0\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "189", "code": "        self._tokens = []\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "190", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "191", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "192", "code": "    def fillbuf(self):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "193", "code": "        if self.charpos < len(self.buf): return\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "194", "code": "        # fetch next chunk.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "195", "code": "        self.bufpos = self.fp.tell()\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "196", "code": "        self.buf = self.fp.read(self.BUFSIZ)\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "197", "code": "        if not self.buf:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "198", "code": "            raise PSEOF('Unexpected EOF')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "199", "code": "        self.charpos = 0\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "200", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "201", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "202", "code": "    def nextline(self):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "203", "code": "        \"\"\"Fetches a next line that ends either with \\\\r or \\\\n.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "204", "code": "        \"\"\"\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "205", "code": "        linebuf = ''\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "206", "code": "        linepos = self.bufpos + self.charpos\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "207", "code": "        eol = False\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "208", "code": "        while 1:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "209", "code": "            self.fillbuf()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "210", "code": "            if eol:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "211", "code": "                c = self.buf[self.charpos]\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "212", "code": "                # handle '\\r\\n'\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "213", "code": "                if c == '\\n':\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "214", "code": "                    linebuf += c\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "215", "code": "                    self.charpos += 1\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "216", "code": "                break\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "217", "code": "            m = EOL.search(self.buf, self.charpos)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "218", "code": "            if m:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "219", "code": "                linebuf += self.buf[self.charpos:m.end(0)]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "220", "code": "                self.charpos = m.end(0)\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "221", "code": "                if linebuf[-1] == '\\r':\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "222", "code": "                    eol = True\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "223", "code": "                else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "224", "code": "                    break\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "225", "code": "            else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "226", "code": "                linebuf += self.buf[self.charpos:]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "227", "code": "                self.charpos = len(self.buf)\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "228", "code": "        if 2 <= self.debug:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "229", "code": "            print >>sys.stderr, 'nextline: %r' % ((linepos, linebuf),)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "230", "code": "        return (linepos, linebuf)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "231", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "232", "code": "    def revreadlines(self):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "233", "code": "        \"\"\"Fetches a next line backword.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "234", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "235", "code": "        This is used to locate the trailers at the end of a file.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "236", "code": "        \"\"\"\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "237", "code": "        self.fp.seek(0, 2)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "238", "code": "        pos = self.fp.tell()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "239", "code": "        buf = ''\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "240", "code": "        while 0 < pos:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "241", "code": "            prevpos = pos\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "242", "code": "            pos = max(0, pos-self.BUFSIZ)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "243", "code": "            self.fp.seek(pos)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "244", "code": "            s = self.fp.read(prevpos-pos)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "245", "code": "            if not s: break\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "246", "code": "            while 1:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "247", "code": "                n = max(s.rfind('\\r'), s.rfind('\\n'))\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "248", "code": "                if n == -1:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "249", "code": "                    buf = s + buf\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "250", "code": "                    break\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "251", "code": "                yield s[n:]+buf\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "252", "code": "                s = s[:n]\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "253", "code": "                buf = ''\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "254", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "255", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "256", "code": "    def _parse_main(self, s, i):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "C", "line": "257", "code": "        m = NONSPC.search(s, i)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "258", "code": "        if not m:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "259", "code": "            return len(s)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "260", "code": "        j = m.start(0)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "261", "code": "        c = s[j]\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "W", "line": "262", "code": "        self._curtokenpos = self.bufpos+j\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "263", "code": "        if c == '%':\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "264", "code": "            self._curtoken = '%'\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "265", "code": "            self._parse1 = self._parse_comment\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "266", "code": "            return j+1\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "267", "code": "        elif c == '/':\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "268", "code": "            self._curtoken = ''\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "269", "code": "            self._parse1 = self._parse_literal\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "270", "code": "            return j+1\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "271", "code": "        elif c in '-+' or c.isdigit():\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "272", "code": "            self._curtoken = c\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "273", "code": "            self._parse1 = self._parse_number\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "274", "code": "            return j+1\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "275", "code": "        elif c == '.':\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "276", "code": "            self._curtoken = c\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "277", "code": "            self._parse1 = self._parse_float\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "278", "code": "            return j+1\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "279", "code": "        elif c.isalpha():\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "280", "code": "            self._curtoken = c\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "281", "code": "            self._parse1 = self._parse_keyword\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "282", "code": "            return j+1\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "283", "code": "        elif c == '(':\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "284", "code": "            self._curtoken = ''\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "285", "code": "            self.paren = 1\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "286", "code": "            self._parse1 = self._parse_string\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "287", "code": "            return j+1\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "288", "code": "        elif c == '<':\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "289", "code": "            self._curtoken = ''\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "290", "code": "            self._parse1 = self._parse_wopen\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "291", "code": "            return j+1\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "292", "code": "        elif c == '>':\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "293", "code": "            self._curtoken = ''\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "294", "code": "            self._parse1 = self._parse_wclose\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "295", "code": "            return j+1\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "296", "code": "        else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "297", "code": "            self._add_token(KWD(c))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "298", "code": "            return j+1\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "299", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "300", "code": "    def _add_token(self, obj):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "301", "code": "        self._tokens.append((self._curtokenpos, obj))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "302", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "303", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "304", "code": "    def _parse_comment(self, s, i):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "305", "code": "        m = EOL.search(s, i)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "306", "code": "        if not m:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "307", "code": "            self._curtoken += s[i:]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "308", "code": "            return (self._parse_comment, len(s))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "309", "code": "        j = m.start(0)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "310", "code": "        self._curtoken += s[i:j]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "311", "code": "        self._parse1 = self._parse_main\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "312", "code": "        # We ignore comments.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "313", "code": "        #self._tokens.append(self._curtoken)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "314", "code": "        return j\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "315", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "316", "code": "    def _parse_literal(self, s, i):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "317", "code": "        m = END_LITERAL.search(s, i)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "318", "code": "        if not m:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "319", "code": "            self._curtoken += s[i:]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "320", "code": "            return len(s)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "321", "code": "        j = m.start(0)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "322", "code": "        self._curtoken += s[i:j]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "323", "code": "        c = s[j]\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "324", "code": "        if c == '#':\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "325", "code": "            self.hex = ''\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "326", "code": "            self._parse1 = self._parse_literal_hex\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "327", "code": "            return j+1\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "328", "code": "        self._add_token(LIT(self._curtoken))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "329", "code": "        self._parse1 = self._parse_main\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "330", "code": "        return j\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "331", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "332", "code": "    def _parse_literal_hex(self, s, i):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "333", "code": "        c = s[i]\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "334", "code": "        if HEX.match(c) and len(self.hex) < 2:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "335", "code": "            self.hex += c\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "336", "code": "            return i+1\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "337", "code": "        if self.hex:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "338", "code": "            self._curtoken += chr(int(self.hex, 16))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "339", "code": "        self._parse1 = self._parse_literal\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "340", "code": "        return i\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "341", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "342", "code": "    def _parse_number(self, s, i):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "343", "code": "        m = END_NUMBER.search(s, i)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "344", "code": "        if not m:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "345", "code": "            self._curtoken += s[i:]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "346", "code": "            return len(s)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "347", "code": "        j = m.start(0)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "348", "code": "        self._curtoken += s[i:j]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "349", "code": "        c = s[j]\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "350", "code": "        if c == '.':\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "351", "code": "            self._curtoken += c\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "352", "code": "            self._parse1 = self._parse_float\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "353", "code": "            return j+1\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "354", "code": "        try:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "355", "code": "            self._add_token(int(self._curtoken))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "356", "code": "        except ValueError:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "357", "code": "            pass\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "358", "code": "        self._parse1 = self._parse_main\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "359", "code": "        return j\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "360", "code": "    \n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "361", "code": "    def _parse_float(self, s, i):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "362", "code": "        m = END_NUMBER.search(s, i)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "363", "code": "        if not m:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "364", "code": "            self._curtoken += s[i:]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "365", "code": "            return len(s)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "366", "code": "        j = m.start(0)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "367", "code": "        self._curtoken += s[i:j]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "368", "code": "        try:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "369", "code": "            self._add_token(float(self._curtoken))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "370", "code": "        except ValueError:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "371", "code": "            pass\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "372", "code": "        self._parse1 = self._parse_main\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "373", "code": "        return j\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "374", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "375", "code": "    def _parse_keyword(self, s, i):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "376", "code": "        m = END_KEYWORD.search(s, i)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "377", "code": "        if not m:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "378", "code": "            self._curtoken += s[i:]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "379", "code": "            return len(s)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "380", "code": "        j = m.start(0)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "381", "code": "        self._curtoken += s[i:j]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "382", "code": "        if self._curtoken == 'true':\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "383", "code": "            token = True\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "384", "code": "        elif self._curtoken == 'false':\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "385", "code": "            token = False\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "386", "code": "        else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "387", "code": "            token = KWD(self._curtoken)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "388", "code": "        self._add_token(token)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "389", "code": "        self._parse1 = self._parse_main\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "390", "code": "        return j\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "391", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "392", "code": "    def _parse_string(self, s, i):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "393", "code": "        m = END_STRING.search(s, i)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "394", "code": "        if not m:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "395", "code": "            self._curtoken += s[i:]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "396", "code": "            return len(s)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "397", "code": "        j = m.start(0)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "398", "code": "        self._curtoken += s[i:j]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "399", "code": "        c = s[j]\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "400", "code": "        if c == '\\\\':\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "401", "code": "            self.oct = ''\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "402", "code": "            self._parse1 = self._parse_string_1\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "403", "code": "            return j+1\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "404", "code": "        if c == '(':\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "405", "code": "            self.paren += 1\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "406", "code": "            self._curtoken += c\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "407", "code": "            return j+1\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "408", "code": "        if c == ')':\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "409", "code": "            self.paren -= 1\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "410", "code": "            if self.paren: # WTF, they said balanced parens need no special treatment.\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "411", "code": "                self._curtoken += c\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "412", "code": "                return j+1\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "413", "code": "        self._add_token(self._curtoken)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "414", "code": "        self._parse1 = self._parse_main\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "415", "code": "        return j+1\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "416", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "417", "code": "    def _parse_string_1(self, s, i):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "418", "code": "        c = s[i]\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "419", "code": "        if OCT_STRING.match(c) and len(self.oct) < 3:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "420", "code": "            self.oct += c\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "421", "code": "            return i+1\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "422", "code": "        if self.oct:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "423", "code": "            self._curtoken += chr(int(self.oct, 8))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "424", "code": "            self._parse1 = self._parse_string\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "425", "code": "            return i\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "426", "code": "        if c in ESC_STRING:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "427", "code": "            self._curtoken += chr(ESC_STRING[c])\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "428", "code": "        self._parse1 = self._parse_string\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "429", "code": "        return i+1\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "430", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "431", "code": "    def _parse_wopen(self, s, i):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "432", "code": "        c = s[i]\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "433", "code": "        if c == '<':\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "434", "code": "            self._add_token(KEYWORD_DICT_BEGIN)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "435", "code": "            self._parse1 = self._parse_main\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "436", "code": "            i += 1\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "437", "code": "        else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "438", "code": "            self._parse1 = self._parse_hexstring\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "439", "code": "        return i\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "440", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "441", "code": "    def _parse_wclose(self, s, i):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "442", "code": "        c = s[i]\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "443", "code": "        if c == '>':\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "444", "code": "            self._add_token(KEYWORD_DICT_END)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "445", "code": "            i += 1\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "446", "code": "        self._parse1 = self._parse_main\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "447", "code": "        return i\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "448", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "449", "code": "    def _parse_hexstring(self, s, i):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "450", "code": "        m = END_HEX_STRING.search(s, i)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "451", "code": "        if not m:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "452", "code": "            self._curtoken += s[i:]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "453", "code": "            return len(s)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "454", "code": "        j = m.start(0)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "455", "code": "        self._curtoken += s[i:j]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "456", "code": "        token = HEX_PAIR.sub(lambda m: chr(int(m.group(0), 16)),\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "457", "code": "                             SPC.sub('', self._curtoken))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "458", "code": "        self._add_token(token)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "459", "code": "        self._parse1 = self._parse_main\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "460", "code": "        return j\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "461", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "462", "code": "    def nexttoken(self):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "463", "code": "        while not self._tokens:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "464", "code": "            self.fillbuf()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "465", "code": "            self.charpos = self._parse1(self.buf, self.charpos)\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "466", "code": "        token = self._tokens.pop(0)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "467", "code": "        if 2 <= self.debug:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "468", "code": "            print >>sys.stderr, 'nexttoken: %r' % (token,)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "469", "code": "        return token\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "470", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "471", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "472", "code": "##  PSStackParser\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "473", "code": "##\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "474", "code": "class PSStackParser(PSBaseParser):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "475", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "476", "code": "    def __init__(self, fp):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "477", "code": "        PSBaseParser.__init__(self, fp)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "478", "code": "        self.reset()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "479", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "480", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "481", "code": "    def reset(self):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "W", "line": "482", "code": "        self.context = []\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "483", "code": "        self.curtype = None\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "484", "code": "        self.curstack = []\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "485", "code": "        self.results = []\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "486", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "487", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "488", "code": "    def seek(self, pos):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "489", "code": "        PSBaseParser.seek(self, pos)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "490", "code": "        self.reset()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "491", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "492", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "493", "code": "    def push(self, *objs):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "494", "code": "        self.curstack.extend(objs)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "495", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "496", "code": "    \n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "497", "code": "    def pop(self, n):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "498", "code": "        objs = self.curstack[-n:]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "499", "code": "        self.curstack[-n:] = []\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "500", "code": "        return objs\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "501", "code": "    \n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "502", "code": "    def popall(self):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "503", "code": "        objs = self.curstack\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "504", "code": "        self.curstack = []\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "505", "code": "        return objs\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "506", "code": "    \n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "507", "code": "    def add_results(self, *objs):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "508", "code": "        if 2 <= self.debug:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "509", "code": "            print >>sys.stderr, 'add_results: %r' % (objs,)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "510", "code": "        self.results.extend(objs)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "511", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "512", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "513", "code": "    def start_type(self, pos, type):\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "514", "code": "        self.context.append((pos, self.curtype, self.curstack))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "515", "code": "        (self.curtype, self.curstack) = (type, [])\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "516", "code": "        if 2 <= self.debug:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "517", "code": "            print >>sys.stderr, 'start_type: pos=%r, type=%r' % (pos, type)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "518", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "519", "code": "    \n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "W", "line": "520", "code": "    def end_type(self, type):\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "521", "code": "        if self.curtype != type:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "522", "code": "            raise PSTypeError('Type mismatch: %r != %r' % (self.curtype, type))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "523", "code": "        objs = [ obj for (_,obj) in self.curstack ]\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "W", "line": "524", "code": "        (pos, self.curtype, self.curstack) = self.context.pop()\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "525", "code": "        if 2 <= self.debug:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "526", "code": "            print >>sys.stderr, 'end_type: pos=%r, type=%r, objs=%r' % (pos, type, objs)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "527", "code": "        return (pos, objs)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "528", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "529", "code": "    def do_keyword(self, pos, token):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "530", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "531", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "532", "code": "    def nextobject(self):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "533", "code": "        \"\"\"Yields a list of objects.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "534", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "535", "code": "        Returns keywords, literals, strings, numbers, arrays and dictionaries.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "536", "code": "        Arrays and dictionaries are represented as Python lists and dictionaries.\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "537", "code": "        \"\"\"\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "538", "code": "        while not self.results:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "539", "code": "            (pos, token) = self.nexttoken()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "540", "code": "            #print (pos,token), (self.curtype, self.curstack)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "541", "code": "            if (isinstance(token, int) or\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "542", "code": "                isinstance(token, float) or\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "543", "code": "                isinstance(token, bool) or\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "544", "code": "                isinstance(token, str) or\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "545", "code": "                isinstance(token, PSLiteral)):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "546", "code": "                # normal token\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "547", "code": "                self.push((pos, token))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "548", "code": "            elif token == KEYWORD_ARRAY_BEGIN:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "549", "code": "                # begin array\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "550", "code": "                self.start_type(pos, 'a')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "551", "code": "            elif token == KEYWORD_ARRAY_END:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "552", "code": "                # end array\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "553", "code": "                try:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "554", "code": "                    self.push(self.end_type('a'))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "555", "code": "                except PSTypeError:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "556", "code": "                    if STRICT: raise\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "557", "code": "            elif token == KEYWORD_DICT_BEGIN:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "558", "code": "                # begin dictionary\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "559", "code": "                self.start_type(pos, 'd')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "560", "code": "            elif token == KEYWORD_DICT_END:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "561", "code": "                # end dictionary\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "562", "code": "                try:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "563", "code": "                    (pos, objs) = self.end_type('d')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "564", "code": "                    if len(objs) % 2 != 0:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "565", "code": "                        raise PSSyntaxError('Invalid dictionary construct: %r' % objs)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "566", "code": "                    # construct a Python dictionary.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "567", "code": "                    d = dict( (literal_name(k), v) for (k,v) in choplist(2, objs) if v is not None )\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "568", "code": "                    self.push((pos, d))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "569", "code": "                except PSTypeError:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "570", "code": "                    if STRICT: raise\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "571", "code": "            elif token == KEYWORD_PROC_BEGIN:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "572", "code": "                # begin proc\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "573", "code": "                self.start_type(pos, 'p')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "574", "code": "            elif token == KEYWORD_PROC_END:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "575", "code": "                # end proc\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "576", "code": "                try:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "577", "code": "                    self.push(self.end_type('p'))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "578", "code": "                except PSTypeError:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "579", "code": "                    if STRICT: raise\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "580", "code": "            else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "581", "code": "                if 2 <= self.debug:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "582", "code": "                    print >>sys.stderr, 'do_keyword: pos=%r, token=%r, stack=%r' % \\\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "583", "code": "                          (pos, token, self.curstack)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "584", "code": "                self.do_keyword(pos, token)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "585", "code": "            if self.context:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "586", "code": "                continue\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "587", "code": "            else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "588", "code": "                self.flush()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "589", "code": "        obj = self.results.pop(0)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "590", "code": "        if 2 <= self.debug:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "591", "code": "            print >>sys.stderr, 'nextobject: %r' % (obj,)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "592", "code": "        return obj\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "593", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "594", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "595", "code": "##  Simplistic Test cases\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "596", "code": "##\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "597", "code": "import unittest\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "598", "code": "class TestPSBaseParser(unittest.TestCase):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "599", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "600", "code": "    TESTDATA = r'''%!PS\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "601", "code": "begin end\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "602", "code": " \"  @ #\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "603", "code": "/a/BCD /Some_Name /foo#5f#xbaa\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "604", "code": "0 +1 -2 .5 1.234\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "605", "code": "(abc) () (abc ( def ) ghi)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "606", "code": "(def\\040\\0\\0404ghi) (bach\\\\slask) (foo\\nbaa)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "607", "code": "(this % is not a comment.)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "608", "code": "(foo\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "609", "code": "baa)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "610", "code": "(foo\\\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "611", "code": "baa)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "612", "code": "<> <20> < 40 4020 >\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "613", "code": "<abcd00\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "614", "code": "12345>\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "615", "code": "func/a/b{(c)do*}def\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "616", "code": "[ 1 (z) ! ]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "617", "code": "<< /foo (bar) >>\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "618", "code": "'''\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "619", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "620", "code": "    TOKENS = [\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "621", "code": "      (5, KWD('begin')), (11, KWD('end')), (16, KWD('\"')), (19, KWD('@')),\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "622", "code": "      (21, KWD('#')), (23, LIT('a')), (25, LIT('BCD')), (30, LIT('Some_Name')),\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "623", "code": "      (41, LIT('foo_xbaa')), (54, 0), (56, 1), (59, -2), (62, 0.5),\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "624", "code": "      (65, 1.234), (71, 'abc'), (77, ''), (80, 'abc ( def ) ghi'),\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "625", "code": "      (98, 'def \\x00 4ghi'), (118, 'bach\\\\slask'), (132, 'foo\\nbaa'),\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "626", "code": "      (143, 'this % is not a comment.'), (170, 'foo\\nbaa'), (180, 'foobaa'),\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "627", "code": "      (191, ''), (194, ' '), (199, '@@ '), (211, '\\xab\\xcd\\x00\\x124\\x05'),\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "628", "code": "      (226, KWD('func')), (230, LIT('a')), (232, LIT('b')),\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "629", "code": "      (234, KWD('{')), (235, 'c'), (238, KWD('do*')), (241, KWD('}')),\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "630", "code": "      (242, KWD('def')), (246, KWD('[')), (248, 1), (250, 'z'), (254, KWD('!')),\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "631", "code": "      (256, KWD(']')), (258, KWD('<<')), (261, LIT('foo')), (266, 'bar'),\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "632", "code": "      (272, KWD('>>'))\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "633", "code": "      ]\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "634", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "635", "code": "    OBJS = [\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "636", "code": "      (23, LIT('a')), (25, LIT('BCD')), (30, LIT('Some_Name')),\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "637", "code": "      (41, LIT('foo_xbaa')), (54, 0), (56, 1), (59, -2), (62, 0.5),\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "638", "code": "      (65, 1.234), (71, 'abc'), (77, ''), (80, 'abc ( def ) ghi'),\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "639", "code": "      (98, 'def \\x00 4ghi'), (118, 'bach\\\\slask'), (132, 'foo\\nbaa'),\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "640", "code": "      (143, 'this % is not a comment.'), (170, 'foo\\nbaa'), (180, 'foobaa'),\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "641", "code": "      (191, ''), (194, ' '), (199, '@@ '), (211, '\\xab\\xcd\\x00\\x124\\x05'),\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "642", "code": "      (230, LIT('a')), (232, LIT('b')), (234, ['c']), (246, [1, 'z']),\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "643", "code": "      (258, {'foo': 'bar'}),\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "644", "code": "      ]\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "645", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "646", "code": "    def get_tokens(self, s):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "647", "code": "        import StringIO\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "648", "code": "        class MyParser(PSBaseParser):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "649", "code": "            def flush(self):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "E", "line": "650", "code": "                self.add_results(*self.popall())\n", "colour": "yellow", "author": "tom@organisms.be"}, {"error": "none", "line": "651", "code": "        parser = MyParser(StringIO.StringIO(s))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "652", "code": "        r = []\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "653", "code": "        try:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "654", "code": "            while 1:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "655", "code": "                r.append(parser.nexttoken())\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "656", "code": "        except PSEOF:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "657", "code": "            pass\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "658", "code": "        return r\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "659", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "660", "code": "    def get_objects(self, s):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "661", "code": "        import StringIO\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "662", "code": "        class MyParser(PSStackParser):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "663", "code": "            def flush(self):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "664", "code": "                self.add_results(*self.popall())\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "665", "code": "        parser = MyParser(StringIO.StringIO(s))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "666", "code": "        r = []\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "667", "code": "        try:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "668", "code": "            while 1:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "669", "code": "                r.append(parser.nextobject())\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "670", "code": "        except PSEOF:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "671", "code": "            pass\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "672", "code": "        return r\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "673", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "674", "code": "    def test_1(self):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "675", "code": "        tokens = self.get_tokens(self.TESTDATA)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "676", "code": "        print tokens\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "677", "code": "        self.assertEqual(tokens, self.TOKENS)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "678", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "679", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "680", "code": "    def test_2(self):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "681", "code": "        objs = self.get_objects(self.TESTDATA)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "682", "code": "        print objs\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "683", "code": "        self.assertEqual(objs, self.OBJS)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "684", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "685", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "686", "code": "if __name__ == '__main__': unittest.main()\n", "colour": "blue", "author": "tom@organisms.be"}]]}