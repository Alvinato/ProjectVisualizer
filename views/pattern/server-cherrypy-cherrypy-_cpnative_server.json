{"path": "/home/asumal/git/cs410/pattern/pattern/server/cherrypy/cherrypy/_cpnative_server.py", "lines": [[{"error": "none", "line": "1", "code": "\"\"\"Native adapter for serving CherryPy via its builtin server.\"\"\"\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "2", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "3", "code": "import logging\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "4", "code": "import sys\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "5", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "6", "code": "import cherrypy\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "7", "code": "from cherrypy._cpcompat import BytesIO\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "8", "code": "from cherrypy._cperror import format_exc, bare_error\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "9", "code": "from cherrypy.lib import httputil\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "10", "code": "from cherrypy import wsgiserver\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "11", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "12", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "13", "code": "class NativeGateway(wsgiserver.Gateway):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "14", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "15", "code": "    recursive = False\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "16", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "17", "code": "    def respond(self):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "18", "code": "        req = self.req\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "19", "code": "        try:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "20", "code": "            # Obtain a Request object from CherryPy\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "21", "code": "            local = req.server.bind_addr\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "22", "code": "            local = httputil.Host(local[0], local[1], \"\")\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "23", "code": "            remote = req.conn.remote_addr, req.conn.remote_port\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "24", "code": "            remote = httputil.Host(remote[0], remote[1], \"\")\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "25", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "26", "code": "            scheme = req.scheme\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "27", "code": "            sn = cherrypy.tree.script_name(req.uri or \"/\")\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "28", "code": "            if sn is None:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "29", "code": "                self.send_response('404 Not Found', [], [''])\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "30", "code": "            else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "31", "code": "                app = cherrypy.tree.apps[sn]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "32", "code": "                method = req.method\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "33", "code": "                path = req.path\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "34", "code": "                qs = req.qs or \"\"\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "35", "code": "                headers = req.inheaders.items()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "36", "code": "                rfile = req.rfile\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "37", "code": "                prev = None\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "38", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "39", "code": "                try:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "40", "code": "                    redirections = []\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "41", "code": "                    while True:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "42", "code": "                        request, response = app.get_serving(\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "43", "code": "                            local, remote, scheme, \"HTTP/1.1\")\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "44", "code": "                        request.multithread = True\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "45", "code": "                        request.multiprocess = False\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "46", "code": "                        request.app = app\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "47", "code": "                        request.prev = prev\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "48", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "49", "code": "                        # Run the CherryPy Request object and obtain the response\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "50", "code": "                        try:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "51", "code": "                            request.run(method, path, qs, req.request_protocol, headers, rfile)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "52", "code": "                            break\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "53", "code": "                        except cherrypy.InternalRedirect:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "54", "code": "                            ir = sys.exc_info()[1]\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "55", "code": "                            app.release_serving()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "56", "code": "                            prev = request\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "57", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "58", "code": "                            if not self.recursive:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "59", "code": "                                if ir.path in redirections:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "60", "code": "                                    raise RuntimeError(\"InternalRedirector visited the \"\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "61", "code": "                                                       \"same URL twice: %r\" % ir.path)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "62", "code": "                                else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "63", "code": "                                    # Add the *previous* path_info + qs to redirections.\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "64", "code": "                                    if qs:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "65", "code": "                                        qs = \"?\" + qs\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "66", "code": "                                    redirections.append(sn + path + qs)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "67", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "68", "code": "                            # Munge environment and try again.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "69", "code": "                            method = \"GET\"\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "70", "code": "                            path = ir.path\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "71", "code": "                            qs = ir.query_string\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "72", "code": "                            rfile = BytesIO()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "73", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "74", "code": "                    self.send_response(\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "75", "code": "                        response.output_status, response.header_list,\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "76", "code": "                        response.body)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "77", "code": "                finally:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "78", "code": "                    app.release_serving()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "79", "code": "        except:\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "C", "line": "80", "code": "            tb = format_exc()\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "81", "code": "            #print tb\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "82", "code": "            cherrypy.log(tb, 'NATIVE_ADAPTER', severity=logging.ERROR)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "83", "code": "            s, h, b = bare_error()\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "84", "code": "            self.send_response(s, h, b)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "85", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "86", "code": "    def send_response(self, status, headers, body):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "87", "code": "        req = self.req\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "88", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "89", "code": "        # Set response status\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "90", "code": "        req.status = str(status or \"500 Server Error\")\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "91", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "92", "code": "        # Set response headers\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "93", "code": "        for header, value in headers:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "94", "code": "            req.outheaders.append((header, value))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "95", "code": "        if (req.ready and not req.sent_headers):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "96", "code": "            req.sent_headers = True\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "97", "code": "            req.send_headers()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "98", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "99", "code": "        # Set response body\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "100", "code": "        for seg in body:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "101", "code": "            req.write(seg)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "102", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "103", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "104", "code": "class CPHTTPServer(wsgiserver.HTTPServer):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "105", "code": "    \"\"\"Wrapper for wsgiserver.HTTPServer.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "106", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "107", "code": "    wsgiserver has been designed to not reference CherryPy in any way,\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "108", "code": "    so that it can be used in other frameworks and applications.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "109", "code": "    Therefore, we wrap it here, so we can apply some attributes\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "110", "code": "    from config -> cherrypy.server -> HTTPServer.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "111", "code": "    \"\"\"\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "112", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "113", "code": "    def __init__(self, server_adapter=cherrypy.server):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "114", "code": "        self.server_adapter = server_adapter\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "115", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "116", "code": "        server_name = (self.server_adapter.socket_host or\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "117", "code": "                       self.server_adapter.socket_file or\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "118", "code": "                       None)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "119", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "120", "code": "        wsgiserver.HTTPServer.__init__(\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "121", "code": "            self, server_adapter.bind_addr, NativeGateway,\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "122", "code": "            minthreads=server_adapter.thread_pool,\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "123", "code": "            maxthreads=server_adapter.thread_pool_max,\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "124", "code": "            server_name=server_name)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "125", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "126", "code": "        self.max_request_header_size = self.server_adapter.max_request_header_size or 0\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "127", "code": "        self.max_request_body_size = self.server_adapter.max_request_body_size or 0\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "128", "code": "        self.request_queue_size = self.server_adapter.socket_queue_size\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "129", "code": "        self.timeout = self.server_adapter.socket_timeout\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "130", "code": "        self.shutdown_timeout = self.server_adapter.shutdown_timeout\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "131", "code": "        self.protocol = self.server_adapter.protocol_version\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "132", "code": "        self.nodelay = self.server_adapter.nodelay\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "133", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "134", "code": "        ssl_module = self.server_adapter.ssl_module or 'pyopenssl'\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "135", "code": "        if self.server_adapter.ssl_context:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "136", "code": "            adapter_class = wsgiserver.get_ssl_adapter_class(ssl_module)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "137", "code": "            self.ssl_adapter = adapter_class(\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "138", "code": "                self.server_adapter.ssl_certificate,\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "139", "code": "                self.server_adapter.ssl_private_key,\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "140", "code": "                self.server_adapter.ssl_certificate_chain)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "141", "code": "            self.ssl_adapter.context = self.server_adapter.ssl_context\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "142", "code": "        elif self.server_adapter.ssl_certificate:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "143", "code": "            adapter_class = wsgiserver.get_ssl_adapter_class(ssl_module)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "144", "code": "            self.ssl_adapter = adapter_class(\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "145", "code": "                self.server_adapter.ssl_certificate,\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "146", "code": "                self.server_adapter.ssl_private_key,\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "147", "code": "                self.server_adapter.ssl_certificate_chain)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "148", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "149", "code": "\n", "colour": "black", "author": "tom@organisms.be"}]]}