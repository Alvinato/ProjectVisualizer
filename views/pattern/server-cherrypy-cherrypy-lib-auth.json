{"path": "/home/asumal/git/cs410/pattern/pattern/server/cherrypy/cherrypy/lib/auth.py", "lines": [{"index": "1", "colour": "orange", "code": "import cherrypy\n", "error": "none", "author": "tom@organisms.be"}, {"index": "2", "colour": "orange", "code": "from cherrypy.lib import httpauth\n", "error": "none", "author": "tom@organisms.be"}, {"index": "3", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "4", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "5", "colour": "orange", "code": "def check_auth(users, encrypt=None, realm=None):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "6", "colour": "orange", "code": "    \"\"\"If an authorization header contains credentials, return True, else False.\"\"\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "7", "colour": "orange", "code": "    request = cherrypy.serving.request\n", "error": "none", "author": "tom@organisms.be"}, {"index": "8", "colour": "orange", "code": "    if 'authorization' in request.headers:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "9", "colour": "orange", "code": "        # make sure the provided credentials are correctly set\n", "error": "none", "author": "tom@organisms.be"}, {"index": "10", "colour": "orange", "code": "        ah = httpauth.parseAuthorization(request.headers['authorization'])\n", "error": "none", "author": "tom@organisms.be"}, {"index": "11", "colour": "orange", "code": "        if ah is None:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "12", "colour": "orange", "code": "            raise cherrypy.HTTPError(400, 'Bad Request')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "13", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "14", "colour": "orange", "code": "        if not encrypt:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "15", "colour": "orange", "code": "            encrypt = httpauth.DIGEST_AUTH_ENCODERS[httpauth.MD5]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "16", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "17", "colour": "orange", "code": "        if hasattr(users, '__call__'):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "18", "colour": "orange", "code": "            try:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "19", "colour": "orange", "code": "                # backward compatibility\n", "error": "none", "author": "tom@organisms.be"}, {"index": "20", "colour": "orange", "code": "                users = users() # expect it to return a dictionary\n", "error": "none", "author": "tom@organisms.be"}, {"index": "21", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "22", "colour": "orange", "code": "                if not isinstance(users, dict):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "23", "colour": "orange", "code": "                    raise ValueError(\"Authentication users must be a dictionary\")\n", "error": "none", "author": "tom@organisms.be"}, {"index": "24", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "25", "colour": "orange", "code": "                # fetch the user password\n", "error": "none", "author": "tom@organisms.be"}, {"index": "26", "colour": "orange", "code": "                password = users.get(ah[\"username\"], None)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "27", "colour": "orange", "code": "            except TypeError:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "28", "colour": "orange", "code": "                # returns a password (encrypted or clear text)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "29", "colour": "orange", "code": "                password = users(ah[\"username\"])\n", "error": "none", "author": "tom@organisms.be"}, {"index": "30", "colour": "orange", "code": "        else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "31", "colour": "orange", "code": "            if not isinstance(users, dict):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "32", "colour": "orange", "code": "                raise ValueError(\"Authentication users must be a dictionary\")\n", "error": "none", "author": "tom@organisms.be"}, {"index": "33", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "34", "colour": "orange", "code": "            # fetch the user password\n", "error": "none", "author": "tom@organisms.be"}, {"index": "35", "colour": "orange", "code": "            password = users.get(ah[\"username\"], None)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "36", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "37", "colour": "orange", "code": "        # validate the authorization by re-computing it here\n", "error": "none", "author": "tom@organisms.be"}, {"index": "38", "colour": "orange", "code": "        # and compare it with what the user-agent provided\n", "error": "none", "author": "tom@organisms.be"}, {"index": "39", "colour": "orange", "code": "        if httpauth.checkResponse(ah, password, method=request.method,\n", "error": "none", "author": "tom@organisms.be"}, {"index": "40", "colour": "orange", "code": "                                  encrypt=encrypt, realm=realm):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "41", "colour": "orange", "code": "            request.login = ah[\"username\"]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "42", "colour": "orange", "code": "            return True\n", "error": "none", "author": "tom@organisms.be"}, {"index": "43", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "44", "colour": "orange", "code": "        request.login = False\n", "error": "none", "author": "tom@organisms.be"}, {"index": "45", "colour": "orange", "code": "    return False\n", "error": "none", "author": "tom@organisms.be"}, {"index": "46", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "47", "colour": "orange", "code": "def basic_auth(realm, users, encrypt=None, debug=False):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "48", "colour": "orange", "code": "    \"\"\"If auth fails, raise 401 with a basic authentication header.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "49", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "50", "colour": "orange", "code": "    realm\n", "error": "none", "author": "tom@organisms.be"}, {"index": "51", "colour": "orange", "code": "        A string containing the authentication realm.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "52", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "53", "colour": "orange", "code": "    users\n", "error": "none", "author": "tom@organisms.be"}, {"index": "54", "colour": "orange", "code": "        A dict of the form: {username: password} or a callable returning a dict.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "55", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "56", "colour": "orange", "code": "    encrypt\n", "error": "none", "author": "tom@organisms.be"}, {"index": "57", "colour": "orange", "code": "        callable used to encrypt the password returned from the user-agent.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "58", "colour": "orange", "code": "        if None it defaults to a md5 encryption.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "59", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "60", "colour": "orange", "code": "    \"\"\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "61", "colour": "orange", "code": "    if check_auth(users, encrypt):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "62", "colour": "orange", "code": "        if debug:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "63", "colour": "orange", "code": "            cherrypy.log('Auth successful', 'TOOLS.BASIC_AUTH')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "64", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "65", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "66", "colour": "orange", "code": "    # inform the user-agent this path is protected\n", "error": "none", "author": "tom@organisms.be"}, {"index": "67", "colour": "orange", "code": "    cherrypy.serving.response.headers['www-authenticate'] = httpauth.basicAuth(realm)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "68", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "69", "colour": "orange", "code": "    raise cherrypy.HTTPError(401, \"You are not authorized to access that resource\")\n", "error": "none", "author": "tom@organisms.be"}, {"index": "70", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "71", "colour": "orange", "code": "def digest_auth(realm, users, debug=False):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "72", "colour": "orange", "code": "    \"\"\"If auth fails, raise 401 with a digest authentication header.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "73", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "74", "colour": "orange", "code": "    realm\n", "error": "none", "author": "tom@organisms.be"}, {"index": "75", "colour": "orange", "code": "        A string containing the authentication realm.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "76", "colour": "orange", "code": "    users\n", "error": "none", "author": "tom@organisms.be"}, {"index": "77", "colour": "orange", "code": "        A dict of the form: {username: password} or a callable returning a dict.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "78", "colour": "orange", "code": "    \"\"\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "79", "colour": "orange", "code": "    if check_auth(users, realm=realm):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "80", "colour": "orange", "code": "        if debug:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "81", "colour": "orange", "code": "            cherrypy.log('Auth successful', 'TOOLS.DIGEST_AUTH')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "82", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "83", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "84", "colour": "orange", "code": "    # inform the user-agent this path is protected\n", "error": "none", "author": "tom@organisms.be"}, {"index": "85", "colour": "orange", "code": "    cherrypy.serving.response.headers['www-authenticate'] = httpauth.digestAuth(realm)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "86", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "87", "colour": "orange", "code": "    raise cherrypy.HTTPError(401, \"You are not authorized to access that resource\")\n", "error": "none", "author": "tom@organisms.be"}]}