{"path": "/home/asumal/git/cs410/pattern/pattern/server/cherrypy/cherrypy/lib/xmlrpcutil.py", "lines": [[{"index": "1", "colour": "orange", "code": "import sys\n", "error": "none", "author": "tom@organisms.be"}, {"index": "2", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "3", "colour": "orange", "code": "import cherrypy\n", "error": "none", "author": "tom@organisms.be"}, {"index": "4", "colour": "orange", "code": "from cherrypy._cpcompat import ntob\n", "error": "none", "author": "tom@organisms.be"}, {"index": "5", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "6", "colour": "orange", "code": "def get_xmlrpclib():\n", "error": "none", "author": "tom@organisms.be"}, {"index": "7", "colour": "orange", "code": "    try:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "8", "colour": "orange", "code": "        import xmlrpc.client as x\n", "error": "none", "author": "tom@organisms.be"}, {"index": "9", "colour": "orange", "code": "    except ImportError:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "10", "colour": "orange", "code": "        import xmlrpclib as x\n", "error": "none", "author": "tom@organisms.be"}, {"index": "11", "colour": "orange", "code": "    return x\n", "error": "none", "author": "tom@organisms.be"}, {"index": "12", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "13", "colour": "orange", "code": "def process_body():\n", "error": "none", "author": "tom@organisms.be"}, {"index": "14", "colour": "orange", "code": "    \"\"\"Return (params, method) from request body.\"\"\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "15", "colour": "orange", "code": "    try:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "16", "colour": "orange", "code": "        return get_xmlrpclib().loads(cherrypy.request.body.read())\n", "error": "none", "author": "tom@organisms.be"}, {"index": "17", "colour": "green", "code": "    except Exception:\n", "error": "W", "author": "tom@organisms.be"}, {"index": "18", "colour": "orange", "code": "        return ('ERROR PARAMS', ), 'ERRORMETHOD'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "19", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "20", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "21", "colour": "orange", "code": "def patched_path(path):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "22", "colour": "orange", "code": "    \"\"\"Return 'path', doctored for RPC.\"\"\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "23", "colour": "orange", "code": "    if not path.endswith('/'):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "24", "colour": "orange", "code": "        path += '/'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "25", "colour": "orange", "code": "    if path.startswith('/RPC2/'):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "26", "colour": "orange", "code": "        # strip the first /rpc2\n", "error": "none", "author": "tom@organisms.be"}, {"index": "27", "colour": "orange", "code": "        path = path[5:]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "28", "colour": "orange", "code": "    return path\n", "error": "none", "author": "tom@organisms.be"}, {"index": "29", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "30", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "31", "colour": "orange", "code": "def _set_response(body):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "32", "colour": "orange", "code": "    # The XML-RPC spec (http://www.xmlrpc.com/spec) says:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "33", "colour": "orange", "code": "    # \"Unless there's a lower-level error, always return 200 OK.\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "34", "colour": "orange", "code": "    # Since Python's xmlrpclib interprets a non-200 response\n", "error": "none", "author": "tom@organisms.be"}, {"index": "35", "colour": "orange", "code": "    # as a \"Protocol Error\", we'll just return 200 every time.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "36", "colour": "orange", "code": "    response = cherrypy.response\n", "error": "none", "author": "tom@organisms.be"}, {"index": "37", "colour": "orange", "code": "    response.status = '200 OK'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "38", "colour": "orange", "code": "    response.body = ntob(body, 'utf-8')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "39", "colour": "orange", "code": "    response.headers['Content-Type'] = 'text/xml'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "40", "colour": "orange", "code": "    response.headers['Content-Length'] = len(body)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "41", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "42", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "43", "colour": "orange", "code": "def respond(body, encoding='utf-8', allow_none=0):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "44", "colour": "orange", "code": "    xmlrpclib = get_xmlrpclib()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "45", "colour": "orange", "code": "    if not isinstance(body, xmlrpclib.Fault):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "46", "colour": "orange", "code": "        body = (body,)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "47", "colour": "orange", "code": "    _set_response(xmlrpclib.dumps(body, methodresponse=1,\n", "error": "none", "author": "tom@organisms.be"}, {"index": "48", "colour": "orange", "code": "                                  encoding=encoding,\n", "error": "none", "author": "tom@organisms.be"}, {"index": "49", "colour": "orange", "code": "                                  allow_none=allow_none))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "50", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "51", "colour": "green", "code": "def on_error(*args, **kwargs):\n", "error": "W", "author": "tom@organisms.be"}, {"index": "52", "colour": "orange", "code": "    body = str(sys.exc_info()[1])\n", "error": "none", "author": "tom@organisms.be"}, {"index": "53", "colour": "orange", "code": "    xmlrpclib = get_xmlrpclib()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "54", "colour": "orange", "code": "    _set_response(xmlrpclib.dumps(xmlrpclib.Fault(1, body)))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "55", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}]]}