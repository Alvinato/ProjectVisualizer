{"path": "/home/asumal/git/cs410/pattern/pattern/server/cherrypy/cherrypy/lib/xmlrpcutil.py", "lines": [[{"error": "C", "line": "1", "code": "import sys\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "2", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "3", "code": "import cherrypy\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "4", "code": "from cherrypy._cpcompat import ntob\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "5", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "6", "code": "def get_xmlrpclib():\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "7", "code": "    try:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "F", "line": "8", "code": "        import xmlrpc.client as x\n", "colour": "red", "author": "tom@organisms.be"}, {"error": "none", "line": "9", "code": "    except ImportError:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "10", "code": "        import xmlrpclib as x\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "11", "code": "    return x\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "12", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "13", "code": "def process_body():\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "14", "code": "    \"\"\"Return (params, method) from request body.\"\"\"\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "15", "code": "    try:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "16", "code": "        return get_xmlrpclib().loads(cherrypy.request.body.read())\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "17", "code": "    except Exception:\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "18", "code": "        return ('ERROR PARAMS', ), 'ERRORMETHOD'\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "19", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "20", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "21", "code": "def patched_path(path):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "22", "code": "    \"\"\"Return 'path', doctored for RPC.\"\"\"\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "23", "code": "    if not path.endswith('/'):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "24", "code": "        path += '/'\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "25", "code": "    if path.startswith('/RPC2/'):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "26", "code": "        # strip the first /rpc2\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "27", "code": "        path = path[5:]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "28", "code": "    return path\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "29", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "30", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "31", "code": "def _set_response(body):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "32", "code": "    # The XML-RPC spec (http://www.xmlrpc.com/spec) says:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "33", "code": "    # \"Unless there's a lower-level error, always return 200 OK.\"\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "34", "code": "    # Since Python's xmlrpclib interprets a non-200 response\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "35", "code": "    # as a \"Protocol Error\", we'll just return 200 every time.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "36", "code": "    response = cherrypy.response\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "37", "code": "    response.status = '200 OK'\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "38", "code": "    response.body = ntob(body, 'utf-8')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "39", "code": "    response.headers['Content-Type'] = 'text/xml'\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "40", "code": "    response.headers['Content-Length'] = len(body)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "41", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "42", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "43", "code": "def respond(body, encoding='utf-8', allow_none=0):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "44", "code": "    xmlrpclib = get_xmlrpclib()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "45", "code": "    if not isinstance(body, xmlrpclib.Fault):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "46", "code": "        body = (body,)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "47", "code": "    _set_response(xmlrpclib.dumps(body, methodresponse=1,\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "48", "code": "                                  encoding=encoding,\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "49", "code": "                                  allow_none=allow_none))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "50", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "51", "code": "def on_error(*args, **kwargs):\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "52", "code": "    body = str(sys.exc_info()[1])\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "53", "code": "    xmlrpclib = get_xmlrpclib()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "54", "code": "    _set_response(xmlrpclib.dumps(xmlrpclib.Fault(1, body)))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "55", "code": "\n", "colour": "black", "author": "tom@organisms.be"}]]}