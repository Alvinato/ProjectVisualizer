{"path": "/home/asumal/git/cs410/pattern/pattern/web/json/ordered_dict.py", "lines": [[{"index": "1", "colour": "orange", "code": "\"\"\"Drop-in replacement for collections.OrderedDict by Raymond Hettinger\n", "error": "none", "author": "tom@organisms.be"}, {"index": "2", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "3", "colour": "orange", "code": "http://code.activestate.com/recipes/576693/\n", "error": "none", "author": "tom@organisms.be"}, {"index": "4", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "5", "colour": "orange", "code": "\"\"\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "6", "colour": "orange", "code": "from UserDict import DictMixin\n", "error": "none", "author": "tom@organisms.be"}, {"index": "7", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "8", "colour": "orange", "code": "# Modified from original to support Python 2.4, see\n", "error": "none", "author": "tom@organisms.be"}, {"index": "9", "colour": "orange", "code": "# http://code.google.com/p/simplejson/issues/detail?id=53\n", "error": "none", "author": "tom@organisms.be"}, {"index": "10", "colour": "orange", "code": "try:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "11", "colour": "orange", "code": "    all\n", "error": "none", "author": "tom@organisms.be"}, {"index": "12", "colour": "orange", "code": "except NameError:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "13", "colour": "green", "code": "    def all(seq):\n", "error": "W", "author": "tom@organisms.be"}, {"index": "14", "colour": "orange", "code": "        for elem in seq:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "15", "colour": "orange", "code": "            if not elem:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "16", "colour": "orange", "code": "                return False\n", "error": "none", "author": "tom@organisms.be"}, {"index": "17", "colour": "orange", "code": "        return True\n", "error": "none", "author": "tom@organisms.be"}, {"index": "18", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "19", "colour": "orange", "code": "class OrderedDict(dict, DictMixin):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "20", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "21", "colour": "green", "code": "    def __init__(self, *args, **kwds):\n", "error": "W", "author": "tom@organisms.be"}, {"index": "22", "colour": "orange", "code": "        if len(args) > 1:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "23", "colour": "orange", "code": "            raise TypeError('expected at most 1 arguments, got %d' % len(args))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "24", "colour": "orange", "code": "        try:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "25", "colour": "orange", "code": "            self.__end\n", "error": "none", "author": "tom@organisms.be"}, {"index": "26", "colour": "orange", "code": "        except AttributeError:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "27", "colour": "orange", "code": "            self.clear()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "28", "colour": "orange", "code": "        self.update(*args, **kwds)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "29", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "30", "colour": "orange", "code": "    def clear(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "31", "colour": "green", "code": "        self.__end = end = []\n", "error": "W", "author": "tom@organisms.be"}, {"index": "32", "colour": "orange", "code": "        end += [None, end, end]         # sentinel node for doubly linked list\n", "error": "none", "author": "tom@organisms.be"}, {"index": "33", "colour": "green", "code": "        self.__map = {}                 # key --> [key, prev, next]\n", "error": "W", "author": "tom@organisms.be"}, {"index": "34", "colour": "orange", "code": "        dict.clear(self)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "35", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "36", "colour": "orange", "code": "    def __setitem__(self, key, value):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "37", "colour": "orange", "code": "        if key not in self:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "38", "colour": "orange", "code": "            end = self.__end\n", "error": "none", "author": "tom@organisms.be"}, {"index": "39", "colour": "orange", "code": "            curr = end[1]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "40", "colour": "orange", "code": "            curr[2] = end[1] = self.__map[key] = [key, curr, end]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "41", "colour": "orange", "code": "        dict.__setitem__(self, key, value)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "42", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "43", "colour": "orange", "code": "    def __delitem__(self, key):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "44", "colour": "orange", "code": "        dict.__delitem__(self, key)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "45", "colour": "green", "code": "        key, prev, next = self.__map.pop(key)\n", "error": "W", "author": "tom@organisms.be"}, {"index": "46", "colour": "orange", "code": "        prev[2] = next\n", "error": "none", "author": "tom@organisms.be"}, {"index": "47", "colour": "orange", "code": "        next[1] = prev\n", "error": "none", "author": "tom@organisms.be"}, {"index": "48", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "49", "colour": "orange", "code": "    def __iter__(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "50", "colour": "orange", "code": "        end = self.__end\n", "error": "none", "author": "tom@organisms.be"}, {"index": "51", "colour": "orange", "code": "        curr = end[2]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "52", "colour": "orange", "code": "        while curr is not end:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "53", "colour": "orange", "code": "            yield curr[0]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "54", "colour": "orange", "code": "            curr = curr[2]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "55", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "56", "colour": "orange", "code": "    def __reversed__(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "57", "colour": "orange", "code": "        end = self.__end\n", "error": "none", "author": "tom@organisms.be"}, {"index": "58", "colour": "orange", "code": "        curr = end[1]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "59", "colour": "orange", "code": "        while curr is not end:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "60", "colour": "orange", "code": "            yield curr[0]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "61", "colour": "orange", "code": "            curr = curr[1]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "62", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "63", "colour": "orange", "code": "    def popitem(self, last=True):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "64", "colour": "orange", "code": "        if not self:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "65", "colour": "orange", "code": "            raise KeyError('dictionary is empty')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "66", "colour": "orange", "code": "        # Modified from original to support Python 2.4, see\n", "error": "none", "author": "tom@organisms.be"}, {"index": "67", "colour": "orange", "code": "        # http://code.google.com/p/simplejson/issues/detail?id=53\n", "error": "none", "author": "tom@organisms.be"}, {"index": "68", "colour": "orange", "code": "        if last:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "69", "colour": "red", "code": "            key = reversed(self).next()\n", "error": "E", "author": "tom@organisms.be"}, {"index": "70", "colour": "orange", "code": "        else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "71", "colour": "orange", "code": "            key = iter(self).next()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "72", "colour": "orange", "code": "        value = self.pop(key)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "73", "colour": "orange", "code": "        return key, value\n", "error": "none", "author": "tom@organisms.be"}, {"index": "74", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "75", "colour": "orange", "code": "    def __reduce__(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "76", "colour": "orange", "code": "        items = [[k, self[k]] for k in self]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "77", "colour": "orange", "code": "        tmp = self.__map, self.__end\n", "error": "none", "author": "tom@organisms.be"}, {"index": "78", "colour": "orange", "code": "        del self.__map, self.__end\n", "error": "none", "author": "tom@organisms.be"}, {"index": "79", "colour": "orange", "code": "        inst_dict = vars(self).copy()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "80", "colour": "green", "code": "        self.__map, self.__end = tmp\n", "error": "W", "author": "tom@organisms.be"}, {"index": "81", "colour": "orange", "code": "        if inst_dict:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "82", "colour": "orange", "code": "            return (self.__class__, (items,), inst_dict)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "83", "colour": "orange", "code": "        return self.__class__, (items,)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "84", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "85", "colour": "orange", "code": "    def keys(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "86", "colour": "orange", "code": "        return list(self)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "87", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "88", "colour": "orange", "code": "    setdefault = DictMixin.setdefault\n", "error": "none", "author": "tom@organisms.be"}, {"index": "89", "colour": "orange", "code": "    update = DictMixin.update\n", "error": "none", "author": "tom@organisms.be"}, {"index": "90", "colour": "orange", "code": "    pop = DictMixin.pop\n", "error": "none", "author": "tom@organisms.be"}, {"index": "91", "colour": "orange", "code": "    values = DictMixin.values\n", "error": "none", "author": "tom@organisms.be"}, {"index": "92", "colour": "orange", "code": "    items = DictMixin.items\n", "error": "none", "author": "tom@organisms.be"}, {"index": "93", "colour": "orange", "code": "    iterkeys = DictMixin.iterkeys\n", "error": "none", "author": "tom@organisms.be"}, {"index": "94", "colour": "orange", "code": "    itervalues = DictMixin.itervalues\n", "error": "none", "author": "tom@organisms.be"}, {"index": "95", "colour": "orange", "code": "    iteritems = DictMixin.iteritems\n", "error": "none", "author": "tom@organisms.be"}, {"index": "96", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "97", "colour": "orange", "code": "    def __repr__(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "98", "colour": "orange", "code": "        if not self:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "99", "colour": "orange", "code": "            return '%s()' % (self.__class__.__name__,)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "100", "colour": "orange", "code": "        return '%s(%r)' % (self.__class__.__name__, self.items())\n", "error": "none", "author": "tom@organisms.be"}, {"index": "101", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "102", "colour": "orange", "code": "    def copy(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "103", "colour": "orange", "code": "        return self.__class__(self)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "104", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "105", "colour": "orange", "code": "    @classmethod\n", "error": "none", "author": "tom@organisms.be"}, {"index": "106", "colour": "orange", "code": "    def fromkeys(cls, iterable, value=None):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "107", "colour": "orange", "code": "        d = cls()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "108", "colour": "orange", "code": "        for key in iterable:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "109", "colour": "orange", "code": "            d[key] = value\n", "error": "none", "author": "tom@organisms.be"}, {"index": "110", "colour": "orange", "code": "        return d\n", "error": "none", "author": "tom@organisms.be"}, {"index": "111", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "112", "colour": "orange", "code": "    def __eq__(self, other):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "113", "colour": "orange", "code": "        if isinstance(other, OrderedDict):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "114", "colour": "orange", "code": "            return len(self)==len(other) and \\\n", "error": "none", "author": "tom@organisms.be"}, {"index": "115", "colour": "orange", "code": "                   all(p==q for p, q in  zip(self.items(), other.items()))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "116", "colour": "orange", "code": "        return dict.__eq__(self, other)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "117", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "118", "colour": "orange", "code": "    def __ne__(self, other):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "119", "colour": "orange", "code": "        return not self == other\n", "error": "none", "author": "tom@organisms.be"}]]}