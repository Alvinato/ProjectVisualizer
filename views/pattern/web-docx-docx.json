{"path": "/home/asumal/git/cs410/pattern/pattern/web/docx/docx.py", "lines": [[{"error": "C", "line": "1", "code": "#!/usr/bin/env python2.6\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "2", "code": "# -*- coding: utf-8 -*-\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "3", "code": "\"\"\"\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "4", "code": "Open and modify Microsoft Word 2007 docx files (called 'OpenXML' and\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "5", "code": "'Office OpenXML' by Microsoft)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "6", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "7", "code": "Part of Python's docx module - http://github.com/mikemaccana/python-docx\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "8", "code": "See LICENSE for licensing information.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "9", "code": "\"\"\"\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "10", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "11", "code": "import logging\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "12", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "13", "code": "#from lxml import etree\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "14", "code": "from xml.etree import cElementTree as etree\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "15", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "16", "code": "try:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "17", "code": "    from PIL import Image\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "18", "code": "except ImportError:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "19", "code": "    try:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "20", "code": "        import Image\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "21", "code": "    except ImportError:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "22", "code": "        pass\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "23", "code": "        \n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "24", "code": "import zipfile\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "25", "code": "import shutil\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "26", "code": "import re\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "27", "code": "import time\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "28", "code": "import os\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "29", "code": "from os.path import join\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "30", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "31", "code": "log = logging.getLogger(__name__)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "32", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "33", "code": "# Record template directory's location which is just 'template' for a docx\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "34", "code": "# developer or 'site-packages/docx-template' if you have installed docx\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "35", "code": "template_dir = join(os.path.dirname(__file__), 'docx-template')  # installed\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "36", "code": "if not os.path.isdir(template_dir):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "37", "code": "    template_dir = join(os.path.dirname(__file__), 'template')  # dev\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "38", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "39", "code": "# All Word prefixes / namespace matches used in document.xml & core.xml.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "40", "code": "# LXML doesn't actually use prefixes (just the real namespace) , but these\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "41", "code": "# make it easier to copy Word output more easily.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "42", "code": "nsprefixes = {\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "43", "code": "    'mo': 'http://schemas.microsoft.com/office/mac/office/2008/main',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "44", "code": "    'o':  'urn:schemas-microsoft-com:office:office',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "45", "code": "    've': 'http://schemas.openxmlformats.org/markup-compatibility/2006',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "46", "code": "    # Text Content\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "47", "code": "    'w':   'http://schemas.openxmlformats.org/wordprocessingml/2006/main',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "48", "code": "    'w10': 'urn:schemas-microsoft-com:office:word',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "49", "code": "    'wne': 'http://schemas.microsoft.com/office/word/2006/wordml',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "50", "code": "    # Drawing\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "51", "code": "    'a':   'http://schemas.openxmlformats.org/drawingml/2006/main',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "52", "code": "    'm':   'http://schemas.openxmlformats.org/officeDocument/2006/math',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "53", "code": "    'mv':  'urn:schemas-microsoft-com:mac:vml',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "54", "code": "    'pic': 'http://schemas.openxmlformats.org/drawingml/2006/picture',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "55", "code": "    'v':   'urn:schemas-microsoft-com:vml',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "56", "code": "    'wp':  ('http://schemas.openxmlformats.org/drawingml/2006/wordprocessing'\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "57", "code": "            'Drawing'),\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "58", "code": "    # Properties (core and extended)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "59", "code": "    'cp':  ('http://schemas.openxmlformats.org/package/2006/metadata/core-pr'\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "60", "code": "            'operties'),\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "61", "code": "    'dc':  'http://purl.org/dc/elements/1.1/',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "62", "code": "    'ep':  ('http://schemas.openxmlformats.org/officeDocument/2006/extended-'\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "63", "code": "            'properties'),\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "64", "code": "    'xsi': 'http://www.w3.org/2001/XMLSchema-instance',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "65", "code": "    # Content Types\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "66", "code": "    'ct':  'http://schemas.openxmlformats.org/package/2006/content-types',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "67", "code": "    # Package Relationships\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "68", "code": "    'r':  ('http://schemas.openxmlformats.org/officeDocument/2006/relationsh'\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "69", "code": "           'ips'),\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "70", "code": "    'pr':  'http://schemas.openxmlformats.org/package/2006/relationships',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "71", "code": "    # Dublin Core document properties\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "72", "code": "    'dcmitype': 'http://purl.org/dc/dcmitype/',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "73", "code": "    'dcterms':  'http://purl.org/dc/terms/'}\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "74", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "75", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "76", "code": "def opendocx(file):\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "77", "code": "    '''Open a docx file, return a document XML tree'''\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "78", "code": "    mydoc = zipfile.ZipFile(file)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "79", "code": "    xmlcontent = mydoc.read('word/document.xml')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "80", "code": "    document = etree.fromstring(xmlcontent)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "81", "code": "    return document\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "82", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "83", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "84", "code": "def newdocument():\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "85", "code": "    document = makeelement('document')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "86", "code": "    document.append(makeelement('body'))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "87", "code": "    return document\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "88", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "89", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "90", "code": "def makeelement(tagname, tagtext=None, nsprefix='w', attributes=None,\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "91", "code": "                attrnsprefix=None):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "92", "code": "    '''Create an element & return it'''\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "93", "code": "    # Deal with list of nsprefix by making namespacemap\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "94", "code": "    namespacemap = None\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "95", "code": "    if isinstance(nsprefix, list):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "96", "code": "        namespacemap = {}\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "97", "code": "        for prefix in nsprefix:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "98", "code": "            namespacemap[prefix] = nsprefixes[prefix]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "99", "code": "        # FIXME: rest of code below expects a single prefix\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "100", "code": "        nsprefix = nsprefix[0]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "101", "code": "    if nsprefix:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "102", "code": "        namespace = '{'+nsprefixes[nsprefix]+'}'\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "103", "code": "    else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "104", "code": "        # For when namespace = None\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "105", "code": "        namespace = ''\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "106", "code": "    newelement = etree.Element(namespace+tagname, nsmap=namespacemap)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "107", "code": "    # Add attributes with namespaces\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "108", "code": "    if attributes:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "109", "code": "        # If they haven't bothered setting attribute namespace, use an empty\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "110", "code": "        # string (equivalent of no namespace)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "111", "code": "        if not attrnsprefix:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "112", "code": "            # Quick hack: it seems every element that has a 'w' nsprefix for\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "113", "code": "            # its tag uses the same prefix for it's attributes\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "114", "code": "            if nsprefix == 'w':\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "115", "code": "                attributenamespace = namespace\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "116", "code": "            else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "117", "code": "                attributenamespace = ''\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "118", "code": "        else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "119", "code": "            attributenamespace = '{'+nsprefixes[attrnsprefix]+'}'\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "120", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "121", "code": "        for tagattribute in attributes:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "122", "code": "            newelement.set(attributenamespace+tagattribute,\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "123", "code": "                           attributes[tagattribute])\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "124", "code": "    if tagtext:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "125", "code": "        newelement.text = tagtext\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "126", "code": "    return newelement\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "127", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "128", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "129", "code": "def pagebreak(type='page', orient='portrait'):\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "130", "code": "    '''Insert a break, default 'page'.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "131", "code": "    See http://openxmldeveloper.org/forums/thread/4075.aspx\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "132", "code": "    Return our page break element.'''\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "133", "code": "    # Need to enumerate different types of page breaks.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "134", "code": "    validtypes = ['page', 'section']\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "135", "code": "    if type not in validtypes:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "136", "code": "        tmpl = 'Page break style \"%s\" not implemented. Valid styles: %s.'\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "137", "code": "        raise ValueError(tmpl % (type, validtypes))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "138", "code": "    pagebreak = makeelement('p')\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "139", "code": "    if type == 'page':\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "140", "code": "        run = makeelement('r')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "141", "code": "        br = makeelement('br', attributes={'type': type})\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "142", "code": "        run.append(br)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "143", "code": "        pagebreak.append(run)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "144", "code": "    elif type == 'section':\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "145", "code": "        pPr = makeelement('pPr')\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "146", "code": "        sectPr = makeelement('sectPr')\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "147", "code": "        if orient == 'portrait':\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "148", "code": "            pgSz = makeelement('pgSz', attributes={'w': '12240', 'h': '15840'})\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "149", "code": "        elif orient == 'landscape':\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "150", "code": "            pgSz = makeelement('pgSz', attributes={'h': '12240', 'w': '15840',\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "151", "code": "                                                   'orient': 'landscape'})\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "152", "code": "        sectPr.append(pgSz)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "153", "code": "        pPr.append(sectPr)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "154", "code": "        pagebreak.append(pPr)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "155", "code": "    return pagebreak\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "156", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "157", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "158", "code": "def paragraph(paratext, style='BodyText', breakbefore=False, jc='left'):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "159", "code": "    \"\"\"\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "160", "code": "    Return a new paragraph element containing *paratext*. The paragraph's\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "161", "code": "    default style is 'Body Text', but a new style may be set using the\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "162", "code": "    *style* parameter.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "163", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "164", "code": "    @param string jc: Paragraph alignment, possible values:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "165", "code": "                      left, center, right, both (justified), ...\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "166", "code": "                      see http://www.schemacentral.com/sc/ooxml/t-w_ST_Jc.html\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "167", "code": "                      for a full list\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "168", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "169", "code": "    If *paratext* is a list, add a run for each (text, char_format_str)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "170", "code": "    2-tuple in the list. char_format_str is a string containing one or more\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "171", "code": "    of the characters 'b', 'i', or 'u', meaning bold, italic, and underline\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "172", "code": "    respectively. For example:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "173", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "174", "code": "        paratext = [\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "175", "code": "            ('some bold text', 'b'),\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "176", "code": "            ('some normal text', ''),\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "177", "code": "            ('some italic underlined text', 'iu')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "178", "code": "        ]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "179", "code": "    \"\"\"\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "180", "code": "    # Make our elements\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "181", "code": "    paragraph = makeelement('p')\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "182", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "183", "code": "    if not isinstance(paratext, list):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "184", "code": "        paratext = [(paratext, '')]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "185", "code": "    text_tuples = []\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "186", "code": "    for pt in paratext:\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "187", "code": "        text, char_styles_str = (pt if isinstance(pt, (list, tuple))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "188", "code": "                                 else (pt, ''))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "189", "code": "        text_elm = makeelement('t', tagtext=text)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "190", "code": "        if len(text.strip()) < len(text):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "191", "code": "            text_elm.set('{http://www.w3.org/XML/1998/namespace}space',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "192", "code": "                         'preserve')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "193", "code": "        text_tuples.append([text_elm, char_styles_str])\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "194", "code": "    pPr = makeelement('pPr')\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "195", "code": "    pStyle = makeelement('pStyle', attributes={'val': style})\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "196", "code": "    pJc = makeelement('jc', attributes={'val': jc})\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "197", "code": "    pPr.append(pStyle)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "198", "code": "    pPr.append(pJc)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "199", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "200", "code": "    # Add the text to the run, and the run to the paragraph\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "201", "code": "    paragraph.append(pPr)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "202", "code": "    for text_elm, char_styles_str in text_tuples:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "203", "code": "        run = makeelement('r')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "204", "code": "        rPr = makeelement('rPr')\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "205", "code": "        # Apply styles\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "206", "code": "        if 'b' in char_styles_str:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "207", "code": "            b = makeelement('b')\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "208", "code": "            rPr.append(b)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "209", "code": "        if 'i' in char_styles_str:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "210", "code": "            i = makeelement('i')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "211", "code": "            rPr.append(i)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "212", "code": "        if 'u' in char_styles_str:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "213", "code": "            u = makeelement('u', attributes={'val': 'single'})\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "214", "code": "            rPr.append(u)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "215", "code": "        run.append(rPr)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "216", "code": "        # Insert lastRenderedPageBreak for assistive technologies like\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "217", "code": "        # document narrators to know when a page break occurred.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "218", "code": "        if breakbefore:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "219", "code": "            lastRenderedPageBreak = makeelement('lastRenderedPageBreak')\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "220", "code": "            run.append(lastRenderedPageBreak)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "221", "code": "        run.append(text_elm)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "222", "code": "        paragraph.append(run)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "223", "code": "    # Return the combined paragraph\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "224", "code": "    return paragraph\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "225", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "226", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "227", "code": "def contenttypes():\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "228", "code": "    types = etree.fromstring(\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "229", "code": "        '<Types xmlns=\"http://schemas.openxmlformats.org/package/2006/conten'\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "230", "code": "        't-types\"></Types>')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "231", "code": "    parts = {\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "232", "code": "        '/word/theme/theme1.xml': 'application/vnd.openxmlformats-officedocu'\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "233", "code": "                                  'ment.theme+xml',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "234", "code": "        '/word/fontTable.xml':    'application/vnd.openxmlformats-officedocu'\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "235", "code": "                                  'ment.wordprocessingml.fontTable+xml',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "236", "code": "        '/docProps/core.xml':     'application/vnd.openxmlformats-package.co'\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "237", "code": "                                  're-properties+xml',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "238", "code": "        '/docProps/app.xml':      'application/vnd.openxmlformats-officedocu'\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "239", "code": "                                  'ment.extended-properties+xml',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "240", "code": "        '/word/document.xml':     'application/vnd.openxmlformats-officedocu'\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "241", "code": "                                  'ment.wordprocessingml.document.main+xml',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "242", "code": "        '/word/settings.xml':     'application/vnd.openxmlformats-officedocu'\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "243", "code": "                                  'ment.wordprocessingml.settings+xml',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "244", "code": "        '/word/numbering.xml':    'application/vnd.openxmlformats-officedocu'\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "245", "code": "                                  'ment.wordprocessingml.numbering+xml',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "246", "code": "        '/word/styles.xml':       'application/vnd.openxmlformats-officedocu'\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "247", "code": "                                  'ment.wordprocessingml.styles+xml',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "248", "code": "        '/word/webSettings.xml':  'application/vnd.openxmlformats-officedocu'\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "249", "code": "                                  'ment.wordprocessingml.webSettings+xml'}\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "250", "code": "    for part in parts:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "251", "code": "        types.append(makeelement('Override', nsprefix=None,\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "252", "code": "                                 attributes={'PartName': part,\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "253", "code": "                                             'ContentType': parts[part]}))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "254", "code": "    # Add support for filetypes\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "255", "code": "    filetypes = {\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "256", "code": "        'gif':  'image/gif',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "257", "code": "        'jpeg': 'image/jpeg',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "258", "code": "        'jpg':  'image/jpeg',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "259", "code": "        'png':  'image/png',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "260", "code": "        'rels': 'application/vnd.openxmlformats-package.relationships+xml',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "261", "code": "        'xml':  'application/xml'\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "262", "code": "    }\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "263", "code": "    for extension in filetypes:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "264", "code": "        attrs = {\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "265", "code": "            'Extension':   extension,\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "266", "code": "            'ContentType': filetypes[extension]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "267", "code": "        }\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "268", "code": "        default_elm = makeelement('Default', nsprefix=None, attributes=attrs)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "269", "code": "        types.append(default_elm)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "270", "code": "    return types\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "271", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "272", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "273", "code": "def heading(headingtext, headinglevel, lang='en'):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "274", "code": "    '''Make a new heading, return the heading element'''\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "275", "code": "    lmap = {'en': 'Heading', 'it': 'Titolo'}\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "276", "code": "    # Make our elements\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "277", "code": "    paragraph = makeelement('p')\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "C", "line": "278", "code": "    pr = makeelement('pPr')\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "279", "code": "    pStyle = makeelement(\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "280", "code": "        'pStyle', attributes={'val': lmap[lang]+str(headinglevel)})\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "281", "code": "    run = makeelement('r')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "282", "code": "    text = makeelement('t', tagtext=headingtext)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "283", "code": "    # Add the text the run, and the run to the paragraph\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "284", "code": "    pr.append(pStyle)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "285", "code": "    run.append(text)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "286", "code": "    paragraph.append(pr)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "287", "code": "    paragraph.append(run)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "288", "code": "    # Return the combined paragraph\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "289", "code": "    return paragraph\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "290", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "291", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "292", "code": "def table(contents, heading=True, colw=None, cwunit='dxa', tblw=0,\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "293", "code": "          twunit='auto', borders={}, celstyle=None):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "294", "code": "    \"\"\"\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "295", "code": "    Return a table element based on specified parameters\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "296", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "297", "code": "    @param list contents: A list of lists describing contents. Every item in\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "298", "code": "                          the list can be a string or a valid XML element\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "299", "code": "                          itself. It can also be a list. In that case all the\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "300", "code": "                          listed elements will be merged into the cell.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "301", "code": "    @param bool heading:  Tells whether first line should be treated as\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "302", "code": "                          heading or not\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "303", "code": "    @param list colw:     list of integer column widths specified in wunitS.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "304", "code": "    @param str  cwunit:   Unit used for column width:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "305", "code": "                            'pct'  : fiftieths of a percent\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "306", "code": "                            'dxa'  : twentieths of a point\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "307", "code": "                            'nil'  : no width\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "308", "code": "                            'auto' : automagically determined\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "309", "code": "    @param int  tblw:     Table width\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "310", "code": "    @param int  twunit:   Unit used for table width. Same possible values as\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "311", "code": "                          cwunit.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "312", "code": "    @param dict borders:  Dictionary defining table border. Supported keys\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "313", "code": "                          are: 'top', 'left', 'bottom', 'right',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "314", "code": "                          'insideH', 'insideV', 'all'.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "315", "code": "                          When specified, the 'all' key has precedence over\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "316", "code": "                          others. Each key must define a dict of border\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "317", "code": "                          attributes:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "318", "code": "                            color : The color of the border, in hex or\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "319", "code": "                                    'auto'\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "320", "code": "                            space : The space, measured in points\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "321", "code": "                            sz    : The size of the border, in eighths of\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "322", "code": "                                    a point\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "323", "code": "                            val   : The style of the border, see\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "324", "code": "                http://www.schemacentral.com/sc/ooxml/t-w_ST_Border.htm\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "325", "code": "    @param list celstyle: Specify the style for each colum, list of dicts.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "326", "code": "                          supported keys:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "327", "code": "                          'align' : specify the alignment, see paragraph\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "328", "code": "                                    documentation.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "329", "code": "    @return lxml.etree:   Generated XML etree element\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "330", "code": "    \"\"\"\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "331", "code": "    table = makeelement('tbl')\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "332", "code": "    columns = len(contents[0])\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "333", "code": "    # Table properties\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "334", "code": "    tableprops = makeelement('tblPr')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "335", "code": "    tablestyle = makeelement('tblStyle', attributes={'val': ''})\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "336", "code": "    tableprops.append(tablestyle)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "337", "code": "    tablewidth = makeelement(\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "338", "code": "        'tblW', attributes={'w': str(tblw), 'type': str(twunit)})\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "339", "code": "    tableprops.append(tablewidth)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "340", "code": "    if len(borders.keys()):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "341", "code": "        tableborders = makeelement('tblBorders')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "342", "code": "        for b in ['top', 'left', 'bottom', 'right', 'insideH', 'insideV']:\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "343", "code": "            if b in borders.keys() or 'all' in borders.keys():\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "344", "code": "                k = 'all' if 'all' in borders.keys() else b\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "345", "code": "                attrs = {}\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "346", "code": "                for a in borders[k].keys():\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "347", "code": "                    attrs[a] = unicode(borders[k][a])\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "348", "code": "                borderelem = makeelement(b, attributes=attrs)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "349", "code": "                tableborders.append(borderelem)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "350", "code": "        tableprops.append(tableborders)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "351", "code": "    tablelook = makeelement('tblLook', attributes={'val': '0400'})\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "352", "code": "    tableprops.append(tablelook)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "353", "code": "    table.append(tableprops)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "354", "code": "    # Table Grid\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "355", "code": "    tablegrid = makeelement('tblGrid')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "356", "code": "    for i in range(columns):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "357", "code": "        attrs = {'w': str(colw[i]) if colw else '2390'}\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "358", "code": "        tablegrid.append(makeelement('gridCol', attributes=attrs))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "359", "code": "    table.append(tablegrid)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "360", "code": "    # Heading Row\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "361", "code": "    row = makeelement('tr')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "362", "code": "    rowprops = makeelement('trPr')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "363", "code": "    cnfStyle = makeelement('cnfStyle', attributes={'val': '000000100000'})\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "364", "code": "    rowprops.append(cnfStyle)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "365", "code": "    row.append(rowprops)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "366", "code": "    if heading:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "367", "code": "        i = 0\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "368", "code": "        for heading in contents[0]:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "369", "code": "            cell = makeelement('tc')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "370", "code": "            # Cell properties\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "371", "code": "            cellprops = makeelement('tcPr')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "372", "code": "            if colw:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "373", "code": "                wattr = {'w': str(colw[i]), 'type': cwunit}\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "374", "code": "            else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "375", "code": "                wattr = {'w': '0', 'type': 'auto'}\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "376", "code": "            cellwidth = makeelement('tcW', attributes=wattr)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "377", "code": "            cellstyle = makeelement('shd', attributes={'val': 'clear',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "378", "code": "                                                       'color': 'auto',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "379", "code": "                                                       'fill': 'FFFFFF',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "380", "code": "                                                       'themeFill': 'text2',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "381", "code": "                                                       'themeFillTint': '99'})\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "382", "code": "            cellprops.append(cellwidth)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "383", "code": "            cellprops.append(cellstyle)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "384", "code": "            cell.append(cellprops)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "385", "code": "            # Paragraph (Content)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "386", "code": "            if not isinstance(heading, (list, tuple)):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "387", "code": "                heading = [heading]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "388", "code": "            for h in heading:\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "W", "line": "389", "code": "                if isinstance(h, etree._Element):\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "390", "code": "                    cell.append(h)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "391", "code": "                else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "392", "code": "                    cell.append(paragraph(h, jc='center'))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "393", "code": "            row.append(cell)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "394", "code": "            i += 1\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "395", "code": "        table.append(row)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "396", "code": "    # Contents Rows\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "397", "code": "    for contentrow in contents[1 if heading else 0:]:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "398", "code": "        row = makeelement('tr')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "399", "code": "        i = 0\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "400", "code": "        for content in contentrow:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "401", "code": "            cell = makeelement('tc')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "402", "code": "            # Properties\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "403", "code": "            cellprops = makeelement('tcPr')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "404", "code": "            if colw:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "405", "code": "                wattr = {'w': str(colw[i]), 'type': cwunit}\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "406", "code": "            else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "407", "code": "                wattr = {'w': '0', 'type': 'auto'}\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "408", "code": "            cellwidth = makeelement('tcW', attributes=wattr)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "409", "code": "            cellprops.append(cellwidth)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "410", "code": "            cell.append(cellprops)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "411", "code": "            # Paragraph (Content)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "412", "code": "            if not isinstance(content, (list, tuple)):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "413", "code": "                content = [content]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "414", "code": "            for c in content:\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "W", "line": "415", "code": "                if isinstance(c, etree._Element):\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "416", "code": "                    cell.append(c)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "417", "code": "                else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "418", "code": "                    if celstyle and 'align' in celstyle[i].keys():\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "419", "code": "                        align = celstyle[i]['align']\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "420", "code": "                    else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "421", "code": "                        align = 'left'\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "422", "code": "                    cell.append(paragraph(c, jc=align))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "423", "code": "            row.append(cell)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "424", "code": "            i += 1\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "425", "code": "        table.append(row)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "426", "code": "    return table\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "427", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "428", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "429", "code": "def picture(\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "W", "line": "430", "code": "        relationshiplist, picname, picdescription, pixelwidth=None,\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "431", "code": "        pixelheight=None, nochangeaspect=True, nochangearrowheads=True):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "432", "code": "    \"\"\"\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "433", "code": "    Take a relationshiplist, picture file name, and return a paragraph\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "434", "code": "    containing the image and an updated relationshiplist.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "435", "code": "    \"\"\"\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "436", "code": "    # http://openxmldeveloper.org/articles/462.aspx\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "437", "code": "    # Create an image. Size may be specified, otherwise it will based on the\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "438", "code": "    # pixel size of image. Return a paragraph containing the picture'''\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "439", "code": "    # Copy the file into the media dir\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "440", "code": "    media_dir = join(template_dir, 'word', 'media')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "441", "code": "    if not os.path.isdir(media_dir):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "442", "code": "        os.mkdir(media_dir)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "443", "code": "    shutil.copyfile(picname, join(media_dir, picname))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "444", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "445", "code": "    # Check if the user has specified a size\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "446", "code": "    if not pixelwidth or not pixelheight:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "447", "code": "        # If not, get info from the picture itself\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "448", "code": "        pixelwidth, pixelheight = Image.open(picname).size[0:2]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "449", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "450", "code": "    # OpenXML measures on-screen objects in English Metric Units\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "451", "code": "    # 1cm = 36000 EMUs\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "452", "code": "    emuperpixel = 12700\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "453", "code": "    width = str(pixelwidth * emuperpixel)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "454", "code": "    height = str(pixelheight * emuperpixel)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "455", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "456", "code": "    # Set relationship ID to the first available\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "457", "code": "    picid = '2'\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "458", "code": "    picrelid = 'rId'+str(len(relationshiplist)+1)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "459", "code": "    relationshiplist.append([\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "460", "code": "        ('http://schemas.openxmlformats.org/officeDocument/2006/relationship'\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "461", "code": "         's/image'), 'media/'+picname])\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "462", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "463", "code": "    # There are 3 main elements inside a picture\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "464", "code": "    # 1. The Blipfill - specifies how the image fills the picture area\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "465", "code": "    #    (stretch, tile, etc.)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "466", "code": "    blipfill = makeelement('blipFill', nsprefix='pic')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "467", "code": "    blipfill.append(makeelement('blip', nsprefix='a', attrnsprefix='r',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "468", "code": "                    attributes={'embed': picrelid}))\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "469", "code": "    stretch = makeelement('stretch', nsprefix='a')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "470", "code": "    stretch.append(makeelement('fillRect', nsprefix='a'))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "471", "code": "    blipfill.append(makeelement('srcRect', nsprefix='a'))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "472", "code": "    blipfill.append(stretch)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "473", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "474", "code": "    # 2. The non visual picture properties\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "475", "code": "    nvpicpr = makeelement('nvPicPr', nsprefix='pic')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "476", "code": "    cnvpr = makeelement(\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "477", "code": "        'cNvPr', nsprefix='pic',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "478", "code": "        attributes={'id': '0', 'name': 'Picture 1', 'descr': picname})\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "479", "code": "    nvpicpr.append(cnvpr)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "480", "code": "    cnvpicpr = makeelement('cNvPicPr', nsprefix='pic')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "481", "code": "    cnvpicpr.append(makeelement(\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "482", "code": "        'picLocks', nsprefix='a',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "483", "code": "        attributes={'noChangeAspect': str(int(nochangeaspect)),\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "484", "code": "                    'noChangeArrowheads': str(int(nochangearrowheads))}))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "485", "code": "    nvpicpr.append(cnvpicpr)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "486", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "487", "code": "    # 3. The Shape properties\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "488", "code": "    sppr = makeelement('spPr', nsprefix='pic', attributes={'bwMode': 'auto'})\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "489", "code": "    xfrm = makeelement('xfrm', nsprefix='a')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "490", "code": "    xfrm.append(makeelement(\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "491", "code": "        'off', nsprefix='a', attributes={'x': '0', 'y': '0'}))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "492", "code": "    xfrm.append(makeelement(\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "493", "code": "        'ext', nsprefix='a', attributes={'cx': width, 'cy': height}))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "494", "code": "    prstgeom = makeelement(\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "495", "code": "        'prstGeom', nsprefix='a', attributes={'prst': 'rect'})\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "496", "code": "    prstgeom.append(makeelement('avLst', nsprefix='a'))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "497", "code": "    sppr.append(xfrm)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "498", "code": "    sppr.append(prstgeom)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "499", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "500", "code": "    # Add our 3 parts to the picture element\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "501", "code": "    pic = makeelement('pic', nsprefix='pic')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "502", "code": "    pic.append(nvpicpr)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "503", "code": "    pic.append(blipfill)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "504", "code": "    pic.append(sppr)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "505", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "506", "code": "    # Now make the supporting elements\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "507", "code": "    # The following sequence is just: make element, then add its children\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "508", "code": "    graphicdata = makeelement(\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "509", "code": "        'graphicData', nsprefix='a',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "510", "code": "        attributes={'uri': ('http://schemas.openxmlformats.org/drawingml/200'\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "511", "code": "                            '6/picture')})\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "512", "code": "    graphicdata.append(pic)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "513", "code": "    graphic = makeelement('graphic', nsprefix='a')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "514", "code": "    graphic.append(graphicdata)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "515", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "516", "code": "    framelocks = makeelement('graphicFrameLocks', nsprefix='a',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "517", "code": "                             attributes={'noChangeAspect': '1'})\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "518", "code": "    framepr = makeelement('cNvGraphicFramePr', nsprefix='wp')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "519", "code": "    framepr.append(framelocks)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "520", "code": "    docpr = makeelement('docPr', nsprefix='wp',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "521", "code": "                        attributes={'id': picid, 'name': 'Picture 1',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "522", "code": "                                    'descr': picdescription})\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "523", "code": "    effectextent = makeelement('effectExtent', nsprefix='wp',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "524", "code": "                               attributes={'l': '25400', 't': '0', 'r': '0',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "525", "code": "                                           'b': '0'})\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "526", "code": "    extent = makeelement('extent', nsprefix='wp',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "527", "code": "                         attributes={'cx': width, 'cy': height})\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "528", "code": "    inline = makeelement('inline', attributes={'distT': \"0\", 'distB': \"0\",\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "529", "code": "                                               'distL': \"0\", 'distR': \"0\"},\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "530", "code": "                         nsprefix='wp')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "531", "code": "    inline.append(extent)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "532", "code": "    inline.append(effectextent)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "533", "code": "    inline.append(docpr)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "534", "code": "    inline.append(framepr)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "535", "code": "    inline.append(graphic)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "536", "code": "    drawing = makeelement('drawing')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "537", "code": "    drawing.append(inline)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "538", "code": "    run = makeelement('r')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "539", "code": "    run.append(drawing)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "540", "code": "    paragraph = makeelement('p')\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "541", "code": "    paragraph.append(run)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "542", "code": "    return relationshiplist, paragraph\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "543", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "544", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "545", "code": "def search(document, search):\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "546", "code": "    '''Search a document for a regex, return success / fail result'''\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "547", "code": "    result = False\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "548", "code": "    searchre = re.compile(search)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "549", "code": "    for element in document.getiterator():\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "550", "code": "        if element.tag == '{%s}t' % nsprefixes['w']:  # t (text) elements\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "551", "code": "            if element.text:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "552", "code": "                if searchre.search(element.text):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "553", "code": "                    result = True\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "554", "code": "    return result\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "555", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "556", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "557", "code": "def replace(document, search, replace):\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "558", "code": "    \"\"\"\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "559", "code": "    Replace all occurences of string with a different string, return updated\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "560", "code": "    document\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "561", "code": "    \"\"\"\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "562", "code": "    newdocument = document\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "563", "code": "    searchre = re.compile(search)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "564", "code": "    for element in newdocument.getiterator():\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "565", "code": "        if element.tag == '{%s}t' % nsprefixes['w']:  # t (text) elements\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "566", "code": "            if element.text:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "567", "code": "                if searchre.search(element.text):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "568", "code": "                    element.text = re.sub(search, replace, element.text)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "569", "code": "    return newdocument\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "570", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "571", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "572", "code": "def clean(document):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "573", "code": "    \"\"\" Perform misc cleaning operations on documents.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "574", "code": "        Returns cleaned document.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "575", "code": "    \"\"\"\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "576", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "577", "code": "    newdocument = document\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "578", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "579", "code": "    # Clean empty text and r tags\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "580", "code": "    for t in ('t', 'r'):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "581", "code": "        rmlist = []\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "582", "code": "        for element in newdocument.getiterator():\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "583", "code": "            if element.tag == '{%s}%s' % (nsprefixes['w'], t):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "584", "code": "                if not element.text and not len(element):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "585", "code": "                    rmlist.append(element)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "586", "code": "        for element in rmlist:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "587", "code": "            element.getparent().remove(element)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "588", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "589", "code": "    return newdocument\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "590", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "591", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "592", "code": "def findTypeParent(element, tag):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "593", "code": "    \"\"\" Finds fist parent of element of the given type\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "594", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "595", "code": "    @param object element: etree element\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "596", "code": "    @param string the tag parent to search for\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "597", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "598", "code": "    @return object element: the found parent or None when not found\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "599", "code": "    \"\"\"\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "600", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "601", "code": "    p = element\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "602", "code": "    while True:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "603", "code": "        p = p.getparent()\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "604", "code": "        if p.tag == tag:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "605", "code": "            return p\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "606", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "607", "code": "    # Not found\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "608", "code": "    return None\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "609", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "610", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "611", "code": "def AdvSearch(document, search, bs=3):\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "612", "code": "    '''Return set of all regex matches\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "613", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "614", "code": "    This is an advanced version of python-docx.search() that takes into\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "615", "code": "    account blocks of <bs> elements at a time.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "616", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "617", "code": "    What it does:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "618", "code": "    It searches the entire document body for text blocks.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "619", "code": "    Since the text to search could be spawned across multiple text blocks,\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "620", "code": "    we need to adopt some sort of algorithm to handle this situation.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "621", "code": "    The smaller matching group of blocks (up to bs) is then adopted.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "622", "code": "    If the matching group has more than one block, blocks other than first\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "623", "code": "    are cleared and all the replacement text is put on first block.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "624", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "625", "code": "    Examples:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "626", "code": "    original text blocks : [ 'Hel', 'lo,', ' world!' ]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "627", "code": "    search : 'Hello,'\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "628", "code": "    output blocks : [ 'Hello,' ]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "629", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "630", "code": "    original text blocks : [ 'Hel', 'lo', ' __', 'name', '__!' ]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "631", "code": "    search : '(__[a-z]+__)'\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "632", "code": "    output blocks : [ '__name__' ]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "633", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "634", "code": "    @param instance  document: The original document\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "635", "code": "    @param str       search: The text to search for (regexp)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "636", "code": "                          append, or a list of etree elements\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "637", "code": "    @param int       bs: See above\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "638", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "639", "code": "    @return set      All occurences of search string\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "640", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "641", "code": "    '''\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "642", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "643", "code": "    # Compile the search regexp\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "644", "code": "    searchre = re.compile(search)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "645", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "646", "code": "    matches = []\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "647", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "648", "code": "    # Will match against searchels. Searchels is a list that contains last\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "649", "code": "    # n text elements found in the document. 1 < n < bs\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "650", "code": "    searchels = []\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "651", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "652", "code": "    for element in document.getiterator():\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "653", "code": "        if element.tag == '{%s}t' % nsprefixes['w']:  # t (text) elements\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "654", "code": "            if element.text:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "655", "code": "                # Add this element to searchels\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "656", "code": "                searchels.append(element)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "657", "code": "                if len(searchels) > bs:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "658", "code": "                    # Is searchels is too long, remove first elements\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "659", "code": "                    searchels.pop(0)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "660", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "661", "code": "                # Search all combinations, of searchels, starting from\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "662", "code": "                # smaller up to bigger ones\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "663", "code": "                # l = search lenght\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "664", "code": "                # s = search start\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "665", "code": "                # e = element IDs to merge\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "666", "code": "                found = False\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "667", "code": "                for l in range(1, len(searchels)+1):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "668", "code": "                    if found:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "669", "code": "                        break\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "670", "code": "                    for s in range(len(searchels)):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "671", "code": "                        if found:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "672", "code": "                            break\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "673", "code": "                        if s+l <= len(searchels):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "674", "code": "                            e = range(s, s+l)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "675", "code": "                            txtsearch = ''\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "676", "code": "                            for k in e:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "677", "code": "                                txtsearch += searchels[k].text\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "678", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "679", "code": "                            # Searcs for the text in the whole txtsearch\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "680", "code": "                            match = searchre.search(txtsearch)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "681", "code": "                            if match:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "682", "code": "                                matches.append(match.group())\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "683", "code": "                                found = True\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "684", "code": "    return set(matches)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "685", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "686", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "687", "code": "def advReplace(document, search, replace, bs=3):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "688", "code": "    \"\"\"\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "689", "code": "    Replace all occurences of string with a different string, return updated\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "690", "code": "    document\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "691", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "692", "code": "    This is a modified version of python-docx.replace() that takes into\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "693", "code": "    account blocks of <bs> elements at a time. The replace element can also\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "694", "code": "    be a string or an xml etree element.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "695", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "696", "code": "    What it does:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "697", "code": "    It searches the entire document body for text blocks.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "698", "code": "    Then scan thos text blocks for replace.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "699", "code": "    Since the text to search could be spawned across multiple text blocks,\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "700", "code": "    we need to adopt some sort of algorithm to handle this situation.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "701", "code": "    The smaller matching group of blocks (up to bs) is then adopted.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "702", "code": "    If the matching group has more than one block, blocks other than first\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "703", "code": "    are cleared and all the replacement text is put on first block.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "704", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "705", "code": "    Examples:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "706", "code": "    original text blocks : [ 'Hel', 'lo,', ' world!' ]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "707", "code": "    search / replace: 'Hello,' / 'Hi!'\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "708", "code": "    output blocks : [ 'Hi!', '', ' world!' ]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "709", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "710", "code": "    original text blocks : [ 'Hel', 'lo,', ' world!' ]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "711", "code": "    search / replace: 'Hello, world' / 'Hi!'\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "712", "code": "    output blocks : [ 'Hi!!', '', '' ]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "713", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "714", "code": "    original text blocks : [ 'Hel', 'lo,', ' world!' ]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "715", "code": "    search / replace: 'Hel' / 'Hal'\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "716", "code": "    output blocks : [ 'Hal', 'lo,', ' world!' ]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "717", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "718", "code": "    @param instance  document: The original document\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "719", "code": "    @param str       search: The text to search for (regexp)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "720", "code": "    @param mixed     replace: The replacement text or lxml.etree element to\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "721", "code": "                         append, or a list of etree elements\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "722", "code": "    @param int       bs: See above\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "723", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "724", "code": "    @return instance The document with replacement applied\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "725", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "726", "code": "    \"\"\"\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "727", "code": "    # Enables debug output\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "728", "code": "    DEBUG = False\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "729", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "730", "code": "    newdocument = document\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "731", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "732", "code": "    # Compile the search regexp\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "733", "code": "    searchre = re.compile(search)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "734", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "735", "code": "    # Will match against searchels. Searchels is a list that contains last\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "736", "code": "    # n text elements found in the document. 1 < n < bs\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "737", "code": "    searchels = []\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "738", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "739", "code": "    for element in newdocument.getiterator():\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "740", "code": "        if element.tag == '{%s}t' % nsprefixes['w']:  # t (text) elements\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "741", "code": "            if element.text:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "742", "code": "                # Add this element to searchels\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "743", "code": "                searchels.append(element)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "744", "code": "                if len(searchels) > bs:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "745", "code": "                    # Is searchels is too long, remove first elements\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "746", "code": "                    searchels.pop(0)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "747", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "748", "code": "                # Search all combinations, of searchels, starting from\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "749", "code": "                # smaller up to bigger ones\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "750", "code": "                # l = search lenght\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "751", "code": "                # s = search start\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "752", "code": "                # e = element IDs to merge\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "753", "code": "                found = False\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "754", "code": "                for l in range(1, len(searchels)+1):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "755", "code": "                    if found:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "756", "code": "                        break\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "757", "code": "                    #print \"slen:\", l\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "758", "code": "                    for s in range(len(searchels)):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "759", "code": "                        if found:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "760", "code": "                            break\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "761", "code": "                        if s+l <= len(searchels):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "762", "code": "                            e = range(s, s+l)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "763", "code": "                            #print \"elems:\", e\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "764", "code": "                            txtsearch = ''\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "765", "code": "                            for k in e:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "766", "code": "                                txtsearch += searchels[k].text\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "767", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "768", "code": "                            # Searcs for the text in the whole txtsearch\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "769", "code": "                            match = searchre.search(txtsearch)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "770", "code": "                            if match:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "771", "code": "                                found = True\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "772", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "773", "code": "                                # I've found something :)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "774", "code": "                                if DEBUG:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "775", "code": "                                    log.debug(\"Found element!\")\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "776", "code": "                                    log.debug(\"Search regexp: %s\",\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "777", "code": "                                              searchre.pattern)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "778", "code": "                                    log.debug(\"Requested replacement: %s\",\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "779", "code": "                                              replace)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "780", "code": "                                    log.debug(\"Matched text: %s\", txtsearch)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "781", "code": "                                    log.debug(\"Matched text (splitted): %s\",\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "782", "code": "                                              map(lambda i: i.text, searchels))\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "783", "code": "                                    log.debug(\"Matched at position: %s\",\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "784", "code": "                                              match.start())\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "785", "code": "                                    log.debug(\"matched in elements: %s\", e)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "786", "code": "                                    if isinstance(replace, etree._Element):\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "787", "code": "                                        log.debug(\"Will replace with XML CODE\")\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "788", "code": "                                    elif isinstance(replace(list, tuple)):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "789", "code": "                                        log.debug(\"Will replace with LIST OF\"\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "790", "code": "                                                  \" ELEMENTS\")\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "791", "code": "                                    else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "E", "line": "792", "code": "                                        log.debug(\"Will replace with:\",\n", "colour": "yellow", "author": "tom@organisms.be"}, {"error": "none", "line": "793", "code": "                                                  re.sub(search, replace,\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "794", "code": "                                                         txtsearch))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "795", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "796", "code": "                                curlen = 0\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "797", "code": "                                replaced = False\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "798", "code": "                                for i in e:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "799", "code": "                                    curlen += len(searchels[i].text)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "800", "code": "                                    if curlen > match.start() and not replaced:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "801", "code": "                                        # The match occurred in THIS element.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "802", "code": "                                        # Puth in the whole replaced text\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "803", "code": "                                        if isinstance(replace, etree._Element):\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "804", "code": "                                            # Convert to a list and process\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "805", "code": "                                            # it later\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "806", "code": "                                            replace = [replace]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "807", "code": "                                        if isinstance(replace, (list, tuple)):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "808", "code": "                                            # I'm replacing with a list of\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "809", "code": "                                            # etree elements\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "810", "code": "                                            # clear the text in the tag and\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "811", "code": "                                            # append the element after the\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "812", "code": "                                            # parent paragraph\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "813", "code": "                                            # (because t elements cannot have\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "814", "code": "                                            # childs)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "815", "code": "                                            p = findTypeParent(\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "816", "code": "                                                searchels[i],\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "817", "code": "                                                '{%s}p' % nsprefixes['w'])\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "818", "code": "                                            searchels[i].text = re.sub(\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "819", "code": "                                                search, '', txtsearch)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "820", "code": "                                            insindex = p.getparent().index(p)+1\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "821", "code": "                                            for r in replace:\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "822", "code": "                                                p.getparent().insert(\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "823", "code": "                                                    insindex, r)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "824", "code": "                                                insindex += 1\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "825", "code": "                                        else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "826", "code": "                                            # Replacing with pure text\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "827", "code": "                                            searchels[i].text = re.sub(\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "828", "code": "                                                search, replace, txtsearch)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "829", "code": "                                        replaced = True\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "830", "code": "                                        log.debug(\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "831", "code": "                                            \"Replacing in element #: %s\", i)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "832", "code": "                                    else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "833", "code": "                                        # Clears the other text elements\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "834", "code": "                                        searchels[i].text = ''\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "835", "code": "    return newdocument\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "836", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "837", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "838", "code": "def getdocumenttext(document):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "839", "code": "    '''Return the raw text of a document, as a list of paragraphs.'''\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "840", "code": "    paratextlist = []\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "841", "code": "    # Compile a list of all paragraph (p) elements\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "842", "code": "    paralist = []\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "843", "code": "    for element in document.getiterator():\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "844", "code": "        # Find p (paragraph) elements\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "845", "code": "        if element.tag == '{'+nsprefixes['w']+'}p':\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "846", "code": "            paralist.append(element)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "847", "code": "    # Since a single sentence might be spread over multiple text elements,\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "848", "code": "    # iterate through each paragraph, appending all text (t) children to that\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "849", "code": "    # paragraphs text.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "850", "code": "    for para in paralist:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "851", "code": "        paratext = u''\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "852", "code": "        # Loop through each paragraph\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "853", "code": "        for element in para.getiterator():\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "854", "code": "            # Find t (text) elements\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "855", "code": "            if element.tag == '{'+nsprefixes['w']+'}t':\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "856", "code": "                if element.text:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "857", "code": "                    paratext = paratext+element.text\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "858", "code": "            elif element.tag == '{'+nsprefixes['w']+'}tab':\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "859", "code": "                paratext = paratext + '\\t'\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "860", "code": "        # Add our completed paragraph text to the list of paragraph text\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "861", "code": "        if not len(paratext) == 0:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "862", "code": "            paratextlist.append(paratext)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "863", "code": "    return paratextlist\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "864", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "865", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "866", "code": "def coreproperties(title, subject, creator, keywords, lastmodifiedby=None):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "867", "code": "    \"\"\"\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "868", "code": "    Create core properties (common document properties referred to in the\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "869", "code": "    'Dublin Core' specification). See appproperties() for other stuff.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "870", "code": "    \"\"\"\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "871", "code": "    coreprops = makeelement('coreProperties', nsprefix='cp')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "872", "code": "    coreprops.append(makeelement('title', tagtext=title, nsprefix='dc'))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "873", "code": "    coreprops.append(makeelement('subject', tagtext=subject, nsprefix='dc'))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "874", "code": "    coreprops.append(makeelement('creator', tagtext=creator, nsprefix='dc'))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "875", "code": "    coreprops.append(makeelement('keywords', tagtext=','.join(keywords),\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "876", "code": "                     nsprefix='cp'))\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "877", "code": "    if not lastmodifiedby:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "878", "code": "        lastmodifiedby = creator\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "879", "code": "    coreprops.append(makeelement('lastModifiedBy', tagtext=lastmodifiedby,\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "880", "code": "                     nsprefix='cp'))\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "881", "code": "    coreprops.append(makeelement('revision', tagtext='1', nsprefix='cp'))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "882", "code": "    coreprops.append(\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "883", "code": "        makeelement('category', tagtext='Examples', nsprefix='cp'))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "884", "code": "    coreprops.append(\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "885", "code": "        makeelement('description', tagtext='Examples', nsprefix='dc'))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "886", "code": "    currenttime = time.strftime('%Y-%m-%dT%H:%M:%SZ')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "887", "code": "    # Document creation and modify times\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "888", "code": "    # Prob here: we have an attribute who name uses one namespace, and that\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "889", "code": "    # attribute's value uses another namespace.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "890", "code": "    # We're creating the element from a string as a workaround...\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "891", "code": "    for doctime in ['created', 'modified']:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "892", "code": "        elm_str = (\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "893", "code": "            '<dcterms:%s xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instanc'\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "894", "code": "            'e\" xmlns:dcterms=\"http://purl.org/dc/terms/\" xsi:type=\"dcterms:'\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "895", "code": "            'W3CDTF\">%s</dcterms:%s>'\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "896", "code": "        ) % (doctime, currenttime, doctime)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "897", "code": "        coreprops.append(etree.fromstring(elm_str))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "898", "code": "    return coreprops\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "899", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "900", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "901", "code": "def appproperties():\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "902", "code": "    \"\"\"\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "903", "code": "    Create app-specific properties. See docproperties() for more common\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "904", "code": "    document properties.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "905", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "906", "code": "    \"\"\"\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "907", "code": "    appprops = makeelement('Properties', nsprefix='ep')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "908", "code": "    appprops = etree.fromstring(\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "909", "code": "        '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><Properties x'\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "910", "code": "        'mlns=\"http://schemas.openxmlformats.org/officeDocument/2006/extended'\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "911", "code": "        '-properties\" xmlns:vt=\"http://schemas.openxmlformats.org/officeDocum'\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "912", "code": "        'ent/2006/docPropsVTypes\"></Properties>')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "913", "code": "    props =\\\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "914", "code": "        {'Template':             'Normal.dotm',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "915", "code": "         'TotalTime':            '6',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "916", "code": "         'Pages':                '1',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "917", "code": "         'Words':                '83',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "918", "code": "         'Characters':           '475',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "919", "code": "         'Application':          'Microsoft Word 12.0.0',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "920", "code": "         'DocSecurity':          '0',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "921", "code": "         'Lines':                '12',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "922", "code": "         'Paragraphs':           '8',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "923", "code": "         'ScaleCrop':            'false',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "924", "code": "         'LinksUpToDate':        'false',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "925", "code": "         'CharactersWithSpaces': '583',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "926", "code": "         'SharedDoc':            'false',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "927", "code": "         'HyperlinksChanged':    'false',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "928", "code": "         'AppVersion':           '12.0000'}\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "929", "code": "    for prop in props:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "930", "code": "        appprops.append(makeelement(prop, tagtext=props[prop], nsprefix=None))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "931", "code": "    return appprops\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "932", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "933", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "934", "code": "def websettings():\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "935", "code": "    '''Generate websettings'''\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "936", "code": "    web = makeelement('webSettings')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "937", "code": "    web.append(makeelement('allowPNG'))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "938", "code": "    web.append(makeelement('doNotSaveAsSingleFile'))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "939", "code": "    return web\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "940", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "941", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "942", "code": "def relationshiplist():\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "W", "line": "943", "code": "    relationshiplist =\\\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "944", "code": "        [['http://schemas.openxmlformats.org/officeDocument/2006/'\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "945", "code": "          'relationships/numbering', 'numbering.xml'],\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "946", "code": "         ['http://schemas.openxmlformats.org/officeDocument/2006/'\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "947", "code": "          'relationships/styles', 'styles.xml'],\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "948", "code": "         ['http://schemas.openxmlformats.org/officeDocument/2006/'\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "949", "code": "          'relationships/settings', 'settings.xml'],\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "950", "code": "         ['http://schemas.openxmlformats.org/officeDocument/2006/'\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "951", "code": "          'relationships/webSettings', 'webSettings.xml'],\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "952", "code": "         ['http://schemas.openxmlformats.org/officeDocument/2006/'\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "953", "code": "          'relationships/fontTable', 'fontTable.xml'],\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "954", "code": "         ['http://schemas.openxmlformats.org/officeDocument/2006/'\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "955", "code": "          'relationships/theme', 'theme/theme1.xml']]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "956", "code": "    return relationshiplist\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "957", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "958", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "959", "code": "def wordrelationships(relationshiplist):\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "960", "code": "    '''Generate a Word relationships file'''\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "961", "code": "    # Default list of relationships\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "962", "code": "    # FIXME: using string hack instead of making element\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "963", "code": "    #relationships = makeelement('Relationships', nsprefix='pr')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "964", "code": "    relationships = etree.fromstring(\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "965", "code": "        '<Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006'\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "966", "code": "        '/relationships\"></Relationships>')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "967", "code": "    count = 0\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "968", "code": "    for relationship in relationshiplist:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "969", "code": "        # Relationship IDs (rId) start at 1.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "970", "code": "        rel_elm = makeelement('Relationship', nsprefix=None,\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "971", "code": "                              attributes={'Id':     'rId'+str(count+1),\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "972", "code": "                                          'Type':   relationship[0],\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "973", "code": "                                          'Target': relationship[1]}\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "974", "code": "                              )\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "975", "code": "        relationships.append(rel_elm)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "976", "code": "        count += 1\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "977", "code": "    return relationships\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "978", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "979", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "980", "code": "def savedocx(document, coreprops, appprops, contenttypes, websettings,\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "W", "line": "981", "code": "             wordrelationships, output):\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "982", "code": "    '''Save a modified document'''\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "983", "code": "    assert os.path.isdir(template_dir)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "984", "code": "    docxfile = zipfile.ZipFile(\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "985", "code": "        output, mode='w', compression=zipfile.ZIP_DEFLATED)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "986", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "987", "code": "    # Move to the template data path\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "988", "code": "    prev_dir = os.path.abspath('.')  # save previous working dir\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "989", "code": "    os.chdir(template_dir)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "990", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "991", "code": "    # Serialize our trees into out zip file\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "992", "code": "    treesandfiles = {document:     'word/document.xml',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "993", "code": "                     coreprops:    'docProps/core.xml',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "994", "code": "                     appprops:     'docProps/app.xml',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "995", "code": "                     contenttypes: '[Content_Types].xml',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "996", "code": "                     websettings:  'word/webSettings.xml',\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "997", "code": "                     wordrelationships: 'word/_rels/document.xml.rels'}\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "998", "code": "    for tree in treesandfiles:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "999", "code": "        log.info('Saving: %s' % treesandfiles[tree])\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "1000", "code": "        treestring = etree.tostring(tree, pretty_print=True)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "1001", "code": "        docxfile.writestr(treesandfiles[tree], treestring)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "1002", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "1003", "code": "    # Add & compress support files\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "1004", "code": "    files_to_ignore = ['.DS_Store']  # nuisance from some os's\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "1005", "code": "    for dirpath, dirnames, filenames in os.walk('.'):\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "1006", "code": "        for filename in filenames:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "1007", "code": "            if filename in files_to_ignore:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "1008", "code": "                continue\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "1009", "code": "            templatefile = join(dirpath, filename)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "1010", "code": "            archivename = templatefile[2:]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "1011", "code": "            log.info('Saving: %s', archivename)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "1012", "code": "            docxfile.write(templatefile, archivename)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "1013", "code": "    log.info('Saved new file to: %r', output)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "1014", "code": "    docxfile.close()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "1015", "code": "    os.chdir(prev_dir)  # restore previous working dir\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "1016", "code": "    return\n", "colour": "black", "author": "tom@organisms.be"}]]}