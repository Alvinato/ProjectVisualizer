{"path": "/home/asumal/git/cs410/pattern/pattern/web/docx/docx.py", "lines": [{"index": "1", "colour": "orange", "code": "#!/usr/bin/env python2.6\n", "error": "none", "author": "tom@organisms.be"}, {"index": "2", "colour": "orange", "code": "# -*- coding: utf-8 -*-\n", "error": "none", "author": "tom@organisms.be"}, {"index": "3", "colour": "orange", "code": "\"\"\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "4", "colour": "orange", "code": "Open and modify Microsoft Word 2007 docx files (called 'OpenXML' and\n", "error": "none", "author": "tom@organisms.be"}, {"index": "5", "colour": "orange", "code": "'Office OpenXML' by Microsoft)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "6", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "7", "colour": "orange", "code": "Part of Python's docx module - http://github.com/mikemaccana/python-docx\n", "error": "none", "author": "tom@organisms.be"}, {"index": "8", "colour": "orange", "code": "See LICENSE for licensing information.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "9", "colour": "orange", "code": "\"\"\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "10", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "11", "colour": "orange", "code": "import logging\n", "error": "none", "author": "tom@organisms.be"}, {"index": "12", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "13", "colour": "orange", "code": "#from lxml import etree\n", "error": "none", "author": "tom@organisms.be"}, {"index": "14", "colour": "orange", "code": "from xml.etree import cElementTree as etree\n", "error": "none", "author": "tom@organisms.be"}, {"index": "15", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "16", "colour": "orange", "code": "try:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "17", "colour": "orange", "code": "    from PIL import Image\n", "error": "none", "author": "tom@organisms.be"}, {"index": "18", "colour": "orange", "code": "except ImportError:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "19", "colour": "orange", "code": "    try:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "20", "colour": "orange", "code": "        import Image\n", "error": "none", "author": "tom@organisms.be"}, {"index": "21", "colour": "orange", "code": "    except ImportError:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "22", "colour": "orange", "code": "        pass\n", "error": "none", "author": "tom@organisms.be"}, {"index": "23", "colour": "orange", "code": "        \n", "error": "none", "author": "tom@organisms.be"}, {"index": "24", "colour": "orange", "code": "import zipfile\n", "error": "none", "author": "tom@organisms.be"}, {"index": "25", "colour": "orange", "code": "import shutil\n", "error": "none", "author": "tom@organisms.be"}, {"index": "26", "colour": "orange", "code": "import re\n", "error": "none", "author": "tom@organisms.be"}, {"index": "27", "colour": "orange", "code": "import time\n", "error": "none", "author": "tom@organisms.be"}, {"index": "28", "colour": "orange", "code": "import os\n", "error": "none", "author": "tom@organisms.be"}, {"index": "29", "colour": "orange", "code": "from os.path import join\n", "error": "none", "author": "tom@organisms.be"}, {"index": "30", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "31", "colour": "orange", "code": "log = logging.getLogger(__name__)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "32", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "33", "colour": "orange", "code": "# Record template directory's location which is just 'template' for a docx\n", "error": "none", "author": "tom@organisms.be"}, {"index": "34", "colour": "orange", "code": "# developer or 'site-packages/docx-template' if you have installed docx\n", "error": "none", "author": "tom@organisms.be"}, {"index": "35", "colour": "orange", "code": "template_dir = join(os.path.dirname(__file__), 'docx-template')  # installed\n", "error": "none", "author": "tom@organisms.be"}, {"index": "36", "colour": "orange", "code": "if not os.path.isdir(template_dir):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "37", "colour": "orange", "code": "    template_dir = join(os.path.dirname(__file__), 'template')  # dev\n", "error": "none", "author": "tom@organisms.be"}, {"index": "38", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "39", "colour": "orange", "code": "# All Word prefixes / namespace matches used in document.xml & core.xml.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "40", "colour": "orange", "code": "# LXML doesn't actually use prefixes (just the real namespace) , but these\n", "error": "none", "author": "tom@organisms.be"}, {"index": "41", "colour": "orange", "code": "# make it easier to copy Word output more easily.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "42", "colour": "orange", "code": "nsprefixes = {\n", "error": "none", "author": "tom@organisms.be"}, {"index": "43", "colour": "orange", "code": "    'mo': 'http://schemas.microsoft.com/office/mac/office/2008/main',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "44", "colour": "orange", "code": "    'o':  'urn:schemas-microsoft-com:office:office',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "45", "colour": "orange", "code": "    've': 'http://schemas.openxmlformats.org/markup-compatibility/2006',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "46", "colour": "orange", "code": "    # Text Content\n", "error": "none", "author": "tom@organisms.be"}, {"index": "47", "colour": "orange", "code": "    'w':   'http://schemas.openxmlformats.org/wordprocessingml/2006/main',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "48", "colour": "orange", "code": "    'w10': 'urn:schemas-microsoft-com:office:word',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "49", "colour": "orange", "code": "    'wne': 'http://schemas.microsoft.com/office/word/2006/wordml',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "50", "colour": "orange", "code": "    # Drawing\n", "error": "none", "author": "tom@organisms.be"}, {"index": "51", "colour": "orange", "code": "    'a':   'http://schemas.openxmlformats.org/drawingml/2006/main',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "52", "colour": "orange", "code": "    'm':   'http://schemas.openxmlformats.org/officeDocument/2006/math',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "53", "colour": "orange", "code": "    'mv':  'urn:schemas-microsoft-com:mac:vml',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "54", "colour": "orange", "code": "    'pic': 'http://schemas.openxmlformats.org/drawingml/2006/picture',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "55", "colour": "orange", "code": "    'v':   'urn:schemas-microsoft-com:vml',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "56", "colour": "orange", "code": "    'wp':  ('http://schemas.openxmlformats.org/drawingml/2006/wordprocessing'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "57", "colour": "orange", "code": "            'Drawing'),\n", "error": "none", "author": "tom@organisms.be"}, {"index": "58", "colour": "orange", "code": "    # Properties (core and extended)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "59", "colour": "orange", "code": "    'cp':  ('http://schemas.openxmlformats.org/package/2006/metadata/core-pr'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "60", "colour": "orange", "code": "            'operties'),\n", "error": "none", "author": "tom@organisms.be"}, {"index": "61", "colour": "orange", "code": "    'dc':  'http://purl.org/dc/elements/1.1/',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "62", "colour": "orange", "code": "    'ep':  ('http://schemas.openxmlformats.org/officeDocument/2006/extended-'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "63", "colour": "orange", "code": "            'properties'),\n", "error": "none", "author": "tom@organisms.be"}, {"index": "64", "colour": "orange", "code": "    'xsi': 'http://www.w3.org/2001/XMLSchema-instance',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "65", "colour": "orange", "code": "    # Content Types\n", "error": "none", "author": "tom@organisms.be"}, {"index": "66", "colour": "orange", "code": "    'ct':  'http://schemas.openxmlformats.org/package/2006/content-types',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "67", "colour": "orange", "code": "    # Package Relationships\n", "error": "none", "author": "tom@organisms.be"}, {"index": "68", "colour": "orange", "code": "    'r':  ('http://schemas.openxmlformats.org/officeDocument/2006/relationsh'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "69", "colour": "orange", "code": "           'ips'),\n", "error": "none", "author": "tom@organisms.be"}, {"index": "70", "colour": "orange", "code": "    'pr':  'http://schemas.openxmlformats.org/package/2006/relationships',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "71", "colour": "orange", "code": "    # Dublin Core document properties\n", "error": "none", "author": "tom@organisms.be"}, {"index": "72", "colour": "orange", "code": "    'dcmitype': 'http://purl.org/dc/dcmitype/',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "73", "colour": "orange", "code": "    'dcterms':  'http://purl.org/dc/terms/'}\n", "error": "none", "author": "tom@organisms.be"}, {"index": "74", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "75", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "76", "colour": "green", "code": "def opendocx(file):\n", "error": "W", "author": "tom@organisms.be"}, {"index": "77", "colour": "orange", "code": "    '''Open a docx file, return a document XML tree'''\n", "error": "none", "author": "tom@organisms.be"}, {"index": "78", "colour": "orange", "code": "    mydoc = zipfile.ZipFile(file)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "79", "colour": "orange", "code": "    xmlcontent = mydoc.read('word/document.xml')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "80", "colour": "orange", "code": "    document = etree.fromstring(xmlcontent)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "81", "colour": "orange", "code": "    return document\n", "error": "none", "author": "tom@organisms.be"}, {"index": "82", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "83", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "84", "colour": "orange", "code": "def newdocument():\n", "error": "none", "author": "tom@organisms.be"}, {"index": "85", "colour": "orange", "code": "    document = makeelement('document')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "86", "colour": "orange", "code": "    document.append(makeelement('body'))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "87", "colour": "orange", "code": "    return document\n", "error": "none", "author": "tom@organisms.be"}, {"index": "88", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "89", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "90", "colour": "orange", "code": "def makeelement(tagname, tagtext=None, nsprefix='w', attributes=None,\n", "error": "none", "author": "tom@organisms.be"}, {"index": "91", "colour": "orange", "code": "                attrnsprefix=None):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "92", "colour": "orange", "code": "    '''Create an element & return it'''\n", "error": "none", "author": "tom@organisms.be"}, {"index": "93", "colour": "orange", "code": "    # Deal with list of nsprefix by making namespacemap\n", "error": "none", "author": "tom@organisms.be"}, {"index": "94", "colour": "orange", "code": "    namespacemap = None\n", "error": "none", "author": "tom@organisms.be"}, {"index": "95", "colour": "orange", "code": "    if isinstance(nsprefix, list):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "96", "colour": "orange", "code": "        namespacemap = {}\n", "error": "none", "author": "tom@organisms.be"}, {"index": "97", "colour": "orange", "code": "        for prefix in nsprefix:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "98", "colour": "orange", "code": "            namespacemap[prefix] = nsprefixes[prefix]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "99", "colour": "green", "code": "        # FIXME: rest of code below expects a single prefix\n", "error": "W", "author": "tom@organisms.be"}, {"index": "100", "colour": "orange", "code": "        nsprefix = nsprefix[0]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "101", "colour": "orange", "code": "    if nsprefix:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "102", "colour": "orange", "code": "        namespace = '{'+nsprefixes[nsprefix]+'}'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "103", "colour": "orange", "code": "    else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "104", "colour": "orange", "code": "        # For when namespace = None\n", "error": "none", "author": "tom@organisms.be"}, {"index": "105", "colour": "orange", "code": "        namespace = ''\n", "error": "none", "author": "tom@organisms.be"}, {"index": "106", "colour": "orange", "code": "    newelement = etree.Element(namespace+tagname, nsmap=namespacemap)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "107", "colour": "orange", "code": "    # Add attributes with namespaces\n", "error": "none", "author": "tom@organisms.be"}, {"index": "108", "colour": "orange", "code": "    if attributes:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "109", "colour": "orange", "code": "        # If they haven't bothered setting attribute namespace, use an empty\n", "error": "none", "author": "tom@organisms.be"}, {"index": "110", "colour": "orange", "code": "        # string (equivalent of no namespace)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "111", "colour": "orange", "code": "        if not attrnsprefix:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "112", "colour": "orange", "code": "            # Quick hack: it seems every element that has a 'w' nsprefix for\n", "error": "none", "author": "tom@organisms.be"}, {"index": "113", "colour": "orange", "code": "            # its tag uses the same prefix for it's attributes\n", "error": "none", "author": "tom@organisms.be"}, {"index": "114", "colour": "orange", "code": "            if nsprefix == 'w':\n", "error": "none", "author": "tom@organisms.be"}, {"index": "115", "colour": "orange", "code": "                attributenamespace = namespace\n", "error": "none", "author": "tom@organisms.be"}, {"index": "116", "colour": "orange", "code": "            else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "117", "colour": "orange", "code": "                attributenamespace = ''\n", "error": "none", "author": "tom@organisms.be"}, {"index": "118", "colour": "orange", "code": "        else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "119", "colour": "orange", "code": "            attributenamespace = '{'+nsprefixes[attrnsprefix]+'}'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "120", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "121", "colour": "orange", "code": "        for tagattribute in attributes:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "122", "colour": "orange", "code": "            newelement.set(attributenamespace+tagattribute,\n", "error": "none", "author": "tom@organisms.be"}, {"index": "123", "colour": "orange", "code": "                           attributes[tagattribute])\n", "error": "none", "author": "tom@organisms.be"}, {"index": "124", "colour": "orange", "code": "    if tagtext:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "125", "colour": "orange", "code": "        newelement.text = tagtext\n", "error": "none", "author": "tom@organisms.be"}, {"index": "126", "colour": "orange", "code": "    return newelement\n", "error": "none", "author": "tom@organisms.be"}, {"index": "127", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "128", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "129", "colour": "green", "code": "def pagebreak(type='page', orient='portrait'):\n", "error": "W", "author": "tom@organisms.be"}, {"index": "130", "colour": "orange", "code": "    '''Insert a break, default 'page'.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "131", "colour": "orange", "code": "    See http://openxmldeveloper.org/forums/thread/4075.aspx\n", "error": "none", "author": "tom@organisms.be"}, {"index": "132", "colour": "orange", "code": "    Return our page break element.'''\n", "error": "none", "author": "tom@organisms.be"}, {"index": "133", "colour": "orange", "code": "    # Need to enumerate different types of page breaks.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "134", "colour": "orange", "code": "    validtypes = ['page', 'section']\n", "error": "none", "author": "tom@organisms.be"}, {"index": "135", "colour": "orange", "code": "    if type not in validtypes:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "136", "colour": "orange", "code": "        tmpl = 'Page break style \"%s\" not implemented. Valid styles: %s.'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "137", "colour": "orange", "code": "        raise ValueError(tmpl % (type, validtypes))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "138", "colour": "green", "code": "    pagebreak = makeelement('p')\n", "error": "W", "author": "tom@organisms.be"}, {"index": "139", "colour": "orange", "code": "    if type == 'page':\n", "error": "none", "author": "tom@organisms.be"}, {"index": "140", "colour": "orange", "code": "        run = makeelement('r')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "141", "colour": "orange", "code": "        br = makeelement('br', attributes={'type': type})\n", "error": "none", "author": "tom@organisms.be"}, {"index": "142", "colour": "orange", "code": "        run.append(br)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "143", "colour": "orange", "code": "        pagebreak.append(run)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "144", "colour": "orange", "code": "    elif type == 'section':\n", "error": "none", "author": "tom@organisms.be"}, {"index": "145", "colour": "orange", "code": "        pPr = makeelement('pPr')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "146", "colour": "orange", "code": "        sectPr = makeelement('sectPr')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "147", "colour": "orange", "code": "        if orient == 'portrait':\n", "error": "none", "author": "tom@organisms.be"}, {"index": "148", "colour": "orange", "code": "            pgSz = makeelement('pgSz', attributes={'w': '12240', 'h': '15840'})\n", "error": "none", "author": "tom@organisms.be"}, {"index": "149", "colour": "orange", "code": "        elif orient == 'landscape':\n", "error": "none", "author": "tom@organisms.be"}, {"index": "150", "colour": "orange", "code": "            pgSz = makeelement('pgSz', attributes={'h': '12240', 'w': '15840',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "151", "colour": "orange", "code": "                                                   'orient': 'landscape'})\n", "error": "none", "author": "tom@organisms.be"}, {"index": "152", "colour": "orange", "code": "        sectPr.append(pgSz)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "153", "colour": "orange", "code": "        pPr.append(sectPr)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "154", "colour": "orange", "code": "        pagebreak.append(pPr)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "155", "colour": "orange", "code": "    return pagebreak\n", "error": "none", "author": "tom@organisms.be"}, {"index": "156", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "157", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "158", "colour": "blue", "code": "def paragraph(paratext, style='BodyText', breakbefore=False, jc='left'):\n", "error": "R", "author": "tom@organisms.be"}, {"index": "159", "colour": "orange", "code": "    \"\"\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "160", "colour": "orange", "code": "    Return a new paragraph element containing *paratext*. The paragraph's\n", "error": "none", "author": "tom@organisms.be"}, {"index": "161", "colour": "orange", "code": "    default style is 'Body Text', but a new style may be set using the\n", "error": "none", "author": "tom@organisms.be"}, {"index": "162", "colour": "orange", "code": "    *style* parameter.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "163", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "164", "colour": "orange", "code": "    @param string jc: Paragraph alignment, possible values:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "165", "colour": "orange", "code": "                      left, center, right, both (justified), ...\n", "error": "none", "author": "tom@organisms.be"}, {"index": "166", "colour": "orange", "code": "                      see http://www.schemacentral.com/sc/ooxml/t-w_ST_Jc.html\n", "error": "none", "author": "tom@organisms.be"}, {"index": "167", "colour": "orange", "code": "                      for a full list\n", "error": "none", "author": "tom@organisms.be"}, {"index": "168", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "169", "colour": "orange", "code": "    If *paratext* is a list, add a run for each (text, char_format_str)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "170", "colour": "orange", "code": "    2-tuple in the list. char_format_str is a string containing one or more\n", "error": "none", "author": "tom@organisms.be"}, {"index": "171", "colour": "orange", "code": "    of the characters 'b', 'i', or 'u', meaning bold, italic, and underline\n", "error": "none", "author": "tom@organisms.be"}, {"index": "172", "colour": "orange", "code": "    respectively. For example:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "173", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "174", "colour": "orange", "code": "        paratext = [\n", "error": "none", "author": "tom@organisms.be"}, {"index": "175", "colour": "orange", "code": "            ('some bold text', 'b'),\n", "error": "none", "author": "tom@organisms.be"}, {"index": "176", "colour": "orange", "code": "            ('some normal text', ''),\n", "error": "none", "author": "tom@organisms.be"}, {"index": "177", "colour": "orange", "code": "            ('some italic underlined text', 'iu')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "178", "colour": "orange", "code": "        ]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "179", "colour": "orange", "code": "    \"\"\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "180", "colour": "orange", "code": "    # Make our elements\n", "error": "none", "author": "tom@organisms.be"}, {"index": "181", "colour": "green", "code": "    paragraph = makeelement('p')\n", "error": "W", "author": "tom@organisms.be"}, {"index": "182", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "183", "colour": "orange", "code": "    if not isinstance(paratext, list):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "184", "colour": "orange", "code": "        paratext = [(paratext, '')]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "185", "colour": "orange", "code": "    text_tuples = []\n", "error": "none", "author": "tom@organisms.be"}, {"index": "186", "colour": "orange", "code": "    for pt in paratext:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "187", "colour": "orange", "code": "        text, char_styles_str = (pt if isinstance(pt, (list, tuple))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "188", "colour": "orange", "code": "                                 else (pt, ''))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "189", "colour": "orange", "code": "        text_elm = makeelement('t', tagtext=text)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "190", "colour": "orange", "code": "        if len(text.strip()) < len(text):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "191", "colour": "orange", "code": "            text_elm.set('{http://www.w3.org/XML/1998/namespace}space',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "192", "colour": "orange", "code": "                         'preserve')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "193", "colour": "orange", "code": "        text_tuples.append([text_elm, char_styles_str])\n", "error": "none", "author": "tom@organisms.be"}, {"index": "194", "colour": "orange", "code": "    pPr = makeelement('pPr')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "195", "colour": "orange", "code": "    pStyle = makeelement('pStyle', attributes={'val': style})\n", "error": "none", "author": "tom@organisms.be"}, {"index": "196", "colour": "orange", "code": "    pJc = makeelement('jc', attributes={'val': jc})\n", "error": "none", "author": "tom@organisms.be"}, {"index": "197", "colour": "orange", "code": "    pPr.append(pStyle)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "198", "colour": "orange", "code": "    pPr.append(pJc)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "199", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "200", "colour": "orange", "code": "    # Add the text to the run, and the run to the paragraph\n", "error": "none", "author": "tom@organisms.be"}, {"index": "201", "colour": "orange", "code": "    paragraph.append(pPr)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "202", "colour": "orange", "code": "    for text_elm, char_styles_str in text_tuples:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "203", "colour": "orange", "code": "        run = makeelement('r')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "204", "colour": "orange", "code": "        rPr = makeelement('rPr')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "205", "colour": "orange", "code": "        # Apply styles\n", "error": "none", "author": "tom@organisms.be"}, {"index": "206", "colour": "orange", "code": "        if 'b' in char_styles_str:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "207", "colour": "orange", "code": "            b = makeelement('b')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "208", "colour": "orange", "code": "            rPr.append(b)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "209", "colour": "orange", "code": "        if 'i' in char_styles_str:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "210", "colour": "orange", "code": "            i = makeelement('i')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "211", "colour": "orange", "code": "            rPr.append(i)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "212", "colour": "orange", "code": "        if 'u' in char_styles_str:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "213", "colour": "orange", "code": "            u = makeelement('u', attributes={'val': 'single'})\n", "error": "none", "author": "tom@organisms.be"}, {"index": "214", "colour": "orange", "code": "            rPr.append(u)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "215", "colour": "orange", "code": "        run.append(rPr)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "216", "colour": "orange", "code": "        # Insert lastRenderedPageBreak for assistive technologies like\n", "error": "none", "author": "tom@organisms.be"}, {"index": "217", "colour": "orange", "code": "        # document narrators to know when a page break occurred.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "218", "colour": "orange", "code": "        if breakbefore:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "219", "colour": "orange", "code": "            lastRenderedPageBreak = makeelement('lastRenderedPageBreak')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "220", "colour": "orange", "code": "            run.append(lastRenderedPageBreak)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "221", "colour": "orange", "code": "        run.append(text_elm)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "222", "colour": "orange", "code": "        paragraph.append(run)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "223", "colour": "orange", "code": "    # Return the combined paragraph\n", "error": "none", "author": "tom@organisms.be"}, {"index": "224", "colour": "orange", "code": "    return paragraph\n", "error": "none", "author": "tom@organisms.be"}, {"index": "225", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "226", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "227", "colour": "orange", "code": "def contenttypes():\n", "error": "none", "author": "tom@organisms.be"}, {"index": "228", "colour": "orange", "code": "    types = etree.fromstring(\n", "error": "none", "author": "tom@organisms.be"}, {"index": "229", "colour": "orange", "code": "        '<Types xmlns=\"http://schemas.openxmlformats.org/package/2006/conten'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "230", "colour": "orange", "code": "        't-types\"></Types>')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "231", "colour": "orange", "code": "    parts = {\n", "error": "none", "author": "tom@organisms.be"}, {"index": "232", "colour": "orange", "code": "        '/word/theme/theme1.xml': 'application/vnd.openxmlformats-officedocu'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "233", "colour": "orange", "code": "                                  'ment.theme+xml',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "234", "colour": "orange", "code": "        '/word/fontTable.xml':    'application/vnd.openxmlformats-officedocu'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "235", "colour": "orange", "code": "                                  'ment.wordprocessingml.fontTable+xml',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "236", "colour": "orange", "code": "        '/docProps/core.xml':     'application/vnd.openxmlformats-package.co'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "237", "colour": "orange", "code": "                                  're-properties+xml',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "238", "colour": "orange", "code": "        '/docProps/app.xml':      'application/vnd.openxmlformats-officedocu'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "239", "colour": "orange", "code": "                                  'ment.extended-properties+xml',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "240", "colour": "orange", "code": "        '/word/document.xml':     'application/vnd.openxmlformats-officedocu'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "241", "colour": "orange", "code": "                                  'ment.wordprocessingml.document.main+xml',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "242", "colour": "orange", "code": "        '/word/settings.xml':     'application/vnd.openxmlformats-officedocu'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "243", "colour": "orange", "code": "                                  'ment.wordprocessingml.settings+xml',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "244", "colour": "orange", "code": "        '/word/numbering.xml':    'application/vnd.openxmlformats-officedocu'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "245", "colour": "orange", "code": "                                  'ment.wordprocessingml.numbering+xml',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "246", "colour": "orange", "code": "        '/word/styles.xml':       'application/vnd.openxmlformats-officedocu'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "247", "colour": "orange", "code": "                                  'ment.wordprocessingml.styles+xml',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "248", "colour": "orange", "code": "        '/word/webSettings.xml':  'application/vnd.openxmlformats-officedocu'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "249", "colour": "orange", "code": "                                  'ment.wordprocessingml.webSettings+xml'}\n", "error": "none", "author": "tom@organisms.be"}, {"index": "250", "colour": "orange", "code": "    for part in parts:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "251", "colour": "orange", "code": "        types.append(makeelement('Override', nsprefix=None,\n", "error": "none", "author": "tom@organisms.be"}, {"index": "252", "colour": "orange", "code": "                                 attributes={'PartName': part,\n", "error": "none", "author": "tom@organisms.be"}, {"index": "253", "colour": "orange", "code": "                                             'ContentType': parts[part]}))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "254", "colour": "orange", "code": "    # Add support for filetypes\n", "error": "none", "author": "tom@organisms.be"}, {"index": "255", "colour": "orange", "code": "    filetypes = {\n", "error": "none", "author": "tom@organisms.be"}, {"index": "256", "colour": "orange", "code": "        'gif':  'image/gif',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "257", "colour": "orange", "code": "        'jpeg': 'image/jpeg',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "258", "colour": "orange", "code": "        'jpg':  'image/jpeg',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "259", "colour": "orange", "code": "        'png':  'image/png',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "260", "colour": "orange", "code": "        'rels': 'application/vnd.openxmlformats-package.relationships+xml',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "261", "colour": "orange", "code": "        'xml':  'application/xml'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "262", "colour": "orange", "code": "    }\n", "error": "none", "author": "tom@organisms.be"}, {"index": "263", "colour": "orange", "code": "    for extension in filetypes:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "264", "colour": "orange", "code": "        attrs = {\n", "error": "none", "author": "tom@organisms.be"}, {"index": "265", "colour": "orange", "code": "            'Extension':   extension,\n", "error": "none", "author": "tom@organisms.be"}, {"index": "266", "colour": "orange", "code": "            'ContentType': filetypes[extension]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "267", "colour": "orange", "code": "        }\n", "error": "none", "author": "tom@organisms.be"}, {"index": "268", "colour": "orange", "code": "        default_elm = makeelement('Default', nsprefix=None, attributes=attrs)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "269", "colour": "orange", "code": "        types.append(default_elm)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "270", "colour": "orange", "code": "    return types\n", "error": "none", "author": "tom@organisms.be"}, {"index": "271", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "272", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "273", "colour": "orange", "code": "def heading(headingtext, headinglevel, lang='en'):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "274", "colour": "orange", "code": "    '''Make a new heading, return the heading element'''\n", "error": "none", "author": "tom@organisms.be"}, {"index": "275", "colour": "orange", "code": "    lmap = {'en': 'Heading', 'it': 'Titolo'}\n", "error": "none", "author": "tom@organisms.be"}, {"index": "276", "colour": "orange", "code": "    # Make our elements\n", "error": "none", "author": "tom@organisms.be"}, {"index": "277", "colour": "green", "code": "    paragraph = makeelement('p')\n", "error": "W", "author": "tom@organisms.be"}, {"index": "278", "colour": "orange", "code": "    pr = makeelement('pPr')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "279", "colour": "orange", "code": "    pStyle = makeelement(\n", "error": "none", "author": "tom@organisms.be"}, {"index": "280", "colour": "orange", "code": "        'pStyle', attributes={'val': lmap[lang]+str(headinglevel)})\n", "error": "none", "author": "tom@organisms.be"}, {"index": "281", "colour": "orange", "code": "    run = makeelement('r')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "282", "colour": "orange", "code": "    text = makeelement('t', tagtext=headingtext)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "283", "colour": "orange", "code": "    # Add the text the run, and the run to the paragraph\n", "error": "none", "author": "tom@organisms.be"}, {"index": "284", "colour": "orange", "code": "    pr.append(pStyle)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "285", "colour": "orange", "code": "    run.append(text)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "286", "colour": "orange", "code": "    paragraph.append(pr)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "287", "colour": "orange", "code": "    paragraph.append(run)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "288", "colour": "orange", "code": "    # Return the combined paragraph\n", "error": "none", "author": "tom@organisms.be"}, {"index": "289", "colour": "orange", "code": "    return paragraph\n", "error": "none", "author": "tom@organisms.be"}, {"index": "290", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "291", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "292", "colour": "blue", "code": "def table(contents, heading=True, colw=None, cwunit='dxa', tblw=0,\n", "error": "R", "author": "tom@organisms.be"}, {"index": "293", "colour": "orange", "code": "          twunit='auto', borders={}, celstyle=None):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "294", "colour": "orange", "code": "    \"\"\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "295", "colour": "orange", "code": "    Return a table element based on specified parameters\n", "error": "none", "author": "tom@organisms.be"}, {"index": "296", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "297", "colour": "orange", "code": "    @param list contents: A list of lists describing contents. Every item in\n", "error": "none", "author": "tom@organisms.be"}, {"index": "298", "colour": "orange", "code": "                          the list can be a string or a valid XML element\n", "error": "none", "author": "tom@organisms.be"}, {"index": "299", "colour": "orange", "code": "                          itself. It can also be a list. In that case all the\n", "error": "none", "author": "tom@organisms.be"}, {"index": "300", "colour": "orange", "code": "                          listed elements will be merged into the cell.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "301", "colour": "orange", "code": "    @param bool heading:  Tells whether first line should be treated as\n", "error": "none", "author": "tom@organisms.be"}, {"index": "302", "colour": "orange", "code": "                          heading or not\n", "error": "none", "author": "tom@organisms.be"}, {"index": "303", "colour": "orange", "code": "    @param list colw:     list of integer column widths specified in wunitS.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "304", "colour": "orange", "code": "    @param str  cwunit:   Unit used for column width:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "305", "colour": "orange", "code": "                            'pct'  : fiftieths of a percent\n", "error": "none", "author": "tom@organisms.be"}, {"index": "306", "colour": "orange", "code": "                            'dxa'  : twentieths of a point\n", "error": "none", "author": "tom@organisms.be"}, {"index": "307", "colour": "orange", "code": "                            'nil'  : no width\n", "error": "none", "author": "tom@organisms.be"}, {"index": "308", "colour": "orange", "code": "                            'auto' : automagically determined\n", "error": "none", "author": "tom@organisms.be"}, {"index": "309", "colour": "orange", "code": "    @param int  tblw:     Table width\n", "error": "none", "author": "tom@organisms.be"}, {"index": "310", "colour": "orange", "code": "    @param int  twunit:   Unit used for table width. Same possible values as\n", "error": "none", "author": "tom@organisms.be"}, {"index": "311", "colour": "orange", "code": "                          cwunit.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "312", "colour": "orange", "code": "    @param dict borders:  Dictionary defining table border. Supported keys\n", "error": "none", "author": "tom@organisms.be"}, {"index": "313", "colour": "orange", "code": "                          are: 'top', 'left', 'bottom', 'right',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "314", "colour": "orange", "code": "                          'insideH', 'insideV', 'all'.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "315", "colour": "orange", "code": "                          When specified, the 'all' key has precedence over\n", "error": "none", "author": "tom@organisms.be"}, {"index": "316", "colour": "orange", "code": "                          others. Each key must define a dict of border\n", "error": "none", "author": "tom@organisms.be"}, {"index": "317", "colour": "orange", "code": "                          attributes:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "318", "colour": "orange", "code": "                            color : The color of the border, in hex or\n", "error": "none", "author": "tom@organisms.be"}, {"index": "319", "colour": "orange", "code": "                                    'auto'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "320", "colour": "orange", "code": "                            space : The space, measured in points\n", "error": "none", "author": "tom@organisms.be"}, {"index": "321", "colour": "orange", "code": "                            sz    : The size of the border, in eighths of\n", "error": "none", "author": "tom@organisms.be"}, {"index": "322", "colour": "orange", "code": "                                    a point\n", "error": "none", "author": "tom@organisms.be"}, {"index": "323", "colour": "orange", "code": "                            val   : The style of the border, see\n", "error": "none", "author": "tom@organisms.be"}, {"index": "324", "colour": "orange", "code": "                http://www.schemacentral.com/sc/ooxml/t-w_ST_Border.htm\n", "error": "none", "author": "tom@organisms.be"}, {"index": "325", "colour": "orange", "code": "    @param list celstyle: Specify the style for each colum, list of dicts.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "326", "colour": "orange", "code": "                          supported keys:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "327", "colour": "orange", "code": "                          'align' : specify the alignment, see paragraph\n", "error": "none", "author": "tom@organisms.be"}, {"index": "328", "colour": "orange", "code": "                                    documentation.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "329", "colour": "orange", "code": "    @return lxml.etree:   Generated XML etree element\n", "error": "none", "author": "tom@organisms.be"}, {"index": "330", "colour": "orange", "code": "    \"\"\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "331", "colour": "green", "code": "    table = makeelement('tbl')\n", "error": "W", "author": "tom@organisms.be"}, {"index": "332", "colour": "orange", "code": "    columns = len(contents[0])\n", "error": "none", "author": "tom@organisms.be"}, {"index": "333", "colour": "orange", "code": "    # Table properties\n", "error": "none", "author": "tom@organisms.be"}, {"index": "334", "colour": "orange", "code": "    tableprops = makeelement('tblPr')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "335", "colour": "orange", "code": "    tablestyle = makeelement('tblStyle', attributes={'val': ''})\n", "error": "none", "author": "tom@organisms.be"}, {"index": "336", "colour": "orange", "code": "    tableprops.append(tablestyle)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "337", "colour": "orange", "code": "    tablewidth = makeelement(\n", "error": "none", "author": "tom@organisms.be"}, {"index": "338", "colour": "orange", "code": "        'tblW', attributes={'w': str(tblw), 'type': str(twunit)})\n", "error": "none", "author": "tom@organisms.be"}, {"index": "339", "colour": "orange", "code": "    tableprops.append(tablewidth)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "340", "colour": "orange", "code": "    if len(borders.keys()):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "341", "colour": "orange", "code": "        tableborders = makeelement('tblBorders')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "342", "colour": "orange", "code": "        for b in ['top', 'left', 'bottom', 'right', 'insideH', 'insideV']:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "343", "colour": "orange", "code": "            if b in borders.keys() or 'all' in borders.keys():\n", "error": "none", "author": "tom@organisms.be"}, {"index": "344", "colour": "orange", "code": "                k = 'all' if 'all' in borders.keys() else b\n", "error": "none", "author": "tom@organisms.be"}, {"index": "345", "colour": "orange", "code": "                attrs = {}\n", "error": "none", "author": "tom@organisms.be"}, {"index": "346", "colour": "orange", "code": "                for a in borders[k].keys():\n", "error": "none", "author": "tom@organisms.be"}, {"index": "347", "colour": "orange", "code": "                    attrs[a] = unicode(borders[k][a])\n", "error": "none", "author": "tom@organisms.be"}, {"index": "348", "colour": "orange", "code": "                borderelem = makeelement(b, attributes=attrs)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "349", "colour": "orange", "code": "                tableborders.append(borderelem)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "350", "colour": "orange", "code": "        tableprops.append(tableborders)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "351", "colour": "orange", "code": "    tablelook = makeelement('tblLook', attributes={'val': '0400'})\n", "error": "none", "author": "tom@organisms.be"}, {"index": "352", "colour": "orange", "code": "    tableprops.append(tablelook)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "353", "colour": "orange", "code": "    table.append(tableprops)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "354", "colour": "orange", "code": "    # Table Grid\n", "error": "none", "author": "tom@organisms.be"}, {"index": "355", "colour": "orange", "code": "    tablegrid = makeelement('tblGrid')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "356", "colour": "orange", "code": "    for i in range(columns):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "357", "colour": "orange", "code": "        attrs = {'w': str(colw[i]) if colw else '2390'}\n", "error": "none", "author": "tom@organisms.be"}, {"index": "358", "colour": "orange", "code": "        tablegrid.append(makeelement('gridCol', attributes=attrs))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "359", "colour": "orange", "code": "    table.append(tablegrid)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "360", "colour": "orange", "code": "    # Heading Row\n", "error": "none", "author": "tom@organisms.be"}, {"index": "361", "colour": "orange", "code": "    row = makeelement('tr')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "362", "colour": "orange", "code": "    rowprops = makeelement('trPr')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "363", "colour": "orange", "code": "    cnfStyle = makeelement('cnfStyle', attributes={'val': '000000100000'})\n", "error": "none", "author": "tom@organisms.be"}, {"index": "364", "colour": "orange", "code": "    rowprops.append(cnfStyle)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "365", "colour": "orange", "code": "    row.append(rowprops)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "366", "colour": "orange", "code": "    if heading:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "367", "colour": "orange", "code": "        i = 0\n", "error": "none", "author": "tom@organisms.be"}, {"index": "368", "colour": "orange", "code": "        for heading in contents[0]:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "369", "colour": "orange", "code": "            cell = makeelement('tc')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "370", "colour": "orange", "code": "            # Cell properties\n", "error": "none", "author": "tom@organisms.be"}, {"index": "371", "colour": "orange", "code": "            cellprops = makeelement('tcPr')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "372", "colour": "orange", "code": "            if colw:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "373", "colour": "orange", "code": "                wattr = {'w': str(colw[i]), 'type': cwunit}\n", "error": "none", "author": "tom@organisms.be"}, {"index": "374", "colour": "orange", "code": "            else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "375", "colour": "orange", "code": "                wattr = {'w': '0', 'type': 'auto'}\n", "error": "none", "author": "tom@organisms.be"}, {"index": "376", "colour": "orange", "code": "            cellwidth = makeelement('tcW', attributes=wattr)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "377", "colour": "orange", "code": "            cellstyle = makeelement('shd', attributes={'val': 'clear',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "378", "colour": "orange", "code": "                                                       'color': 'auto',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "379", "colour": "orange", "code": "                                                       'fill': 'FFFFFF',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "380", "colour": "orange", "code": "                                                       'themeFill': 'text2',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "381", "colour": "orange", "code": "                                                       'themeFillTint': '99'})\n", "error": "none", "author": "tom@organisms.be"}, {"index": "382", "colour": "orange", "code": "            cellprops.append(cellwidth)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "383", "colour": "orange", "code": "            cellprops.append(cellstyle)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "384", "colour": "orange", "code": "            cell.append(cellprops)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "385", "colour": "orange", "code": "            # Paragraph (Content)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "386", "colour": "orange", "code": "            if not isinstance(heading, (list, tuple)):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "387", "colour": "orange", "code": "                heading = [heading]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "388", "colour": "orange", "code": "            for h in heading:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "389", "colour": "green", "code": "                if isinstance(h, etree._Element):\n", "error": "W", "author": "tom@organisms.be"}, {"index": "390", "colour": "orange", "code": "                    cell.append(h)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "391", "colour": "orange", "code": "                else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "392", "colour": "orange", "code": "                    cell.append(paragraph(h, jc='center'))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "393", "colour": "orange", "code": "            row.append(cell)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "394", "colour": "orange", "code": "            i += 1\n", "error": "none", "author": "tom@organisms.be"}, {"index": "395", "colour": "orange", "code": "        table.append(row)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "396", "colour": "orange", "code": "    # Contents Rows\n", "error": "none", "author": "tom@organisms.be"}, {"index": "397", "colour": "orange", "code": "    for contentrow in contents[1 if heading else 0:]:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "398", "colour": "orange", "code": "        row = makeelement('tr')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "399", "colour": "orange", "code": "        i = 0\n", "error": "none", "author": "tom@organisms.be"}, {"index": "400", "colour": "orange", "code": "        for content in contentrow:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "401", "colour": "orange", "code": "            cell = makeelement('tc')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "402", "colour": "orange", "code": "            # Properties\n", "error": "none", "author": "tom@organisms.be"}, {"index": "403", "colour": "orange", "code": "            cellprops = makeelement('tcPr')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "404", "colour": "orange", "code": "            if colw:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "405", "colour": "orange", "code": "                wattr = {'w': str(colw[i]), 'type': cwunit}\n", "error": "none", "author": "tom@organisms.be"}, {"index": "406", "colour": "orange", "code": "            else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "407", "colour": "orange", "code": "                wattr = {'w': '0', 'type': 'auto'}\n", "error": "none", "author": "tom@organisms.be"}, {"index": "408", "colour": "orange", "code": "            cellwidth = makeelement('tcW', attributes=wattr)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "409", "colour": "orange", "code": "            cellprops.append(cellwidth)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "410", "colour": "orange", "code": "            cell.append(cellprops)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "411", "colour": "orange", "code": "            # Paragraph (Content)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "412", "colour": "orange", "code": "            if not isinstance(content, (list, tuple)):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "413", "colour": "orange", "code": "                content = [content]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "414", "colour": "orange", "code": "            for c in content:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "415", "colour": "green", "code": "                if isinstance(c, etree._Element):\n", "error": "W", "author": "tom@organisms.be"}, {"index": "416", "colour": "orange", "code": "                    cell.append(c)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "417", "colour": "orange", "code": "                else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "418", "colour": "orange", "code": "                    if celstyle and 'align' in celstyle[i].keys():\n", "error": "none", "author": "tom@organisms.be"}, {"index": "419", "colour": "orange", "code": "                        align = celstyle[i]['align']\n", "error": "none", "author": "tom@organisms.be"}, {"index": "420", "colour": "orange", "code": "                    else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "421", "colour": "orange", "code": "                        align = 'left'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "422", "colour": "orange", "code": "                    cell.append(paragraph(c, jc=align))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "423", "colour": "orange", "code": "            row.append(cell)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "424", "colour": "orange", "code": "            i += 1\n", "error": "none", "author": "tom@organisms.be"}, {"index": "425", "colour": "orange", "code": "        table.append(row)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "426", "colour": "orange", "code": "    return table\n", "error": "none", "author": "tom@organisms.be"}, {"index": "427", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "428", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "429", "colour": "blue", "code": "def picture(\n", "error": "R", "author": "tom@organisms.be"}, {"index": "430", "colour": "green", "code": "        relationshiplist, picname, picdescription, pixelwidth=None,\n", "error": "W", "author": "tom@organisms.be"}, {"index": "431", "colour": "orange", "code": "        pixelheight=None, nochangeaspect=True, nochangearrowheads=True):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "432", "colour": "orange", "code": "    \"\"\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "433", "colour": "orange", "code": "    Take a relationshiplist, picture file name, and return a paragraph\n", "error": "none", "author": "tom@organisms.be"}, {"index": "434", "colour": "orange", "code": "    containing the image and an updated relationshiplist.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "435", "colour": "orange", "code": "    \"\"\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "436", "colour": "orange", "code": "    # http://openxmldeveloper.org/articles/462.aspx\n", "error": "none", "author": "tom@organisms.be"}, {"index": "437", "colour": "orange", "code": "    # Create an image. Size may be specified, otherwise it will based on the\n", "error": "none", "author": "tom@organisms.be"}, {"index": "438", "colour": "orange", "code": "    # pixel size of image. Return a paragraph containing the picture'''\n", "error": "none", "author": "tom@organisms.be"}, {"index": "439", "colour": "orange", "code": "    # Copy the file into the media dir\n", "error": "none", "author": "tom@organisms.be"}, {"index": "440", "colour": "orange", "code": "    media_dir = join(template_dir, 'word', 'media')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "441", "colour": "orange", "code": "    if not os.path.isdir(media_dir):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "442", "colour": "orange", "code": "        os.mkdir(media_dir)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "443", "colour": "orange", "code": "    shutil.copyfile(picname, join(media_dir, picname))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "444", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "445", "colour": "orange", "code": "    # Check if the user has specified a size\n", "error": "none", "author": "tom@organisms.be"}, {"index": "446", "colour": "orange", "code": "    if not pixelwidth or not pixelheight:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "447", "colour": "orange", "code": "        # If not, get info from the picture itself\n", "error": "none", "author": "tom@organisms.be"}, {"index": "448", "colour": "orange", "code": "        pixelwidth, pixelheight = Image.open(picname).size[0:2]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "449", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "450", "colour": "orange", "code": "    # OpenXML measures on-screen objects in English Metric Units\n", "error": "none", "author": "tom@organisms.be"}, {"index": "451", "colour": "orange", "code": "    # 1cm = 36000 EMUs\n", "error": "none", "author": "tom@organisms.be"}, {"index": "452", "colour": "orange", "code": "    emuperpixel = 12700\n", "error": "none", "author": "tom@organisms.be"}, {"index": "453", "colour": "orange", "code": "    width = str(pixelwidth * emuperpixel)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "454", "colour": "orange", "code": "    height = str(pixelheight * emuperpixel)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "455", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "456", "colour": "orange", "code": "    # Set relationship ID to the first available\n", "error": "none", "author": "tom@organisms.be"}, {"index": "457", "colour": "orange", "code": "    picid = '2'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "458", "colour": "orange", "code": "    picrelid = 'rId'+str(len(relationshiplist)+1)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "459", "colour": "orange", "code": "    relationshiplist.append([\n", "error": "none", "author": "tom@organisms.be"}, {"index": "460", "colour": "orange", "code": "        ('http://schemas.openxmlformats.org/officeDocument/2006/relationship'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "461", "colour": "orange", "code": "         's/image'), 'media/'+picname])\n", "error": "none", "author": "tom@organisms.be"}, {"index": "462", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "463", "colour": "orange", "code": "    # There are 3 main elements inside a picture\n", "error": "none", "author": "tom@organisms.be"}, {"index": "464", "colour": "orange", "code": "    # 1. The Blipfill - specifies how the image fills the picture area\n", "error": "none", "author": "tom@organisms.be"}, {"index": "465", "colour": "orange", "code": "    #    (stretch, tile, etc.)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "466", "colour": "orange", "code": "    blipfill = makeelement('blipFill', nsprefix='pic')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "467", "colour": "orange", "code": "    blipfill.append(makeelement('blip', nsprefix='a', attrnsprefix='r',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "468", "colour": "orange", "code": "                    attributes={'embed': picrelid}))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "469", "colour": "orange", "code": "    stretch = makeelement('stretch', nsprefix='a')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "470", "colour": "orange", "code": "    stretch.append(makeelement('fillRect', nsprefix='a'))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "471", "colour": "orange", "code": "    blipfill.append(makeelement('srcRect', nsprefix='a'))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "472", "colour": "orange", "code": "    blipfill.append(stretch)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "473", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "474", "colour": "orange", "code": "    # 2. The non visual picture properties\n", "error": "none", "author": "tom@organisms.be"}, {"index": "475", "colour": "orange", "code": "    nvpicpr = makeelement('nvPicPr', nsprefix='pic')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "476", "colour": "orange", "code": "    cnvpr = makeelement(\n", "error": "none", "author": "tom@organisms.be"}, {"index": "477", "colour": "orange", "code": "        'cNvPr', nsprefix='pic',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "478", "colour": "orange", "code": "        attributes={'id': '0', 'name': 'Picture 1', 'descr': picname})\n", "error": "none", "author": "tom@organisms.be"}, {"index": "479", "colour": "orange", "code": "    nvpicpr.append(cnvpr)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "480", "colour": "orange", "code": "    cnvpicpr = makeelement('cNvPicPr', nsprefix='pic')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "481", "colour": "orange", "code": "    cnvpicpr.append(makeelement(\n", "error": "none", "author": "tom@organisms.be"}, {"index": "482", "colour": "orange", "code": "        'picLocks', nsprefix='a',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "483", "colour": "orange", "code": "        attributes={'noChangeAspect': str(int(nochangeaspect)),\n", "error": "none", "author": "tom@organisms.be"}, {"index": "484", "colour": "orange", "code": "                    'noChangeArrowheads': str(int(nochangearrowheads))}))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "485", "colour": "orange", "code": "    nvpicpr.append(cnvpicpr)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "486", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "487", "colour": "orange", "code": "    # 3. The Shape properties\n", "error": "none", "author": "tom@organisms.be"}, {"index": "488", "colour": "orange", "code": "    sppr = makeelement('spPr', nsprefix='pic', attributes={'bwMode': 'auto'})\n", "error": "none", "author": "tom@organisms.be"}, {"index": "489", "colour": "orange", "code": "    xfrm = makeelement('xfrm', nsprefix='a')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "490", "colour": "orange", "code": "    xfrm.append(makeelement(\n", "error": "none", "author": "tom@organisms.be"}, {"index": "491", "colour": "orange", "code": "        'off', nsprefix='a', attributes={'x': '0', 'y': '0'}))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "492", "colour": "orange", "code": "    xfrm.append(makeelement(\n", "error": "none", "author": "tom@organisms.be"}, {"index": "493", "colour": "orange", "code": "        'ext', nsprefix='a', attributes={'cx': width, 'cy': height}))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "494", "colour": "orange", "code": "    prstgeom = makeelement(\n", "error": "none", "author": "tom@organisms.be"}, {"index": "495", "colour": "orange", "code": "        'prstGeom', nsprefix='a', attributes={'prst': 'rect'})\n", "error": "none", "author": "tom@organisms.be"}, {"index": "496", "colour": "orange", "code": "    prstgeom.append(makeelement('avLst', nsprefix='a'))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "497", "colour": "orange", "code": "    sppr.append(xfrm)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "498", "colour": "orange", "code": "    sppr.append(prstgeom)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "499", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "500", "colour": "orange", "code": "    # Add our 3 parts to the picture element\n", "error": "none", "author": "tom@organisms.be"}, {"index": "501", "colour": "orange", "code": "    pic = makeelement('pic', nsprefix='pic')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "502", "colour": "orange", "code": "    pic.append(nvpicpr)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "503", "colour": "orange", "code": "    pic.append(blipfill)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "504", "colour": "orange", "code": "    pic.append(sppr)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "505", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "506", "colour": "orange", "code": "    # Now make the supporting elements\n", "error": "none", "author": "tom@organisms.be"}, {"index": "507", "colour": "orange", "code": "    # The following sequence is just: make element, then add its children\n", "error": "none", "author": "tom@organisms.be"}, {"index": "508", "colour": "orange", "code": "    graphicdata = makeelement(\n", "error": "none", "author": "tom@organisms.be"}, {"index": "509", "colour": "orange", "code": "        'graphicData', nsprefix='a',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "510", "colour": "orange", "code": "        attributes={'uri': ('http://schemas.openxmlformats.org/drawingml/200'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "511", "colour": "orange", "code": "                            '6/picture')})\n", "error": "none", "author": "tom@organisms.be"}, {"index": "512", "colour": "orange", "code": "    graphicdata.append(pic)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "513", "colour": "orange", "code": "    graphic = makeelement('graphic', nsprefix='a')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "514", "colour": "orange", "code": "    graphic.append(graphicdata)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "515", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "516", "colour": "orange", "code": "    framelocks = makeelement('graphicFrameLocks', nsprefix='a',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "517", "colour": "orange", "code": "                             attributes={'noChangeAspect': '1'})\n", "error": "none", "author": "tom@organisms.be"}, {"index": "518", "colour": "orange", "code": "    framepr = makeelement('cNvGraphicFramePr', nsprefix='wp')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "519", "colour": "orange", "code": "    framepr.append(framelocks)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "520", "colour": "orange", "code": "    docpr = makeelement('docPr', nsprefix='wp',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "521", "colour": "orange", "code": "                        attributes={'id': picid, 'name': 'Picture 1',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "522", "colour": "orange", "code": "                                    'descr': picdescription})\n", "error": "none", "author": "tom@organisms.be"}, {"index": "523", "colour": "orange", "code": "    effectextent = makeelement('effectExtent', nsprefix='wp',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "524", "colour": "orange", "code": "                               attributes={'l': '25400', 't': '0', 'r': '0',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "525", "colour": "orange", "code": "                                           'b': '0'})\n", "error": "none", "author": "tom@organisms.be"}, {"index": "526", "colour": "orange", "code": "    extent = makeelement('extent', nsprefix='wp',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "527", "colour": "orange", "code": "                         attributes={'cx': width, 'cy': height})\n", "error": "none", "author": "tom@organisms.be"}, {"index": "528", "colour": "orange", "code": "    inline = makeelement('inline', attributes={'distT': \"0\", 'distB': \"0\",\n", "error": "none", "author": "tom@organisms.be"}, {"index": "529", "colour": "orange", "code": "                                               'distL': \"0\", 'distR': \"0\"},\n", "error": "none", "author": "tom@organisms.be"}, {"index": "530", "colour": "orange", "code": "                         nsprefix='wp')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "531", "colour": "orange", "code": "    inline.append(extent)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "532", "colour": "orange", "code": "    inline.append(effectextent)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "533", "colour": "orange", "code": "    inline.append(docpr)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "534", "colour": "orange", "code": "    inline.append(framepr)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "535", "colour": "orange", "code": "    inline.append(graphic)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "536", "colour": "orange", "code": "    drawing = makeelement('drawing')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "537", "colour": "orange", "code": "    drawing.append(inline)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "538", "colour": "orange", "code": "    run = makeelement('r')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "539", "colour": "orange", "code": "    run.append(drawing)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "540", "colour": "green", "code": "    paragraph = makeelement('p')\n", "error": "W", "author": "tom@organisms.be"}, {"index": "541", "colour": "orange", "code": "    paragraph.append(run)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "542", "colour": "orange", "code": "    return relationshiplist, paragraph\n", "error": "none", "author": "tom@organisms.be"}, {"index": "543", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "544", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "545", "colour": "green", "code": "def search(document, search):\n", "error": "W", "author": "tom@organisms.be"}, {"index": "546", "colour": "orange", "code": "    '''Search a document for a regex, return success / fail result'''\n", "error": "none", "author": "tom@organisms.be"}, {"index": "547", "colour": "orange", "code": "    result = False\n", "error": "none", "author": "tom@organisms.be"}, {"index": "548", "colour": "orange", "code": "    searchre = re.compile(search)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "549", "colour": "orange", "code": "    for element in document.getiterator():\n", "error": "none", "author": "tom@organisms.be"}, {"index": "550", "colour": "orange", "code": "        if element.tag == '{%s}t' % nsprefixes['w']:  # t (text) elements\n", "error": "none", "author": "tom@organisms.be"}, {"index": "551", "colour": "orange", "code": "            if element.text:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "552", "colour": "orange", "code": "                if searchre.search(element.text):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "553", "colour": "orange", "code": "                    result = True\n", "error": "none", "author": "tom@organisms.be"}, {"index": "554", "colour": "orange", "code": "    return result\n", "error": "none", "author": "tom@organisms.be"}, {"index": "555", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "556", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "557", "colour": "green", "code": "def replace(document, search, replace):\n", "error": "W", "author": "tom@organisms.be"}, {"index": "558", "colour": "orange", "code": "    \"\"\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "559", "colour": "orange", "code": "    Replace all occurences of string with a different string, return updated\n", "error": "none", "author": "tom@organisms.be"}, {"index": "560", "colour": "orange", "code": "    document\n", "error": "none", "author": "tom@organisms.be"}, {"index": "561", "colour": "orange", "code": "    \"\"\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "562", "colour": "green", "code": "    newdocument = document\n", "error": "W", "author": "tom@organisms.be"}, {"index": "563", "colour": "orange", "code": "    searchre = re.compile(search)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "564", "colour": "orange", "code": "    for element in newdocument.getiterator():\n", "error": "none", "author": "tom@organisms.be"}, {"index": "565", "colour": "orange", "code": "        if element.tag == '{%s}t' % nsprefixes['w']:  # t (text) elements\n", "error": "none", "author": "tom@organisms.be"}, {"index": "566", "colour": "orange", "code": "            if element.text:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "567", "colour": "orange", "code": "                if searchre.search(element.text):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "568", "colour": "orange", "code": "                    element.text = re.sub(search, replace, element.text)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "569", "colour": "orange", "code": "    return newdocument\n", "error": "none", "author": "tom@organisms.be"}, {"index": "570", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "571", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "572", "colour": "orange", "code": "def clean(document):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "573", "colour": "orange", "code": "    \"\"\" Perform misc cleaning operations on documents.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "574", "colour": "orange", "code": "        Returns cleaned document.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "575", "colour": "orange", "code": "    \"\"\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "576", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "577", "colour": "green", "code": "    newdocument = document\n", "error": "W", "author": "tom@organisms.be"}, {"index": "578", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "579", "colour": "orange", "code": "    # Clean empty text and r tags\n", "error": "none", "author": "tom@organisms.be"}, {"index": "580", "colour": "orange", "code": "    for t in ('t', 'r'):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "581", "colour": "orange", "code": "        rmlist = []\n", "error": "none", "author": "tom@organisms.be"}, {"index": "582", "colour": "orange", "code": "        for element in newdocument.getiterator():\n", "error": "none", "author": "tom@organisms.be"}, {"index": "583", "colour": "orange", "code": "            if element.tag == '{%s}%s' % (nsprefixes['w'], t):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "584", "colour": "orange", "code": "                if not element.text and not len(element):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "585", "colour": "orange", "code": "                    rmlist.append(element)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "586", "colour": "orange", "code": "        for element in rmlist:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "587", "colour": "orange", "code": "            element.getparent().remove(element)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "588", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "589", "colour": "orange", "code": "    return newdocument\n", "error": "none", "author": "tom@organisms.be"}, {"index": "590", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "591", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "592", "colour": "orange", "code": "def findTypeParent(element, tag):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "593", "colour": "orange", "code": "    \"\"\" Finds fist parent of element of the given type\n", "error": "none", "author": "tom@organisms.be"}, {"index": "594", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "595", "colour": "orange", "code": "    @param object element: etree element\n", "error": "none", "author": "tom@organisms.be"}, {"index": "596", "colour": "orange", "code": "    @param string the tag parent to search for\n", "error": "none", "author": "tom@organisms.be"}, {"index": "597", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "598", "colour": "orange", "code": "    @return object element: the found parent or None when not found\n", "error": "none", "author": "tom@organisms.be"}, {"index": "599", "colour": "orange", "code": "    \"\"\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "600", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "601", "colour": "orange", "code": "    p = element\n", "error": "none", "author": "tom@organisms.be"}, {"index": "602", "colour": "orange", "code": "    while True:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "603", "colour": "orange", "code": "        p = p.getparent()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "604", "colour": "orange", "code": "        if p.tag == tag:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "605", "colour": "orange", "code": "            return p\n", "error": "none", "author": "tom@organisms.be"}, {"index": "606", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "607", "colour": "orange", "code": "    # Not found\n", "error": "none", "author": "tom@organisms.be"}, {"index": "608", "colour": "orange", "code": "    return None\n", "error": "none", "author": "tom@organisms.be"}, {"index": "609", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "610", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "611", "colour": "green", "code": "def AdvSearch(document, search, bs=3):\n", "error": "W", "author": "tom@organisms.be"}, {"index": "612", "colour": "orange", "code": "    '''Return set of all regex matches\n", "error": "none", "author": "tom@organisms.be"}, {"index": "613", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "614", "colour": "orange", "code": "    This is an advanced version of python-docx.search() that takes into\n", "error": "none", "author": "tom@organisms.be"}, {"index": "615", "colour": "orange", "code": "    account blocks of <bs> elements at a time.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "616", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "617", "colour": "orange", "code": "    What it does:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "618", "colour": "orange", "code": "    It searches the entire document body for text blocks.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "619", "colour": "orange", "code": "    Since the text to search could be spawned across multiple text blocks,\n", "error": "none", "author": "tom@organisms.be"}, {"index": "620", "colour": "orange", "code": "    we need to adopt some sort of algorithm to handle this situation.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "621", "colour": "orange", "code": "    The smaller matching group of blocks (up to bs) is then adopted.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "622", "colour": "orange", "code": "    If the matching group has more than one block, blocks other than first\n", "error": "none", "author": "tom@organisms.be"}, {"index": "623", "colour": "orange", "code": "    are cleared and all the replacement text is put on first block.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "624", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "625", "colour": "orange", "code": "    Examples:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "626", "colour": "orange", "code": "    original text blocks : [ 'Hel', 'lo,', ' world!' ]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "627", "colour": "orange", "code": "    search : 'Hello,'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "628", "colour": "orange", "code": "    output blocks : [ 'Hello,' ]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "629", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "630", "colour": "orange", "code": "    original text blocks : [ 'Hel', 'lo', ' __', 'name', '__!' ]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "631", "colour": "orange", "code": "    search : '(__[a-z]+__)'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "632", "colour": "orange", "code": "    output blocks : [ '__name__' ]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "633", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "634", "colour": "orange", "code": "    @param instance  document: The original document\n", "error": "none", "author": "tom@organisms.be"}, {"index": "635", "colour": "orange", "code": "    @param str       search: The text to search for (regexp)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "636", "colour": "orange", "code": "                          append, or a list of etree elements\n", "error": "none", "author": "tom@organisms.be"}, {"index": "637", "colour": "orange", "code": "    @param int       bs: See above\n", "error": "none", "author": "tom@organisms.be"}, {"index": "638", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "639", "colour": "orange", "code": "    @return set      All occurences of search string\n", "error": "none", "author": "tom@organisms.be"}, {"index": "640", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "641", "colour": "orange", "code": "    '''\n", "error": "none", "author": "tom@organisms.be"}, {"index": "642", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "643", "colour": "orange", "code": "    # Compile the search regexp\n", "error": "none", "author": "tom@organisms.be"}, {"index": "644", "colour": "orange", "code": "    searchre = re.compile(search)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "645", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "646", "colour": "orange", "code": "    matches = []\n", "error": "none", "author": "tom@organisms.be"}, {"index": "647", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "648", "colour": "orange", "code": "    # Will match against searchels. Searchels is a list that contains last\n", "error": "none", "author": "tom@organisms.be"}, {"index": "649", "colour": "orange", "code": "    # n text elements found in the document. 1 < n < bs\n", "error": "none", "author": "tom@organisms.be"}, {"index": "650", "colour": "orange", "code": "    searchels = []\n", "error": "none", "author": "tom@organisms.be"}, {"index": "651", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "652", "colour": "orange", "code": "    for element in document.getiterator():\n", "error": "none", "author": "tom@organisms.be"}, {"index": "653", "colour": "orange", "code": "        if element.tag == '{%s}t' % nsprefixes['w']:  # t (text) elements\n", "error": "none", "author": "tom@organisms.be"}, {"index": "654", "colour": "orange", "code": "            if element.text:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "655", "colour": "orange", "code": "                # Add this element to searchels\n", "error": "none", "author": "tom@organisms.be"}, {"index": "656", "colour": "orange", "code": "                searchels.append(element)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "657", "colour": "orange", "code": "                if len(searchels) > bs:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "658", "colour": "orange", "code": "                    # Is searchels is too long, remove first elements\n", "error": "none", "author": "tom@organisms.be"}, {"index": "659", "colour": "orange", "code": "                    searchels.pop(0)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "660", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "661", "colour": "orange", "code": "                # Search all combinations, of searchels, starting from\n", "error": "none", "author": "tom@organisms.be"}, {"index": "662", "colour": "orange", "code": "                # smaller up to bigger ones\n", "error": "none", "author": "tom@organisms.be"}, {"index": "663", "colour": "orange", "code": "                # l = search lenght\n", "error": "none", "author": "tom@organisms.be"}, {"index": "664", "colour": "orange", "code": "                # s = search start\n", "error": "none", "author": "tom@organisms.be"}, {"index": "665", "colour": "orange", "code": "                # e = element IDs to merge\n", "error": "none", "author": "tom@organisms.be"}, {"index": "666", "colour": "orange", "code": "                found = False\n", "error": "none", "author": "tom@organisms.be"}, {"index": "667", "colour": "orange", "code": "                for l in range(1, len(searchels)+1):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "668", "colour": "orange", "code": "                    if found:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "669", "colour": "orange", "code": "                        break\n", "error": "none", "author": "tom@organisms.be"}, {"index": "670", "colour": "orange", "code": "                    for s in range(len(searchels)):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "671", "colour": "orange", "code": "                        if found:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "672", "colour": "orange", "code": "                            break\n", "error": "none", "author": "tom@organisms.be"}, {"index": "673", "colour": "orange", "code": "                        if s+l <= len(searchels):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "674", "colour": "orange", "code": "                            e = range(s, s+l)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "675", "colour": "orange", "code": "                            txtsearch = ''\n", "error": "none", "author": "tom@organisms.be"}, {"index": "676", "colour": "orange", "code": "                            for k in e:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "677", "colour": "orange", "code": "                                txtsearch += searchels[k].text\n", "error": "none", "author": "tom@organisms.be"}, {"index": "678", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "679", "colour": "orange", "code": "                            # Searcs for the text in the whole txtsearch\n", "error": "none", "author": "tom@organisms.be"}, {"index": "680", "colour": "orange", "code": "                            match = searchre.search(txtsearch)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "681", "colour": "orange", "code": "                            if match:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "682", "colour": "orange", "code": "                                matches.append(match.group())\n", "error": "none", "author": "tom@organisms.be"}, {"index": "683", "colour": "orange", "code": "                                found = True\n", "error": "none", "author": "tom@organisms.be"}, {"index": "684", "colour": "orange", "code": "    return set(matches)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "685", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "686", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "687", "colour": "blue", "code": "def advReplace(document, search, replace, bs=3):\n", "error": "R", "author": "tom@organisms.be"}, {"index": "688", "colour": "orange", "code": "    \"\"\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "689", "colour": "orange", "code": "    Replace all occurences of string with a different string, return updated\n", "error": "none", "author": "tom@organisms.be"}, {"index": "690", "colour": "orange", "code": "    document\n", "error": "none", "author": "tom@organisms.be"}, {"index": "691", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "692", "colour": "orange", "code": "    This is a modified version of python-docx.replace() that takes into\n", "error": "none", "author": "tom@organisms.be"}, {"index": "693", "colour": "orange", "code": "    account blocks of <bs> elements at a time. The replace element can also\n", "error": "none", "author": "tom@organisms.be"}, {"index": "694", "colour": "orange", "code": "    be a string or an xml etree element.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "695", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "696", "colour": "orange", "code": "    What it does:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "697", "colour": "orange", "code": "    It searches the entire document body for text blocks.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "698", "colour": "orange", "code": "    Then scan thos text blocks for replace.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "699", "colour": "orange", "code": "    Since the text to search could be spawned across multiple text blocks,\n", "error": "none", "author": "tom@organisms.be"}, {"index": "700", "colour": "orange", "code": "    we need to adopt some sort of algorithm to handle this situation.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "701", "colour": "orange", "code": "    The smaller matching group of blocks (up to bs) is then adopted.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "702", "colour": "orange", "code": "    If the matching group has more than one block, blocks other than first\n", "error": "none", "author": "tom@organisms.be"}, {"index": "703", "colour": "orange", "code": "    are cleared and all the replacement text is put on first block.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "704", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "705", "colour": "orange", "code": "    Examples:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "706", "colour": "orange", "code": "    original text blocks : [ 'Hel', 'lo,', ' world!' ]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "707", "colour": "orange", "code": "    search / replace: 'Hello,' / 'Hi!'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "708", "colour": "orange", "code": "    output blocks : [ 'Hi!', '', ' world!' ]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "709", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "710", "colour": "orange", "code": "    original text blocks : [ 'Hel', 'lo,', ' world!' ]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "711", "colour": "orange", "code": "    search / replace: 'Hello, world' / 'Hi!'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "712", "colour": "orange", "code": "    output blocks : [ 'Hi!!', '', '' ]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "713", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "714", "colour": "orange", "code": "    original text blocks : [ 'Hel', 'lo,', ' world!' ]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "715", "colour": "orange", "code": "    search / replace: 'Hel' / 'Hal'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "716", "colour": "orange", "code": "    output blocks : [ 'Hal', 'lo,', ' world!' ]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "717", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "718", "colour": "orange", "code": "    @param instance  document: The original document\n", "error": "none", "author": "tom@organisms.be"}, {"index": "719", "colour": "orange", "code": "    @param str       search: The text to search for (regexp)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "720", "colour": "orange", "code": "    @param mixed     replace: The replacement text or lxml.etree element to\n", "error": "none", "author": "tom@organisms.be"}, {"index": "721", "colour": "orange", "code": "                         append, or a list of etree elements\n", "error": "none", "author": "tom@organisms.be"}, {"index": "722", "colour": "orange", "code": "    @param int       bs: See above\n", "error": "none", "author": "tom@organisms.be"}, {"index": "723", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "724", "colour": "orange", "code": "    @return instance The document with replacement applied\n", "error": "none", "author": "tom@organisms.be"}, {"index": "725", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "726", "colour": "orange", "code": "    \"\"\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "727", "colour": "orange", "code": "    # Enables debug output\n", "error": "none", "author": "tom@organisms.be"}, {"index": "728", "colour": "orange", "code": "    DEBUG = False\n", "error": "none", "author": "tom@organisms.be"}, {"index": "729", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "730", "colour": "green", "code": "    newdocument = document\n", "error": "W", "author": "tom@organisms.be"}, {"index": "731", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "732", "colour": "orange", "code": "    # Compile the search regexp\n", "error": "none", "author": "tom@organisms.be"}, {"index": "733", "colour": "orange", "code": "    searchre = re.compile(search)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "734", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "735", "colour": "orange", "code": "    # Will match against searchels. Searchels is a list that contains last\n", "error": "none", "author": "tom@organisms.be"}, {"index": "736", "colour": "orange", "code": "    # n text elements found in the document. 1 < n < bs\n", "error": "none", "author": "tom@organisms.be"}, {"index": "737", "colour": "orange", "code": "    searchels = []\n", "error": "none", "author": "tom@organisms.be"}, {"index": "738", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "739", "colour": "orange", "code": "    for element in newdocument.getiterator():\n", "error": "none", "author": "tom@organisms.be"}, {"index": "740", "colour": "orange", "code": "        if element.tag == '{%s}t' % nsprefixes['w']:  # t (text) elements\n", "error": "none", "author": "tom@organisms.be"}, {"index": "741", "colour": "orange", "code": "            if element.text:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "742", "colour": "orange", "code": "                # Add this element to searchels\n", "error": "none", "author": "tom@organisms.be"}, {"index": "743", "colour": "orange", "code": "                searchels.append(element)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "744", "colour": "orange", "code": "                if len(searchels) > bs:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "745", "colour": "orange", "code": "                    # Is searchels is too long, remove first elements\n", "error": "none", "author": "tom@organisms.be"}, {"index": "746", "colour": "orange", "code": "                    searchels.pop(0)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "747", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "748", "colour": "orange", "code": "                # Search all combinations, of searchels, starting from\n", "error": "none", "author": "tom@organisms.be"}, {"index": "749", "colour": "orange", "code": "                # smaller up to bigger ones\n", "error": "none", "author": "tom@organisms.be"}, {"index": "750", "colour": "orange", "code": "                # l = search lenght\n", "error": "none", "author": "tom@organisms.be"}, {"index": "751", "colour": "orange", "code": "                # s = search start\n", "error": "none", "author": "tom@organisms.be"}, {"index": "752", "colour": "orange", "code": "                # e = element IDs to merge\n", "error": "none", "author": "tom@organisms.be"}, {"index": "753", "colour": "orange", "code": "                found = False\n", "error": "none", "author": "tom@organisms.be"}, {"index": "754", "colour": "orange", "code": "                for l in range(1, len(searchels)+1):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "755", "colour": "orange", "code": "                    if found:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "756", "colour": "orange", "code": "                        break\n", "error": "none", "author": "tom@organisms.be"}, {"index": "757", "colour": "orange", "code": "                    #print \"slen:\", l\n", "error": "none", "author": "tom@organisms.be"}, {"index": "758", "colour": "orange", "code": "                    for s in range(len(searchels)):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "759", "colour": "orange", "code": "                        if found:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "760", "colour": "orange", "code": "                            break\n", "error": "none", "author": "tom@organisms.be"}, {"index": "761", "colour": "orange", "code": "                        if s+l <= len(searchels):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "762", "colour": "orange", "code": "                            e = range(s, s+l)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "763", "colour": "orange", "code": "                            #print \"elems:\", e\n", "error": "none", "author": "tom@organisms.be"}, {"index": "764", "colour": "orange", "code": "                            txtsearch = ''\n", "error": "none", "author": "tom@organisms.be"}, {"index": "765", "colour": "orange", "code": "                            for k in e:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "766", "colour": "orange", "code": "                                txtsearch += searchels[k].text\n", "error": "none", "author": "tom@organisms.be"}, {"index": "767", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "768", "colour": "orange", "code": "                            # Searcs for the text in the whole txtsearch\n", "error": "none", "author": "tom@organisms.be"}, {"index": "769", "colour": "orange", "code": "                            match = searchre.search(txtsearch)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "770", "colour": "orange", "code": "                            if match:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "771", "colour": "orange", "code": "                                found = True\n", "error": "none", "author": "tom@organisms.be"}, {"index": "772", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "773", "colour": "orange", "code": "                                # I've found something :)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "774", "colour": "orange", "code": "                                if DEBUG:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "775", "colour": "orange", "code": "                                    log.debug(\"Found element!\")\n", "error": "none", "author": "tom@organisms.be"}, {"index": "776", "colour": "orange", "code": "                                    log.debug(\"Search regexp: %s\",\n", "error": "none", "author": "tom@organisms.be"}, {"index": "777", "colour": "orange", "code": "                                              searchre.pattern)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "778", "colour": "orange", "code": "                                    log.debug(\"Requested replacement: %s\",\n", "error": "none", "author": "tom@organisms.be"}, {"index": "779", "colour": "orange", "code": "                                              replace)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "780", "colour": "orange", "code": "                                    log.debug(\"Matched text: %s\", txtsearch)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "781", "colour": "orange", "code": "                                    log.debug(\"Matched text (splitted): %s\",\n", "error": "none", "author": "tom@organisms.be"}, {"index": "782", "colour": "green", "code": "                                              map(lambda i: i.text, searchels))\n", "error": "W", "author": "tom@organisms.be"}, {"index": "783", "colour": "orange", "code": "                                    log.debug(\"Matched at position: %s\",\n", "error": "none", "author": "tom@organisms.be"}, {"index": "784", "colour": "orange", "code": "                                              match.start())\n", "error": "none", "author": "tom@organisms.be"}, {"index": "785", "colour": "orange", "code": "                                    log.debug(\"matched in elements: %s\", e)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "786", "colour": "green", "code": "                                    if isinstance(replace, etree._Element):\n", "error": "W", "author": "tom@organisms.be"}, {"index": "787", "colour": "orange", "code": "                                        log.debug(\"Will replace with XML CODE\")\n", "error": "none", "author": "tom@organisms.be"}, {"index": "788", "colour": "orange", "code": "                                    elif isinstance(replace(list, tuple)):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "789", "colour": "orange", "code": "                                        log.debug(\"Will replace with LIST OF\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "790", "colour": "orange", "code": "                                                  \" ELEMENTS\")\n", "error": "none", "author": "tom@organisms.be"}, {"index": "791", "colour": "orange", "code": "                                    else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "792", "colour": "red", "code": "                                        log.debug(\"Will replace with:\",\n", "error": "E", "author": "tom@organisms.be"}, {"index": "793", "colour": "orange", "code": "                                                  re.sub(search, replace,\n", "error": "none", "author": "tom@organisms.be"}, {"index": "794", "colour": "orange", "code": "                                                         txtsearch))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "795", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "796", "colour": "orange", "code": "                                curlen = 0\n", "error": "none", "author": "tom@organisms.be"}, {"index": "797", "colour": "orange", "code": "                                replaced = False\n", "error": "none", "author": "tom@organisms.be"}, {"index": "798", "colour": "orange", "code": "                                for i in e:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "799", "colour": "orange", "code": "                                    curlen += len(searchels[i].text)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "800", "colour": "orange", "code": "                                    if curlen > match.start() and not replaced:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "801", "colour": "orange", "code": "                                        # The match occurred in THIS element.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "802", "colour": "orange", "code": "                                        # Puth in the whole replaced text\n", "error": "none", "author": "tom@organisms.be"}, {"index": "803", "colour": "green", "code": "                                        if isinstance(replace, etree._Element):\n", "error": "W", "author": "tom@organisms.be"}, {"index": "804", "colour": "orange", "code": "                                            # Convert to a list and process\n", "error": "none", "author": "tom@organisms.be"}, {"index": "805", "colour": "orange", "code": "                                            # it later\n", "error": "none", "author": "tom@organisms.be"}, {"index": "806", "colour": "orange", "code": "                                            replace = [replace]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "807", "colour": "orange", "code": "                                        if isinstance(replace, (list, tuple)):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "808", "colour": "orange", "code": "                                            # I'm replacing with a list of\n", "error": "none", "author": "tom@organisms.be"}, {"index": "809", "colour": "orange", "code": "                                            # etree elements\n", "error": "none", "author": "tom@organisms.be"}, {"index": "810", "colour": "orange", "code": "                                            # clear the text in the tag and\n", "error": "none", "author": "tom@organisms.be"}, {"index": "811", "colour": "orange", "code": "                                            # append the element after the\n", "error": "none", "author": "tom@organisms.be"}, {"index": "812", "colour": "orange", "code": "                                            # parent paragraph\n", "error": "none", "author": "tom@organisms.be"}, {"index": "813", "colour": "orange", "code": "                                            # (because t elements cannot have\n", "error": "none", "author": "tom@organisms.be"}, {"index": "814", "colour": "orange", "code": "                                            # childs)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "815", "colour": "orange", "code": "                                            p = findTypeParent(\n", "error": "none", "author": "tom@organisms.be"}, {"index": "816", "colour": "orange", "code": "                                                searchels[i],\n", "error": "none", "author": "tom@organisms.be"}, {"index": "817", "colour": "orange", "code": "                                                '{%s}p' % nsprefixes['w'])\n", "error": "none", "author": "tom@organisms.be"}, {"index": "818", "colour": "orange", "code": "                                            searchels[i].text = re.sub(\n", "error": "none", "author": "tom@organisms.be"}, {"index": "819", "colour": "orange", "code": "                                                search, '', txtsearch)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "820", "colour": "orange", "code": "                                            insindex = p.getparent().index(p)+1\n", "error": "none", "author": "tom@organisms.be"}, {"index": "821", "colour": "orange", "code": "                                            for r in replace:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "822", "colour": "orange", "code": "                                                p.getparent().insert(\n", "error": "none", "author": "tom@organisms.be"}, {"index": "823", "colour": "orange", "code": "                                                    insindex, r)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "824", "colour": "orange", "code": "                                                insindex += 1\n", "error": "none", "author": "tom@organisms.be"}, {"index": "825", "colour": "orange", "code": "                                        else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "826", "colour": "orange", "code": "                                            # Replacing with pure text\n", "error": "none", "author": "tom@organisms.be"}, {"index": "827", "colour": "orange", "code": "                                            searchels[i].text = re.sub(\n", "error": "none", "author": "tom@organisms.be"}, {"index": "828", "colour": "orange", "code": "                                                search, replace, txtsearch)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "829", "colour": "orange", "code": "                                        replaced = True\n", "error": "none", "author": "tom@organisms.be"}, {"index": "830", "colour": "orange", "code": "                                        log.debug(\n", "error": "none", "author": "tom@organisms.be"}, {"index": "831", "colour": "orange", "code": "                                            \"Replacing in element #: %s\", i)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "832", "colour": "orange", "code": "                                    else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "833", "colour": "orange", "code": "                                        # Clears the other text elements\n", "error": "none", "author": "tom@organisms.be"}, {"index": "834", "colour": "orange", "code": "                                        searchels[i].text = ''\n", "error": "none", "author": "tom@organisms.be"}, {"index": "835", "colour": "orange", "code": "    return newdocument\n", "error": "none", "author": "tom@organisms.be"}, {"index": "836", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "837", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "838", "colour": "orange", "code": "def getdocumenttext(document):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "839", "colour": "orange", "code": "    '''Return the raw text of a document, as a list of paragraphs.'''\n", "error": "none", "author": "tom@organisms.be"}, {"index": "840", "colour": "orange", "code": "    paratextlist = []\n", "error": "none", "author": "tom@organisms.be"}, {"index": "841", "colour": "orange", "code": "    # Compile a list of all paragraph (p) elements\n", "error": "none", "author": "tom@organisms.be"}, {"index": "842", "colour": "orange", "code": "    paralist = []\n", "error": "none", "author": "tom@organisms.be"}, {"index": "843", "colour": "orange", "code": "    for element in document.getiterator():\n", "error": "none", "author": "tom@organisms.be"}, {"index": "844", "colour": "orange", "code": "        # Find p (paragraph) elements\n", "error": "none", "author": "tom@organisms.be"}, {"index": "845", "colour": "orange", "code": "        if element.tag == '{'+nsprefixes['w']+'}p':\n", "error": "none", "author": "tom@organisms.be"}, {"index": "846", "colour": "orange", "code": "            paralist.append(element)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "847", "colour": "orange", "code": "    # Since a single sentence might be spread over multiple text elements,\n", "error": "none", "author": "tom@organisms.be"}, {"index": "848", "colour": "orange", "code": "    # iterate through each paragraph, appending all text (t) children to that\n", "error": "none", "author": "tom@organisms.be"}, {"index": "849", "colour": "orange", "code": "    # paragraphs text.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "850", "colour": "orange", "code": "    for para in paralist:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "851", "colour": "orange", "code": "        paratext = u''\n", "error": "none", "author": "tom@organisms.be"}, {"index": "852", "colour": "orange", "code": "        # Loop through each paragraph\n", "error": "none", "author": "tom@organisms.be"}, {"index": "853", "colour": "orange", "code": "        for element in para.getiterator():\n", "error": "none", "author": "tom@organisms.be"}, {"index": "854", "colour": "orange", "code": "            # Find t (text) elements\n", "error": "none", "author": "tom@organisms.be"}, {"index": "855", "colour": "orange", "code": "            if element.tag == '{'+nsprefixes['w']+'}t':\n", "error": "none", "author": "tom@organisms.be"}, {"index": "856", "colour": "orange", "code": "                if element.text:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "857", "colour": "orange", "code": "                    paratext = paratext+element.text\n", "error": "none", "author": "tom@organisms.be"}, {"index": "858", "colour": "orange", "code": "            elif element.tag == '{'+nsprefixes['w']+'}tab':\n", "error": "none", "author": "tom@organisms.be"}, {"index": "859", "colour": "orange", "code": "                paratext = paratext + '\\t'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "860", "colour": "orange", "code": "        # Add our completed paragraph text to the list of paragraph text\n", "error": "none", "author": "tom@organisms.be"}, {"index": "861", "colour": "orange", "code": "        if not len(paratext) == 0:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "862", "colour": "orange", "code": "            paratextlist.append(paratext)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "863", "colour": "orange", "code": "    return paratextlist\n", "error": "none", "author": "tom@organisms.be"}, {"index": "864", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "865", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "866", "colour": "orange", "code": "def coreproperties(title, subject, creator, keywords, lastmodifiedby=None):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "867", "colour": "orange", "code": "    \"\"\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "868", "colour": "orange", "code": "    Create core properties (common document properties referred to in the\n", "error": "none", "author": "tom@organisms.be"}, {"index": "869", "colour": "orange", "code": "    'Dublin Core' specification). See appproperties() for other stuff.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "870", "colour": "orange", "code": "    \"\"\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "871", "colour": "orange", "code": "    coreprops = makeelement('coreProperties', nsprefix='cp')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "872", "colour": "orange", "code": "    coreprops.append(makeelement('title', tagtext=title, nsprefix='dc'))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "873", "colour": "orange", "code": "    coreprops.append(makeelement('subject', tagtext=subject, nsprefix='dc'))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "874", "colour": "orange", "code": "    coreprops.append(makeelement('creator', tagtext=creator, nsprefix='dc'))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "875", "colour": "orange", "code": "    coreprops.append(makeelement('keywords', tagtext=','.join(keywords),\n", "error": "none", "author": "tom@organisms.be"}, {"index": "876", "colour": "orange", "code": "                     nsprefix='cp'))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "877", "colour": "orange", "code": "    if not lastmodifiedby:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "878", "colour": "orange", "code": "        lastmodifiedby = creator\n", "error": "none", "author": "tom@organisms.be"}, {"index": "879", "colour": "orange", "code": "    coreprops.append(makeelement('lastModifiedBy', tagtext=lastmodifiedby,\n", "error": "none", "author": "tom@organisms.be"}, {"index": "880", "colour": "orange", "code": "                     nsprefix='cp'))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "881", "colour": "orange", "code": "    coreprops.append(makeelement('revision', tagtext='1', nsprefix='cp'))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "882", "colour": "orange", "code": "    coreprops.append(\n", "error": "none", "author": "tom@organisms.be"}, {"index": "883", "colour": "orange", "code": "        makeelement('category', tagtext='Examples', nsprefix='cp'))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "884", "colour": "orange", "code": "    coreprops.append(\n", "error": "none", "author": "tom@organisms.be"}, {"index": "885", "colour": "orange", "code": "        makeelement('description', tagtext='Examples', nsprefix='dc'))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "886", "colour": "orange", "code": "    currenttime = time.strftime('%Y-%m-%dT%H:%M:%SZ')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "887", "colour": "orange", "code": "    # Document creation and modify times\n", "error": "none", "author": "tom@organisms.be"}, {"index": "888", "colour": "orange", "code": "    # Prob here: we have an attribute who name uses one namespace, and that\n", "error": "none", "author": "tom@organisms.be"}, {"index": "889", "colour": "orange", "code": "    # attribute's value uses another namespace.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "890", "colour": "orange", "code": "    # We're creating the element from a string as a workaround...\n", "error": "none", "author": "tom@organisms.be"}, {"index": "891", "colour": "orange", "code": "    for doctime in ['created', 'modified']:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "892", "colour": "orange", "code": "        elm_str = (\n", "error": "none", "author": "tom@organisms.be"}, {"index": "893", "colour": "orange", "code": "            '<dcterms:%s xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instanc'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "894", "colour": "orange", "code": "            'e\" xmlns:dcterms=\"http://purl.org/dc/terms/\" xsi:type=\"dcterms:'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "895", "colour": "orange", "code": "            'W3CDTF\">%s</dcterms:%s>'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "896", "colour": "orange", "code": "        ) % (doctime, currenttime, doctime)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "897", "colour": "orange", "code": "        coreprops.append(etree.fromstring(elm_str))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "898", "colour": "orange", "code": "    return coreprops\n", "error": "none", "author": "tom@organisms.be"}, {"index": "899", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "900", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "901", "colour": "orange", "code": "def appproperties():\n", "error": "none", "author": "tom@organisms.be"}, {"index": "902", "colour": "orange", "code": "    \"\"\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "903", "colour": "orange", "code": "    Create app-specific properties. See docproperties() for more common\n", "error": "none", "author": "tom@organisms.be"}, {"index": "904", "colour": "orange", "code": "    document properties.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "905", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "906", "colour": "orange", "code": "    \"\"\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "907", "colour": "orange", "code": "    appprops = makeelement('Properties', nsprefix='ep')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "908", "colour": "orange", "code": "    appprops = etree.fromstring(\n", "error": "none", "author": "tom@organisms.be"}, {"index": "909", "colour": "orange", "code": "        '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><Properties x'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "910", "colour": "orange", "code": "        'mlns=\"http://schemas.openxmlformats.org/officeDocument/2006/extended'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "911", "colour": "orange", "code": "        '-properties\" xmlns:vt=\"http://schemas.openxmlformats.org/officeDocum'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "912", "colour": "orange", "code": "        'ent/2006/docPropsVTypes\"></Properties>')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "913", "colour": "orange", "code": "    props =\\\n", "error": "none", "author": "tom@organisms.be"}, {"index": "914", "colour": "orange", "code": "        {'Template':             'Normal.dotm',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "915", "colour": "orange", "code": "         'TotalTime':            '6',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "916", "colour": "orange", "code": "         'Pages':                '1',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "917", "colour": "orange", "code": "         'Words':                '83',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "918", "colour": "orange", "code": "         'Characters':           '475',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "919", "colour": "orange", "code": "         'Application':          'Microsoft Word 12.0.0',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "920", "colour": "orange", "code": "         'DocSecurity':          '0',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "921", "colour": "orange", "code": "         'Lines':                '12',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "922", "colour": "orange", "code": "         'Paragraphs':           '8',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "923", "colour": "orange", "code": "         'ScaleCrop':            'false',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "924", "colour": "orange", "code": "         'LinksUpToDate':        'false',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "925", "colour": "orange", "code": "         'CharactersWithSpaces': '583',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "926", "colour": "orange", "code": "         'SharedDoc':            'false',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "927", "colour": "orange", "code": "         'HyperlinksChanged':    'false',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "928", "colour": "orange", "code": "         'AppVersion':           '12.0000'}\n", "error": "none", "author": "tom@organisms.be"}, {"index": "929", "colour": "orange", "code": "    for prop in props:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "930", "colour": "orange", "code": "        appprops.append(makeelement(prop, tagtext=props[prop], nsprefix=None))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "931", "colour": "orange", "code": "    return appprops\n", "error": "none", "author": "tom@organisms.be"}, {"index": "932", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "933", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "934", "colour": "orange", "code": "def websettings():\n", "error": "none", "author": "tom@organisms.be"}, {"index": "935", "colour": "orange", "code": "    '''Generate websettings'''\n", "error": "none", "author": "tom@organisms.be"}, {"index": "936", "colour": "orange", "code": "    web = makeelement('webSettings')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "937", "colour": "orange", "code": "    web.append(makeelement('allowPNG'))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "938", "colour": "orange", "code": "    web.append(makeelement('doNotSaveAsSingleFile'))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "939", "colour": "orange", "code": "    return web\n", "error": "none", "author": "tom@organisms.be"}, {"index": "940", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "941", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "942", "colour": "orange", "code": "def relationshiplist():\n", "error": "none", "author": "tom@organisms.be"}, {"index": "943", "colour": "green", "code": "    relationshiplist =\\\n", "error": "W", "author": "tom@organisms.be"}, {"index": "944", "colour": "orange", "code": "        [['http://schemas.openxmlformats.org/officeDocument/2006/'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "945", "colour": "orange", "code": "          'relationships/numbering', 'numbering.xml'],\n", "error": "none", "author": "tom@organisms.be"}, {"index": "946", "colour": "orange", "code": "         ['http://schemas.openxmlformats.org/officeDocument/2006/'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "947", "colour": "orange", "code": "          'relationships/styles', 'styles.xml'],\n", "error": "none", "author": "tom@organisms.be"}, {"index": "948", "colour": "orange", "code": "         ['http://schemas.openxmlformats.org/officeDocument/2006/'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "949", "colour": "orange", "code": "          'relationships/settings', 'settings.xml'],\n", "error": "none", "author": "tom@organisms.be"}, {"index": "950", "colour": "orange", "code": "         ['http://schemas.openxmlformats.org/officeDocument/2006/'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "951", "colour": "orange", "code": "          'relationships/webSettings', 'webSettings.xml'],\n", "error": "none", "author": "tom@organisms.be"}, {"index": "952", "colour": "orange", "code": "         ['http://schemas.openxmlformats.org/officeDocument/2006/'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "953", "colour": "orange", "code": "          'relationships/fontTable', 'fontTable.xml'],\n", "error": "none", "author": "tom@organisms.be"}, {"index": "954", "colour": "orange", "code": "         ['http://schemas.openxmlformats.org/officeDocument/2006/'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "955", "colour": "orange", "code": "          'relationships/theme', 'theme/theme1.xml']]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "956", "colour": "orange", "code": "    return relationshiplist\n", "error": "none", "author": "tom@organisms.be"}, {"index": "957", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "958", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "959", "colour": "green", "code": "def wordrelationships(relationshiplist):\n", "error": "W", "author": "tom@organisms.be"}, {"index": "960", "colour": "orange", "code": "    '''Generate a Word relationships file'''\n", "error": "none", "author": "tom@organisms.be"}, {"index": "961", "colour": "orange", "code": "    # Default list of relationships\n", "error": "none", "author": "tom@organisms.be"}, {"index": "962", "colour": "green", "code": "    # FIXME: using string hack instead of making element\n", "error": "W", "author": "tom@organisms.be"}, {"index": "963", "colour": "orange", "code": "    #relationships = makeelement('Relationships', nsprefix='pr')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "964", "colour": "orange", "code": "    relationships = etree.fromstring(\n", "error": "none", "author": "tom@organisms.be"}, {"index": "965", "colour": "orange", "code": "        '<Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "966", "colour": "orange", "code": "        '/relationships\"></Relationships>')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "967", "colour": "orange", "code": "    count = 0\n", "error": "none", "author": "tom@organisms.be"}, {"index": "968", "colour": "orange", "code": "    for relationship in relationshiplist:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "969", "colour": "orange", "code": "        # Relationship IDs (rId) start at 1.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "970", "colour": "orange", "code": "        rel_elm = makeelement('Relationship', nsprefix=None,\n", "error": "none", "author": "tom@organisms.be"}, {"index": "971", "colour": "orange", "code": "                              attributes={'Id':     'rId'+str(count+1),\n", "error": "none", "author": "tom@organisms.be"}, {"index": "972", "colour": "orange", "code": "                                          'Type':   relationship[0],\n", "error": "none", "author": "tom@organisms.be"}, {"index": "973", "colour": "orange", "code": "                                          'Target': relationship[1]}\n", "error": "none", "author": "tom@organisms.be"}, {"index": "974", "colour": "orange", "code": "                              )\n", "error": "none", "author": "tom@organisms.be"}, {"index": "975", "colour": "orange", "code": "        relationships.append(rel_elm)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "976", "colour": "orange", "code": "        count += 1\n", "error": "none", "author": "tom@organisms.be"}, {"index": "977", "colour": "orange", "code": "    return relationships\n", "error": "none", "author": "tom@organisms.be"}, {"index": "978", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "979", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "980", "colour": "blue", "code": "def savedocx(document, coreprops, appprops, contenttypes, websettings,\n", "error": "R", "author": "tom@organisms.be"}, {"index": "981", "colour": "green", "code": "             wordrelationships, output):\n", "error": "W", "author": "tom@organisms.be"}, {"index": "982", "colour": "orange", "code": "    '''Save a modified document'''\n", "error": "none", "author": "tom@organisms.be"}, {"index": "983", "colour": "orange", "code": "    assert os.path.isdir(template_dir)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "984", "colour": "orange", "code": "    docxfile = zipfile.ZipFile(\n", "error": "none", "author": "tom@organisms.be"}, {"index": "985", "colour": "orange", "code": "        output, mode='w', compression=zipfile.ZIP_DEFLATED)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "986", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "987", "colour": "orange", "code": "    # Move to the template data path\n", "error": "none", "author": "tom@organisms.be"}, {"index": "988", "colour": "orange", "code": "    prev_dir = os.path.abspath('.')  # save previous working dir\n", "error": "none", "author": "tom@organisms.be"}, {"index": "989", "colour": "orange", "code": "    os.chdir(template_dir)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "990", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "991", "colour": "orange", "code": "    # Serialize our trees into out zip file\n", "error": "none", "author": "tom@organisms.be"}, {"index": "992", "colour": "orange", "code": "    treesandfiles = {document:     'word/document.xml',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "993", "colour": "orange", "code": "                     coreprops:    'docProps/core.xml',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "994", "colour": "orange", "code": "                     appprops:     'docProps/app.xml',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "995", "colour": "orange", "code": "                     contenttypes: '[Content_Types].xml',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "996", "colour": "orange", "code": "                     websettings:  'word/webSettings.xml',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "997", "colour": "orange", "code": "                     wordrelationships: 'word/_rels/document.xml.rels'}\n", "error": "none", "author": "tom@organisms.be"}, {"index": "998", "colour": "orange", "code": "    for tree in treesandfiles:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "999", "colour": "green", "code": "        log.info('Saving: %s' % treesandfiles[tree])\n", "error": "W", "author": "tom@organisms.be"}, {"index": "1000", "colour": "orange", "code": "        treestring = etree.tostring(tree, pretty_print=True)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "1001", "colour": "orange", "code": "        docxfile.writestr(treesandfiles[tree], treestring)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "1002", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "1003", "colour": "orange", "code": "    # Add & compress support files\n", "error": "none", "author": "tom@organisms.be"}, {"index": "1004", "colour": "orange", "code": "    files_to_ignore = ['.DS_Store']  # nuisance from some os's\n", "error": "none", "author": "tom@organisms.be"}, {"index": "1005", "colour": "green", "code": "    for dirpath, dirnames, filenames in os.walk('.'):\n", "error": "W", "author": "tom@organisms.be"}, {"index": "1006", "colour": "orange", "code": "        for filename in filenames:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "1007", "colour": "orange", "code": "            if filename in files_to_ignore:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "1008", "colour": "orange", "code": "                continue\n", "error": "none", "author": "tom@organisms.be"}, {"index": "1009", "colour": "orange", "code": "            templatefile = join(dirpath, filename)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "1010", "colour": "orange", "code": "            archivename = templatefile[2:]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "1011", "colour": "orange", "code": "            log.info('Saving: %s', archivename)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "1012", "colour": "orange", "code": "            docxfile.write(templatefile, archivename)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "1013", "colour": "orange", "code": "    log.info('Saved new file to: %r', output)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "1014", "colour": "orange", "code": "    docxfile.close()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "1015", "colour": "orange", "code": "    os.chdir(prev_dir)  # restore previous working dir\n", "error": "none", "author": "tom@organisms.be"}, {"index": "1016", "colour": "orange", "code": "    return\n", "error": "none", "author": "tom@organisms.be"}]}