{"path": "/home/asumal/git/cs410/pattern/pattern/server/cherrypy/cherrypy/_cpwsgi_server.py", "lines": [[{"error": "none", "line": "1", "code": "\"\"\"WSGI server interface (see PEP 333). This adds some CP-specific bits to\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "2", "code": "the framework-agnostic wsgiserver package.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "3", "code": "\"\"\"\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "4", "code": "import sys\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "5", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "6", "code": "import cherrypy\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "7", "code": "from cherrypy import wsgiserver\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "8", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "9", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "10", "code": "class CPWSGIServer(wsgiserver.CherryPyWSGIServer):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "11", "code": "    \"\"\"Wrapper for wsgiserver.CherryPyWSGIServer.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "12", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "13", "code": "    wsgiserver has been designed to not reference CherryPy in any way,\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "14", "code": "    so that it can be used in other frameworks and applications. Therefore,\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "15", "code": "    we wrap it here, so we can set our own mount points from cherrypy.tree\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "16", "code": "    and apply some attributes from config -> cherrypy.server -> wsgiserver.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "17", "code": "    \"\"\"\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "18", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "19", "code": "    def __init__(self, server_adapter=cherrypy.server):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "20", "code": "        self.server_adapter = server_adapter\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "21", "code": "        self.max_request_header_size = self.server_adapter.max_request_header_size or 0\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "22", "code": "        self.max_request_body_size = self.server_adapter.max_request_body_size or 0\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "23", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "24", "code": "        server_name = (self.server_adapter.socket_host or\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "25", "code": "                       self.server_adapter.socket_file or\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "26", "code": "                       None)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "27", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "28", "code": "        self.wsgi_version = self.server_adapter.wsgi_version\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "29", "code": "        s = wsgiserver.CherryPyWSGIServer\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "30", "code": "        s.__init__(self, server_adapter.bind_addr, cherrypy.tree,\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "31", "code": "                   self.server_adapter.thread_pool,\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "32", "code": "                   server_name,\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "33", "code": "                   max = self.server_adapter.thread_pool_max,\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "34", "code": "                   request_queue_size = self.server_adapter.socket_queue_size,\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "35", "code": "                   timeout = self.server_adapter.socket_timeout,\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "36", "code": "                   shutdown_timeout = self.server_adapter.shutdown_timeout,\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "37", "code": "                   )\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "38", "code": "        self.protocol = self.server_adapter.protocol_version\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "39", "code": "        self.nodelay = self.server_adapter.nodelay\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "40", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "41", "code": "        if sys.version_info >= (3, 0):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "42", "code": "            ssl_module = self.server_adapter.ssl_module or 'builtin'\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "43", "code": "        else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "44", "code": "            ssl_module = self.server_adapter.ssl_module or 'pyopenssl'\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "45", "code": "        if self.server_adapter.ssl_context:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "46", "code": "            adapter_class = wsgiserver.get_ssl_adapter_class(ssl_module)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "47", "code": "            self.ssl_adapter = adapter_class(\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "48", "code": "                self.server_adapter.ssl_certificate,\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "49", "code": "                self.server_adapter.ssl_private_key,\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "50", "code": "                self.server_adapter.ssl_certificate_chain)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "51", "code": "            self.ssl_adapter.context = self.server_adapter.ssl_context\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "52", "code": "        elif self.server_adapter.ssl_certificate:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "53", "code": "            adapter_class = wsgiserver.get_ssl_adapter_class(ssl_module)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "54", "code": "            self.ssl_adapter = adapter_class(\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "55", "code": "                self.server_adapter.ssl_certificate,\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "56", "code": "                self.server_adapter.ssl_private_key,\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "57", "code": "                self.server_adapter.ssl_certificate_chain)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "58", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "59", "code": "        self.stats['Enabled'] = getattr(self.server_adapter, 'statistics', False)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "60", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "61", "code": "    def error_log(self, msg=\"\", level=20, traceback=False):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "62", "code": "        cherrypy.engine.log(msg, level, traceback)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "63", "code": "\n", "colour": "black", "author": "tom@organisms.be"}]]}