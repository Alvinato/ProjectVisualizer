{"path": "/home/asumal/git/cs410/pattern/pattern/web/pdf/runlength.py", "lines": [[{"index": "1", "colour": "orange", "code": "#!/usr/bin/env python2\n", "error": "none", "author": "tom@organisms.be"}, {"index": "2", "colour": "orange", "code": "#\n", "error": "none", "author": "tom@organisms.be"}, {"index": "3", "colour": "orange", "code": "# RunLength decoder (Adobe version) implementation based on PDF Reference\n", "error": "none", "author": "tom@organisms.be"}, {"index": "4", "colour": "orange", "code": "# version 1.4 section 3.3.4.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "5", "colour": "orange", "code": "#\n", "error": "none", "author": "tom@organisms.be"}, {"index": "6", "colour": "orange", "code": "#  * public domain *\n", "error": "none", "author": "tom@organisms.be"}, {"index": "7", "colour": "orange", "code": "#\n", "error": "none", "author": "tom@organisms.be"}, {"index": "8", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "9", "colour": "green", "code": "import sys\n", "error": "W", "author": "tom@organisms.be"}, {"index": "10", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "11", "colour": "orange", "code": "def rldecode(data):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "12", "colour": "orange", "code": "    \"\"\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "13", "colour": "orange", "code": "    RunLength decoder (Adobe version) implementation based on PDF Reference\n", "error": "none", "author": "tom@organisms.be"}, {"index": "14", "colour": "orange", "code": "    version 1.4 section 3.3.4:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "15", "colour": "orange", "code": "        The RunLengthDecode filter decodes data that has been encoded in a\n", "error": "none", "author": "tom@organisms.be"}, {"index": "16", "colour": "orange", "code": "        simple byte-oriented format based on run length. The encoded data\n", "error": "none", "author": "tom@organisms.be"}, {"index": "17", "colour": "orange", "code": "        is a sequence of runs, where each run consists of a length byte\n", "error": "none", "author": "tom@organisms.be"}, {"index": "18", "colour": "orange", "code": "        followed by 1 to 128 bytes of data. If the length byte is in the\n", "error": "none", "author": "tom@organisms.be"}, {"index": "19", "colour": "orange", "code": "        range 0 to 127, the following length + 1 (1 to 128) bytes are\n", "error": "none", "author": "tom@organisms.be"}, {"index": "20", "colour": "orange", "code": "        copied literally during decompression. If length is in the range\n", "error": "none", "author": "tom@organisms.be"}, {"index": "21", "colour": "orange", "code": "        129 to 255, the following single byte is to be copied 257 - length\n", "error": "none", "author": "tom@organisms.be"}, {"index": "22", "colour": "orange", "code": "        (2 to 128) times during decompression. A length value of 128\n", "error": "none", "author": "tom@organisms.be"}, {"index": "23", "colour": "orange", "code": "        denotes EOD.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "24", "colour": "orange", "code": "    >>> s = \"\\x05123456\\xfa7\\x04abcde\\x80junk\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "25", "colour": "orange", "code": "    >>> rldecode(s)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "26", "colour": "orange", "code": "    '1234567777777abcde'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "27", "colour": "orange", "code": "    \"\"\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "28", "colour": "orange", "code": "    decoded = []\n", "error": "none", "author": "tom@organisms.be"}, {"index": "29", "colour": "orange", "code": "    i=0\n", "error": "none", "author": "tom@organisms.be"}, {"index": "30", "colour": "orange", "code": "    while i < len(data):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "31", "colour": "orange", "code": "        #print \"data[%d]=:%d:\" % (i,ord(data[i]))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "32", "colour": "orange", "code": "        length = ord(data[i])\n", "error": "none", "author": "tom@organisms.be"}, {"index": "33", "colour": "orange", "code": "        if length == 128:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "34", "colour": "orange", "code": "            break\n", "error": "none", "author": "tom@organisms.be"}, {"index": "35", "colour": "orange", "code": "        if length >= 0 and length < 128:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "36", "colour": "orange", "code": "            run = data[i+1:(i+1)+(length+1)]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "37", "colour": "orange", "code": "            #print \"length=%d, run=%s\" % (length+1,run)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "38", "colour": "orange", "code": "            decoded.append(run)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "39", "colour": "orange", "code": "            i = (i+1) + (length+1)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "40", "colour": "orange", "code": "        if length > 128:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "41", "colour": "orange", "code": "            run = data[i+1]*(257-length)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "42", "colour": "orange", "code": "            #print \"length=%d, run=%s\" % (257-length,run)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "43", "colour": "orange", "code": "            decoded.append(run)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "44", "colour": "orange", "code": "            i = (i+1) + 1\n", "error": "none", "author": "tom@organisms.be"}, {"index": "45", "colour": "orange", "code": "    return ''.join(decoded)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "46", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "47", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "48", "colour": "orange", "code": "if __name__ == '__main__':\n", "error": "none", "author": "tom@organisms.be"}, {"index": "49", "colour": "orange", "code": "    import doctest\n", "error": "none", "author": "tom@organisms.be"}, {"index": "50", "colour": "orange", "code": "    doctest.testmod()\n", "error": "none", "author": "tom@organisms.be"}]]}