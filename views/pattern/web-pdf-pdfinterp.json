{"path": "/home/asumal/git/cs410/pattern/pattern/web/pdf/pdfinterp.py", "lines": [[{"error": "C", "line": "1", "code": "#!/usr/bin/env python2\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "2", "code": "import sys\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "3", "code": "import re\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "4", "code": "try:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "5", "code": "    from cStringIO import StringIO\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "6", "code": "except ImportError:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "7", "code": "    from StringIO import StringIO\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "8", "code": "from cmapdb import CMapDB, CMap\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "9", "code": "from psparser import PSException, PSTypeError, PSEOF\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "10", "code": "from psparser import PSKeyword, literal_name, keyword_name\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "11", "code": "from psparser import PSStackParser\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "12", "code": "from psparser import LIT, KWD, STRICT\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "13", "code": "from pdftypes import PDFException, PDFStream, PDFObjRef\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "14", "code": "from pdftypes import resolve1\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "15", "code": "from pdftypes import int_value, float_value, num_value\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "16", "code": "from pdftypes import str_value, list_value, dict_value, stream_value\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "17", "code": "from pdffont import PDFFontError\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "18", "code": "from pdffont import PDFType1Font, PDFTrueTypeFont, PDFType3Font\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "19", "code": "from pdffont import PDFCIDFont\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "20", "code": "from pdfparser import PDFDocument, PDFParser\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "21", "code": "from pdfparser import PDFPasswordIncorrect\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "22", "code": "from pdfcolor import PDFColorSpace\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "23", "code": "from pdfcolor import PREDEFINED_COLORSPACE\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "24", "code": "from pdfcolor import LITERAL_DEVICE_GRAY, LITERAL_DEVICE_RGB\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "25", "code": "from pdfcolor import LITERAL_DEVICE_CMYK\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "26", "code": "from utils import choplist\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "27", "code": "from utils import mult_matrix, MATRIX_IDENTITY\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "28", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "29", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "30", "code": "##  Exceptions\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "31", "code": "##\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "32", "code": "class PDFResourceError(PDFException): pass\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "33", "code": "class PDFInterpreterError(PDFException): pass\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "34", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "35", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "36", "code": "##  Constants\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "37", "code": "##\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "38", "code": "LITERAL_PDF = LIT('PDF')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "39", "code": "LITERAL_TEXT = LIT('Text')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "40", "code": "LITERAL_FONT = LIT('Font')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "41", "code": "LITERAL_FORM = LIT('Form')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "42", "code": "LITERAL_IMAGE = LIT('Image')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "43", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "44", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "45", "code": "##  PDFTextState\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "46", "code": "##\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "47", "code": "class PDFTextState(object):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "48", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "49", "code": "    def __init__(self):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "50", "code": "        self.font = None\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "51", "code": "        self.fontsize = 0\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "52", "code": "        self.charspace = 0\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "53", "code": "        self.wordspace = 0\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "54", "code": "        self.scaling = 100\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "55", "code": "        self.leading = 0\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "56", "code": "        self.render = 0\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "57", "code": "        self.rise = 0\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "58", "code": "        self.reset()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "59", "code": "        # self.matrix is set\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "60", "code": "        # self.linematrix is set\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "61", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "62", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "63", "code": "    def __repr__(self):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "64", "code": "        return ('<PDFTextState: font=%r, fontsize=%r, charspace=%r, wordspace=%r, '\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "65", "code": "                ' scaling=%r, leading=%r, render=%r, rise=%r, '\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "66", "code": "                ' matrix=%r, linematrix=%r>' %\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "67", "code": "                (self.font, self.fontsize, self.charspace, self.wordspace,\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "68", "code": "                 self.scaling, self.leading, self.render, self.rise,\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "69", "code": "                 self.matrix, self.linematrix))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "70", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "71", "code": "    def copy(self):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "72", "code": "        obj = PDFTextState()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "73", "code": "        obj.font = self.font\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "74", "code": "        obj.fontsize = self.fontsize\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "75", "code": "        obj.charspace = self.charspace\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "76", "code": "        obj.wordspace = self.wordspace\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "77", "code": "        obj.scaling = self.scaling\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "78", "code": "        obj.leading = self.leading\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "79", "code": "        obj.render = self.render\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "80", "code": "        obj.rise = self.rise\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "81", "code": "        obj.matrix = self.matrix\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "82", "code": "        obj.linematrix = self.linematrix\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "83", "code": "        return obj\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "84", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "85", "code": "    def reset(self):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "W", "line": "86", "code": "        self.matrix = MATRIX_IDENTITY\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "87", "code": "        self.linematrix = (0, 0)\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "88", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "89", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "90", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "91", "code": "##  PDFGraphicState\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "92", "code": "##\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "93", "code": "class PDFGraphicState(object):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "94", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "95", "code": "    def __init__(self):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "96", "code": "        self.linewidth = 0\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "97", "code": "        self.linecap = None\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "98", "code": "        self.linejoin = None\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "99", "code": "        self.miterlimit = None\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "100", "code": "        self.dash = None\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "101", "code": "        self.intent = None\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "102", "code": "        self.flatness = None\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "103", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "104", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "105", "code": "    def copy(self):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "106", "code": "        obj = PDFGraphicState()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "107", "code": "        obj.linewidth = self.linewidth\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "108", "code": "        obj.linecap = self.linecap\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "109", "code": "        obj.linejoin = self.linejoin\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "110", "code": "        obj.miterlimit = self.miterlimit\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "111", "code": "        obj.dash = self.dash\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "112", "code": "        obj.intent = self.intent\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "113", "code": "        obj.flatness = self.flatness\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "114", "code": "        return obj\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "115", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "116", "code": "    def __repr__(self):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "117", "code": "        return ('<PDFGraphicState: linewidth=%r, linecap=%r, linejoin=%r, '\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "118", "code": "                ' miterlimit=%r, dash=%r, intent=%r, flatness=%r>' %\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "119", "code": "                (self.linewidth, self.linecap, self.linejoin,\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "120", "code": "                 self.miterlimit, self.dash, self.intent, self.flatness))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "121", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "122", "code": "##  Resource Manager\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "123", "code": "##\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "124", "code": "class PDFResourceManager(object):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "125", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "126", "code": "    \"\"\"Repository of shared resources.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "127", "code": "    \n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "128", "code": "    ResourceManager facilitates reuse of shared resources\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "129", "code": "    such as fonts and images so that large objects are not\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "130", "code": "    allocated multiple times.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "131", "code": "    \"\"\"\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "132", "code": "    debug = 0\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "133", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "134", "code": "    def __init__(self, caching=True):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "135", "code": "        self.caching = caching\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "136", "code": "        self._cached_fonts = {}\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "137", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "138", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "139", "code": "    def get_procset(self, procs):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "140", "code": "        for proc in procs:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "141", "code": "            if proc is LITERAL_PDF:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "142", "code": "                pass\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "143", "code": "            elif proc is LITERAL_TEXT:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "144", "code": "                pass\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "145", "code": "            else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "146", "code": "                #raise PDFResourceError('ProcSet %r is not supported.' % proc)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "147", "code": "                pass\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "148", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "149", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "150", "code": "    def get_cmap(self, cmapname, strict=False):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "151", "code": "        try:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "152", "code": "            return CMapDB.get_cmap(cmapname)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "153", "code": "        except CMapDB.CMapNotFound:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "154", "code": "            if strict: raise\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "155", "code": "            return CMap()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "156", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "157", "code": "    def get_font(self, objid, spec):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "158", "code": "        if objid and objid in self._cached_fonts:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "159", "code": "            font = self._cached_fonts[objid]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "160", "code": "        else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "161", "code": "            if 2 <= self.debug:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "162", "code": "                print >>sys.stderr, 'get_font: create: objid=%r, spec=%r' % (objid, spec)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "163", "code": "            if STRICT:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "164", "code": "                if spec['Type'] is not LITERAL_FONT:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "165", "code": "                    raise PDFFontError('Type is not /Font')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "166", "code": "            # Create a Font object.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "167", "code": "            if 'Subtype' in spec:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "168", "code": "                subtype = literal_name(spec['Subtype'])\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "169", "code": "            else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "170", "code": "                if STRICT:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "171", "code": "                    raise PDFFontError('Font Subtype is not specified.')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "172", "code": "                subtype = 'Type1'\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "173", "code": "            if subtype in ('Type1', 'MMType1'):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "174", "code": "                # Type1 Font\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "175", "code": "                font = PDFType1Font(self, spec)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "176", "code": "            elif subtype == 'TrueType':\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "177", "code": "                # TrueType Font\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "178", "code": "                font = PDFTrueTypeFont(self, spec)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "179", "code": "            elif subtype == 'Type3':\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "180", "code": "                # Type3 Font\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "181", "code": "                font = PDFType3Font(self, spec)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "182", "code": "            elif subtype in ('CIDFontType0', 'CIDFontType2'):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "183", "code": "                # CID Font\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "184", "code": "                font = PDFCIDFont(self, spec)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "185", "code": "            elif subtype == 'Type0':\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "186", "code": "                # Type0 Font\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "187", "code": "                dfonts = list_value(spec['DescendantFonts'])\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "188", "code": "                assert dfonts\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "189", "code": "                subspec = dict_value(dfonts[0]).copy()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "190", "code": "                for k in ('Encoding', 'ToUnicode'):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "191", "code": "                    if k in spec:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "192", "code": "                        subspec[k] = resolve1(spec[k])\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "193", "code": "                font = self.get_font(None, subspec)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "194", "code": "            else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "195", "code": "                if STRICT:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "196", "code": "                    raise PDFFontError('Invalid Font spec: %r' % spec)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "197", "code": "                font = PDFType1Font(self, spec) # this is so wrong!\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "198", "code": "            if objid and self.caching:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "199", "code": "                self._cached_fonts[objid] = font\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "200", "code": "        return font\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "201", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "202", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "203", "code": "##  PDFContentParser\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "204", "code": "##\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "205", "code": "class PDFContentParser(PSStackParser):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "206", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "207", "code": "    def __init__(self, streams):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "208", "code": "        self.streams = streams\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "209", "code": "        self.istream = 0\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "210", "code": "        PSStackParser.__init__(self, None)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "211", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "212", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "213", "code": "    def fillfp(self):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "214", "code": "        if not self.fp:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "215", "code": "            if self.istream < len(self.streams):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "216", "code": "                strm = stream_value(self.streams[self.istream])\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "217", "code": "                self.istream += 1\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "218", "code": "            else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "219", "code": "                raise PSEOF('Unexpected EOF, file truncated?')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "220", "code": "            self.fp = StringIO(strm.get_data())\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "221", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "222", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "223", "code": "    def seek(self, pos):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "224", "code": "        self.fillfp()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "225", "code": "        PSStackParser.seek(self, pos)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "226", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "227", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "228", "code": "    def fillbuf(self):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "229", "code": "        if self.charpos < len(self.buf): return\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "230", "code": "        while 1:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "231", "code": "            self.fillfp()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "232", "code": "            self.bufpos = self.fp.tell()\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "233", "code": "            self.buf = self.fp.read(self.BUFSIZ)\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "C", "line": "234", "code": "            if self.buf: break\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "235", "code": "            self.fp = None\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "236", "code": "        self.charpos = 0\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "237", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "238", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "239", "code": "    def get_inline_data(self, pos, target='EI'):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "240", "code": "        self.seek(pos)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "241", "code": "        i = 0\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "242", "code": "        data = ''\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "243", "code": "        while i <= len(target):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "244", "code": "            self.fillbuf()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "245", "code": "            if i:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "246", "code": "                c = self.buf[self.charpos]\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "247", "code": "                data += c\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "248", "code": "                self.charpos += 1\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "249", "code": "                if len(target) <= i and c.isspace():\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "250", "code": "                    i += 1\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "251", "code": "                elif i < len(target) and c == target[i]:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "252", "code": "                    i += 1\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "253", "code": "                else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "254", "code": "                    i = 0\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "255", "code": "            else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "256", "code": "                try:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "257", "code": "                    j = self.buf.index(target[0], self.charpos)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "258", "code": "                    #print 'found', (0, self.buf[j:j+10])\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "259", "code": "                    data += self.buf[self.charpos:j+1]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "260", "code": "                    self.charpos = j+1\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "261", "code": "                    i = 1\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "262", "code": "                except ValueError:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "263", "code": "                    data += self.buf[self.charpos:]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "264", "code": "                    self.charpos = len(self.buf)\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "265", "code": "        data = data[:-(len(target)+1)] # strip the last part\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "266", "code": "        data = re.sub(r'(\\x0d\\x0a|[\\x0d\\x0a])$', '', data)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "267", "code": "        return (pos, data)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "268", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "269", "code": "    def flush(self):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "270", "code": "        self.add_results(*self.popall())\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "271", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "272", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "273", "code": "    KEYWORD_BI = KWD('BI')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "274", "code": "    KEYWORD_ID = KWD('ID')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "275", "code": "    KEYWORD_EI = KWD('EI')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "276", "code": "    def do_keyword(self, pos, token):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "277", "code": "        if token is self.KEYWORD_BI:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "278", "code": "            # inline image within a content stream\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "279", "code": "            self.start_type(pos, 'inline')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "280", "code": "        elif token is self.KEYWORD_ID:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "281", "code": "            try:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "282", "code": "                (_, objs) = self.end_type('inline')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "283", "code": "                if len(objs) % 2 != 0:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "284", "code": "                    raise PSTypeError('Invalid dictionary construct: %r' % objs)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "285", "code": "                d = dict( (literal_name(k), v) for (k,v) in choplist(2, objs) )\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "286", "code": "                (pos, data) = self.get_inline_data(pos+len('ID '))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "287", "code": "                obj = PDFStream(d, data)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "288", "code": "                self.push((pos, obj))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "289", "code": "                self.push((pos, self.KEYWORD_EI))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "290", "code": "            except PSTypeError:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "291", "code": "                if STRICT: raise\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "292", "code": "        else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "293", "code": "            self.push((pos, token))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "294", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "295", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "296", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "297", "code": "##  Interpreter\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "298", "code": "##\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "299", "code": "class PDFPageInterpreter(object):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "300", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "301", "code": "    debug = 0\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "302", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "303", "code": "    def __init__(self, rsrcmgr, device):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "304", "code": "        self.rsrcmgr = rsrcmgr\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "305", "code": "        self.device = device\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "306", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "307", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "308", "code": "    def dup(self):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "309", "code": "        return PDFPageInterpreter(self.rsrcmgr, self.device)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "310", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "311", "code": "    # init_resources(resources):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "312", "code": "    #   Prepare the fonts and XObjects listed in the Resource attribute.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "313", "code": "    def init_resources(self, resources):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "W", "line": "314", "code": "        self.resources = resources\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "315", "code": "        self.fontmap = {}\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "316", "code": "        self.xobjmap = {}\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "317", "code": "        self.csmap = PREDEFINED_COLORSPACE.copy()\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "C", "line": "318", "code": "        if not resources: return\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "319", "code": "        def get_colorspace(spec):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "320", "code": "            if isinstance(spec, list):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "321", "code": "                name = literal_name(spec[0])\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "322", "code": "            else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "323", "code": "                name = literal_name(spec)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "324", "code": "            if name == 'ICCBased' and isinstance(spec, list) and 2 <= len(spec):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "325", "code": "                return PDFColorSpace(name, stream_value(spec[1])['N'])\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "326", "code": "            elif name == 'DeviceN' and isinstance(spec, list) and 2 <= len(spec):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "327", "code": "                return PDFColorSpace(name, len(list_value(spec[1])))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "328", "code": "            else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "329", "code": "                return PREDEFINED_COLORSPACE[name]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "330", "code": "        for (k,v) in dict_value(resources).iteritems():\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "331", "code": "            if 2 <= self.debug:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "332", "code": "                print >>sys.stderr, 'Resource: %r: %r' % (k,v)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "333", "code": "            if k == 'Font':\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "334", "code": "                for (fontid,spec) in dict_value(v).iteritems():\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "335", "code": "                    objid = None\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "336", "code": "                    if isinstance(spec, PDFObjRef):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "337", "code": "                        objid = spec.objid\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "338", "code": "                    spec = dict_value(spec)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "339", "code": "                    self.fontmap[fontid] = self.rsrcmgr.get_font(objid, spec)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "340", "code": "            elif k == 'ColorSpace':\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "341", "code": "                for (csid,spec) in dict_value(v).iteritems():\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "342", "code": "                    self.csmap[csid] = get_colorspace(resolve1(spec))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "343", "code": "            elif k == 'ProcSet':\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "344", "code": "                self.rsrcmgr.get_procset(list_value(v))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "345", "code": "            elif k == 'XObject':\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "346", "code": "                for (xobjid,xobjstrm) in dict_value(v).iteritems():\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "347", "code": "                    self.xobjmap[xobjid] = xobjstrm\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "348", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "349", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "350", "code": "    # init_state(ctm)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "351", "code": "    #   Initialize the text and graphic states for rendering a page.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "352", "code": "    def init_state(self, ctm):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "353", "code": "        # gstack: stack for graphical states.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "354", "code": "        self.gstack = []\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "355", "code": "        self.ctm = ctm\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "356", "code": "        self.device.set_ctm(self.ctm)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "357", "code": "        self.textstate = PDFTextState()\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "358", "code": "        self.graphicstate = PDFGraphicState()\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "359", "code": "        self.curpath = []\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "360", "code": "        # argstack: stack for command arguments.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "361", "code": "        self.argstack = []\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "362", "code": "        # set some global states.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "363", "code": "        self.scs = self.ncs = None\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "364", "code": "        if self.csmap:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "365", "code": "            self.scs = self.ncs = self.csmap.values()[0]\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "366", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "367", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "368", "code": "    def push(self, obj):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "369", "code": "        self.argstack.append(obj)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "370", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "371", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "372", "code": "    def pop(self, n):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "373", "code": "        if n == 0: return []\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "374", "code": "        x = self.argstack[-n:]\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "W", "line": "375", "code": "        self.argstack = self.argstack[:-n]\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "376", "code": "        return x\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "377", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "378", "code": "    def get_current_state(self):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "379", "code": "        return (self.ctm, self.textstate.copy(), self.graphicstate.copy())\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "380", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "381", "code": "    def set_current_state(self, state):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "W", "line": "382", "code": "        (self.ctm, self.textstate, self.graphicstate) = state\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "383", "code": "        self.device.set_ctm(self.ctm)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "384", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "385", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "386", "code": "    # gsave\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "387", "code": "    def do_q(self):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "388", "code": "        self.gstack.append(self.get_current_state())\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "389", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "390", "code": "    # grestore\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "391", "code": "    def do_Q(self):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "392", "code": "        if self.gstack:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "393", "code": "            self.set_current_state(self.gstack.pop())\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "394", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "395", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "396", "code": "    # concat-matrix\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "397", "code": "    def do_cm(self, a1, b1, c1, d1, e1, f1):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "W", "line": "398", "code": "        self.ctm = mult_matrix((a1,b1,c1,d1,e1,f1), self.ctm)\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "399", "code": "        self.device.set_ctm(self.ctm)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "400", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "401", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "402", "code": "    # setlinewidth\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "403", "code": "    def do_w(self, linewidth):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "404", "code": "        self.graphicstate.linewidth = linewidth\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "405", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "406", "code": "    # setlinecap\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "407", "code": "    def do_J(self, linecap):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "408", "code": "        self.graphicstate.linecap = linecap\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "409", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "410", "code": "    # setlinejoin\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "411", "code": "    def do_j(self, linejoin):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "412", "code": "        self.graphicstate.linejoin = linejoin\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "413", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "414", "code": "    # setmiterlimit\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "415", "code": "    def do_M(self, miterlimit):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "416", "code": "        self.graphicstate.miterlimit = miterlimit\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "417", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "418", "code": "    # setdash\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "419", "code": "    def do_d(self, dash, phase):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "420", "code": "        self.graphicstate.dash = (dash, phase)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "421", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "422", "code": "    # setintent\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "423", "code": "    def do_ri(self, intent):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "424", "code": "        self.graphicstate.intent = intent\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "425", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "426", "code": "    # setflatness\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "427", "code": "    def do_i(self, flatness):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "428", "code": "        self.graphicstate.flatness = flatness\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "429", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "430", "code": "    # load-gstate\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "431", "code": "    def do_gs(self, name):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "432", "code": "        #XXX\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "433", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "434", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "435", "code": "    # moveto\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "436", "code": "    def do_m(self, x, y):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "437", "code": "        self.curpath.append(('m',x,y))\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "438", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "439", "code": "    # lineto\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "440", "code": "    def do_l(self, x, y):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "441", "code": "        self.curpath.append(('l',x,y))\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "442", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "443", "code": "    # curveto\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "444", "code": "    def do_c(self, x1, y1, x2, y2, x3, y3):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "C", "line": "445", "code": "        self.curpath.append(('c',x1,y1,x2,y2,x3,y3))\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "446", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "447", "code": "    # urveto\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "448", "code": "    def do_v(self, x2, y2, x3, y3):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "449", "code": "        self.curpath.append(('v',x2,y2,x3,y3))\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "450", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "451", "code": "    # rveto\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "452", "code": "    def do_y(self, x1, y1, x3, y3):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "453", "code": "        self.curpath.append(('y',x1,y1,x3,y3))\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "454", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "455", "code": "    # closepath\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "456", "code": "    def do_h(self):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "457", "code": "        self.curpath.append(('h',))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "458", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "459", "code": "    # rectangle\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "460", "code": "    def do_re(self, x, y, w, h):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "461", "code": "        self.curpath.append(('m',x,y))\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "462", "code": "        self.curpath.append(('l',x+w,y))\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "463", "code": "        self.curpath.append(('l',x+w,y+h))\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "464", "code": "        self.curpath.append(('l',x,y+h))\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "465", "code": "        self.curpath.append(('h',))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "466", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "467", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "468", "code": "    # stroke\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "469", "code": "    def do_S(self):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "470", "code": "        self.device.paint_path(self.graphicstate, True, False, False, self.curpath)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "W", "line": "471", "code": "        self.curpath = []\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "472", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "473", "code": "    # close-and-stroke\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "474", "code": "    def do_s(self):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "475", "code": "        self.do_h()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "476", "code": "        self.do_S()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "477", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "478", "code": "    # fill\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "479", "code": "    def do_f(self):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "480", "code": "        self.device.paint_path(self.graphicstate, False, True, False, self.curpath)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "W", "line": "481", "code": "        self.curpath = []\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "482", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "483", "code": "    # fill (obsolete)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "484", "code": "    do_F = do_f\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "485", "code": "    # fill-even-odd\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "486", "code": "    def do_f_a(self):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "487", "code": "        self.device.paint_path(self.graphicstate, False, True, True, self.curpath)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "W", "line": "488", "code": "        self.curpath = []\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "489", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "490", "code": "    # fill-and-stroke\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "491", "code": "    def do_B(self):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "492", "code": "        self.device.paint_path(self.graphicstate, True, True, False, self.curpath)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "W", "line": "493", "code": "        self.curpath = []\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "494", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "495", "code": "    # fill-and-stroke-even-odd\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "496", "code": "    def do_B_a(self):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "497", "code": "        self.device.paint_path(self.graphicstate, True, True, True, self.curpath)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "W", "line": "498", "code": "        self.curpath = []\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "499", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "500", "code": "    # close-fill-and-stroke\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "501", "code": "    def do_b(self):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "502", "code": "        self.do_h()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "503", "code": "        self.do_B()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "504", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "505", "code": "    # close-fill-and-stroke-even-odd\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "506", "code": "    def do_b_a(self):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "507", "code": "        self.do_h()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "508", "code": "        self.do_B_a()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "509", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "510", "code": "    # close-only\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "511", "code": "    def do_n(self):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "W", "line": "512", "code": "        self.curpath = []\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "513", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "514", "code": "    # clip\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "515", "code": "    def do_W(self): return\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "516", "code": "    # clip-even-odd\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "517", "code": "    def do_W_a(self): return\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "518", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "519", "code": "    # setcolorspace-stroking\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "520", "code": "    def do_CS(self, name):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "W", "line": "521", "code": "        self.scs = self.csmap[literal_name(name)]\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "522", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "523", "code": "    # setcolorspace-non-strokine\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "524", "code": "    def do_cs(self, name):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "W", "line": "525", "code": "        self.ncs = self.csmap[literal_name(name)]\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "526", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "527", "code": "    # setgray-stroking\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "528", "code": "    def do_G(self, gray):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "529", "code": "        #self.do_CS(LITERAL_DEVICE_GRAY)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "530", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "531", "code": "    # setgray-non-stroking\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "532", "code": "    def do_g(self, gray):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "533", "code": "        #self.do_cs(LITERAL_DEVICE_GRAY)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "534", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "535", "code": "    # setrgb-stroking\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "536", "code": "    def do_RG(self, r, g, b):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "537", "code": "        #self.do_CS(LITERAL_DEVICE_RGB)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "538", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "539", "code": "    # setrgb-non-stroking\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "540", "code": "    def do_rg(self, r, g, b):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "541", "code": "        #self.do_cs(LITERAL_DEVICE_RGB)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "542", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "543", "code": "    # setcmyk-stroking\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "544", "code": "    def do_K(self, c, m, y, k):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "545", "code": "        #self.do_CS(LITERAL_DEVICE_CMYK)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "546", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "547", "code": "    # setcmyk-non-stroking\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "548", "code": "    def do_k(self, c, m, y, k):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "549", "code": "        #self.do_cs(LITERAL_DEVICE_CMYK)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "550", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "551", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "552", "code": "    # setcolor\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "553", "code": "    def do_SCN(self):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "554", "code": "        if self.scs:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "555", "code": "            n = self.scs.ncomponents\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "556", "code": "        else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "557", "code": "            if STRICT:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "558", "code": "                raise PDFInterpreterError('No colorspace specified!')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "559", "code": "            n = 1\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "560", "code": "        self.pop(n)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "561", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "562", "code": "    def do_scn(self):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "563", "code": "        if self.ncs:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "564", "code": "            n = self.ncs.ncomponents\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "565", "code": "        else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "566", "code": "            if STRICT:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "567", "code": "                raise PDFInterpreterError('No colorspace specified!')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "568", "code": "            n = 1\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "569", "code": "        self.pop(n)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "570", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "571", "code": "    def do_SC(self):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "572", "code": "        self.do_SCN()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "573", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "574", "code": "    def do_sc(self):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "575", "code": "        self.do_scn()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "576", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "577", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "578", "code": "    # sharing-name\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "579", "code": "    def do_sh(self, name): return\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "580", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "581", "code": "    # begin-text\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "582", "code": "    def do_BT(self):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "583", "code": "        self.textstate.reset()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "584", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "585", "code": "    # end-text\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "586", "code": "    def do_ET(self):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "587", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "588", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "589", "code": "    # begin-compat\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "590", "code": "    def do_BX(self): return\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "591", "code": "    # end-compat\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "592", "code": "    def do_EX(self): return\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "593", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "594", "code": "    # marked content operators\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "595", "code": "    def do_MP(self, tag):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "596", "code": "        self.device.do_tag(tag)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "597", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "598", "code": "    def do_DP(self, tag, props):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "599", "code": "        self.device.do_tag(tag, props)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "600", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "601", "code": "    def do_BMC(self, tag):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "602", "code": "        self.device.begin_tag(tag)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "603", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "604", "code": "    def do_BDC(self, tag, props):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "605", "code": "        self.device.begin_tag(tag, props)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "606", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "607", "code": "    def do_EMC(self):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "608", "code": "        self.device.end_tag()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "609", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "610", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "611", "code": "    # setcharspace\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "612", "code": "    def do_Tc(self, space):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "613", "code": "        self.textstate.charspace = space\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "614", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "615", "code": "    # setwordspace\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "616", "code": "    def do_Tw(self, space):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "617", "code": "        self.textstate.wordspace = space\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "618", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "619", "code": "    # textscale\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "620", "code": "    def do_Tz(self, scale):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "621", "code": "        self.textstate.scaling = scale\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "622", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "623", "code": "    # setleading\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "624", "code": "    def do_TL(self, leading):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "625", "code": "        self.textstate.leading = -leading\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "626", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "627", "code": "    # selectfont\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "628", "code": "    def do_Tf(self, fontid, fontsize):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "629", "code": "        try:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "630", "code": "            self.textstate.font = self.fontmap[literal_name(fontid)]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "631", "code": "        except KeyError:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "632", "code": "            raise\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "633", "code": "            if STRICT:\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "634", "code": "                raise PDFInterpreterError('Undefined Font id: %r' % fontid)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "635", "code": "            return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "636", "code": "        self.textstate.fontsize = fontsize\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "637", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "638", "code": "    # setrendering\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "639", "code": "    def do_Tr(self, render):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "640", "code": "        self.textstate.render = render\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "641", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "642", "code": "    # settextrise\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "643", "code": "    def do_Ts(self, rise):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "644", "code": "        self.textstate.rise = rise\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "645", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "646", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "647", "code": "    # text-move\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "648", "code": "    def do_Td(self, tx, ty):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "649", "code": "        (a,b,c,d,e,f) = self.textstate.matrix\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "W", "line": "650", "code": "        self.textstate.matrix = (a,b,c,d,tx*a+ty*c+e,tx*b+ty*d+f)\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "651", "code": "        self.textstate.linematrix = (0, 0)\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "652", "code": "        #print >>sys.stderr, 'Td(%r,%r): %r' % (tx,ty,self.textstate)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "653", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "654", "code": "    # text-move\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "655", "code": "    def do_TD(self, tx, ty):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "656", "code": "        (a,b,c,d,e,f) = self.textstate.matrix\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "W", "line": "657", "code": "        self.textstate.matrix = (a,b,c,d,tx*a+ty*c+e,tx*b+ty*d+f)\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "658", "code": "        self.textstate.leading = ty\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "659", "code": "        self.textstate.linematrix = (0, 0)\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "660", "code": "        #print >>sys.stderr, 'TD(%r,%r): %r' % (tx,ty,self.textstate)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "661", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "662", "code": "    # textmatrix\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "663", "code": "    def do_Tm(self, a,b,c,d,e,f):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "W", "line": "664", "code": "        self.textstate.matrix = (a,b,c,d,e,f)\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "665", "code": "        self.textstate.linematrix = (0, 0)\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "666", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "667", "code": "    # nextline\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "668", "code": "    def do_T_a(self):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "669", "code": "        (a,b,c,d,e,f) = self.textstate.matrix\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "W", "line": "670", "code": "        self.textstate.matrix = (a,b,c,d,self.textstate.leading*c+e,self.textstate.leading*d+f)\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "671", "code": "        self.textstate.linematrix = (0, 0)\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "672", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "673", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "674", "code": "    # show-pos\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "675", "code": "    def do_TJ(self, seq):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "676", "code": "        #print >>sys.stderr, 'TJ(%r): %r' % (seq,self.textstate)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "677", "code": "        if self.textstate.font is None:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "678", "code": "            if STRICT:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "679", "code": "                raise PDFInterpreterError('No font specified!')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "680", "code": "            return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "681", "code": "        self.device.render_string(self.textstate, seq)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "682", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "683", "code": "    # show\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "684", "code": "    def do_Tj(self, s):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "685", "code": "        self.do_TJ([s])\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "686", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "687", "code": "    # quote\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "688", "code": "    def do__q(self, s):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "689", "code": "        self.do_T_a()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "690", "code": "        self.do_TJ([s])\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "691", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "692", "code": "    # doublequote\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "693", "code": "    def do__w(self, aw, ac, s):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "694", "code": "        self.do_Tw(aw)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "695", "code": "        self.do_Tc(ac)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "696", "code": "        self.do_TJ([s])\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "697", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "698", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "699", "code": "    # inline image\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "700", "code": "    def do_BI(self): # never called\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "701", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "702", "code": "    def do_ID(self): # never called\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "703", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "704", "code": "    def do_EI(self, obj):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "705", "code": "        if 'W' in obj and 'H' in obj:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "706", "code": "            iobjid = str(id(obj))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "707", "code": "            self.device.begin_figure(iobjid, (0,0,1,1), MATRIX_IDENTITY)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "708", "code": "            self.device.render_image(iobjid, obj)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "709", "code": "            self.device.end_figure(iobjid)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "710", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "711", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "712", "code": "    # invoke an XObject\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "713", "code": "    def do_Do(self, xobjid):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "714", "code": "        xobjid = literal_name(xobjid)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "715", "code": "        try:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "716", "code": "            xobj = stream_value(self.xobjmap[xobjid])\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "717", "code": "        except KeyError:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "718", "code": "            if STRICT:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "719", "code": "                raise PDFInterpreterError('Undefined xobject id: %r' % xobjid)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "720", "code": "            return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "721", "code": "        if 1 <= self.debug:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "722", "code": "            print >>sys.stderr, 'Processing xobj: %r' % xobj\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "723", "code": "        subtype = xobj.get('Subtype')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "724", "code": "        if subtype is LITERAL_FORM and 'BBox' in xobj:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "725", "code": "            interpreter = self.dup()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "726", "code": "            bbox = list_value(xobj['BBox'])\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "727", "code": "            matrix = list_value(xobj.get('Matrix', MATRIX_IDENTITY))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "728", "code": "            # According to PDF reference 1.7 section 4.9.1, XObjects in \n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "729", "code": "            # earlier PDFs (prior to v1.2) use the page's Resources entry\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "730", "code": "            # instead of having their own Resources entry.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "731", "code": "            resources = dict_value(xobj.get('Resources')) or self.resources.copy()\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "732", "code": "            self.device.begin_figure(xobjid, bbox, matrix)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "733", "code": "            interpreter.render_contents(resources, [xobj], ctm=mult_matrix(matrix, self.ctm))\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "734", "code": "            self.device.end_figure(xobjid)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "735", "code": "        elif subtype is LITERAL_IMAGE and 'Width' in xobj and 'Height' in xobj:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "736", "code": "            self.device.begin_figure(xobjid, (0,0,1,1), MATRIX_IDENTITY)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "737", "code": "            self.device.render_image(xobjid, xobj)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "738", "code": "            self.device.end_figure(xobjid)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "739", "code": "        else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "740", "code": "            # unsupported xobject type.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "741", "code": "            pass\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "742", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "743", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "744", "code": "    def process_page(self, page):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "745", "code": "        if 1 <= self.debug:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "746", "code": "            print >>sys.stderr, 'Processing page: %r' % page\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "747", "code": "        (x0,y0,x1,y1) = page.mediabox\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "748", "code": "        if page.rotate == 90:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "749", "code": "            ctm = (0,-1,1,0, -y0,x1)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "750", "code": "        elif page.rotate == 180:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "751", "code": "            ctm = (-1,0,0,-1, x1,y1)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "752", "code": "        elif page.rotate == 270:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "753", "code": "            ctm = (0,1,-1,0, y1,-x0)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "754", "code": "        else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "755", "code": "            ctm = (1,0,0,1, -x0,-y0)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "756", "code": "        self.device.begin_page(page, ctm)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "757", "code": "        self.render_contents(page.resources, page.contents, ctm=ctm)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "758", "code": "        self.device.end_page(page)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "759", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "760", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "761", "code": "    # render_contents(resources, streams, ctm)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "762", "code": "    #   Render the content streams.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "763", "code": "    #   This method may be called recursively.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "764", "code": "    def render_contents(self, resources, streams, ctm=MATRIX_IDENTITY):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "765", "code": "        if 1 <= self.debug:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "766", "code": "            print >>sys.stderr, ('render_contents: resources=%r, streams=%r, ctm=%r' %\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "767", "code": "                             (resources, streams, ctm))\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "768", "code": "        self.init_resources(resources)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "769", "code": "        self.init_state(ctm)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "770", "code": "        self.execute(list_value(streams))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "771", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "772", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "773", "code": "    def execute(self, streams):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "774", "code": "        try:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "775", "code": "            parser = PDFContentParser(streams)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "776", "code": "        except PSEOF:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "777", "code": "            # empty page\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "778", "code": "            return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "779", "code": "        while 1:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "780", "code": "            try:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "781", "code": "                (_,obj) = parser.nextobject()\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "782", "code": "            except PSEOF:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "783", "code": "                break\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "784", "code": "            if isinstance(obj, PSKeyword):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "785", "code": "                name = keyword_name(obj)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "786", "code": "                method = 'do_%s' % name.replace('*','_a').replace('\"','_w').replace(\"'\",'_q')\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "787", "code": "                if hasattr(self, method):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "788", "code": "                    func = getattr(self, method)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "789", "code": "                    nargs = func.func_code.co_argcount-1\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "790", "code": "                    if nargs:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "791", "code": "                        args = self.pop(nargs)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "792", "code": "                        if 2 <= self.debug:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "793", "code": "                            print >>sys.stderr, 'exec: %s %r' % (name, args)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "794", "code": "                        if len(args) == nargs:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "795", "code": "                            func(*args)\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "796", "code": "                    else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "797", "code": "                        if 2 <= self.debug:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "798", "code": "                            print >>sys.stderr, 'exec: %s' % (name)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "799", "code": "                        func()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "800", "code": "                else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "801", "code": "                    if STRICT:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "802", "code": "                        raise PDFInterpreterError('Unknown operator: %r' % name)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "803", "code": "            else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "804", "code": "                self.push(obj)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "805", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "806", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "807", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "808", "code": "##  process_pdf\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "809", "code": "##\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "810", "code": "class PDFTextExtractionNotAllowed(PDFInterpreterError): pass\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "811", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "812", "code": "def process_pdf(rsrcmgr, device, fp, pagenos=None, maxpages=0, password='',\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "813", "code": "                caching=True, check_extractable=True):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "814", "code": "    # Create a PDF parser object associated with the file object.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "815", "code": "    parser = PDFParser(fp)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "816", "code": "    # Create a PDF document object that stores the document structure.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "817", "code": "    doc = PDFDocument(caching=caching)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "818", "code": "    # Connect the parser and document objects.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "819", "code": "    parser.set_document(doc)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "820", "code": "    doc.set_parser(parser)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "821", "code": "    # Supply the document password for initialization.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "822", "code": "    # (If no password is set, give an empty string.)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "823", "code": "    doc.initialize(password)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "824", "code": "    # Check if the document allows text extraction. If not, abort.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "825", "code": "    if check_extractable and not doc.is_extractable:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "826", "code": "        raise PDFTextExtractionNotAllowed('Text extraction is not allowed: %r' % fp)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "827", "code": "    # Create a PDF interpreter object.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "828", "code": "    interpreter = PDFPageInterpreter(rsrcmgr, device)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "829", "code": "    # Process each page contained in the document.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "830", "code": "    for (pageno,page) in enumerate(doc.get_pages()):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "831", "code": "        if pagenos and (pageno not in pagenos): continue\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "832", "code": "        interpreter.process_page(page)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "833", "code": "        if maxpages and maxpages <= pageno+1: break\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "834", "code": "    return\n", "colour": "black", "author": "tom@organisms.be"}]]}