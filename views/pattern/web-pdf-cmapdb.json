{"path": "/home/asumal/git/cs410/pattern/pattern/web/pdf/cmapdb.py", "lines": [[{"error": "none", "line": "1", "code": "#!/usr/bin/env python2\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "2", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "3", "code": "\"\"\" Adobe character mapping (CMap) support.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "4", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "5", "code": "CMaps provide the mapping between character codes and Unicode\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "6", "code": "code-points to character ids (CIDs).\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "7", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "8", "code": "More information is available on the Adobe website:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "9", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "10", "code": "  http://opensource.adobe.com/wiki/display/cmap/CMap+Resources\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "11", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "12", "code": "\"\"\"\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "13", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "14", "code": "import sys\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "15", "code": "import re\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "16", "code": "import os\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "17", "code": "import os.path\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "18", "code": "import gzip\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "19", "code": "import cPickle as pickle\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "20", "code": "import cmap\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "21", "code": "import struct\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "22", "code": "from psparser import PSStackParser\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "23", "code": "from psparser import PSException, PSSyntaxError, PSTypeError, PSEOF\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "24", "code": "from psparser import PSLiteral, PSKeyword\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "25", "code": "from psparser import literal_name, keyword_name\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "26", "code": "from encodingdb import name2unicode\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "27", "code": "from utils import choplist, nunpack\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "28", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "29", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "30", "code": "class CMapError(Exception): pass\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "31", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "32", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "33", "code": "##  CMap\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "34", "code": "##\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "35", "code": "class CMap(object):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "36", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "37", "code": "    debug = 0\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "38", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "39", "code": "    def __init__(self, code2cid=None):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "40", "code": "        self.code2cid = code2cid or {}\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "41", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "42", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "43", "code": "    def is_vertical(self):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "44", "code": "        return False\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "45", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "46", "code": "    def use_cmap(self, cmap):\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "47", "code": "        assert isinstance(cmap, CMap)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "48", "code": "        def copy(dst, src):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "49", "code": "            for (k,v) in src.iteritems():\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "50", "code": "                if isinstance(v, dict):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "51", "code": "                    d = {}\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "52", "code": "                    dst[k] = d\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "53", "code": "                    copy(d, v)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "54", "code": "                else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "55", "code": "                    dst[k] = v\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "56", "code": "        copy(self.code2cid, cmap.code2cid)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "57", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "58", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "59", "code": "    def decode(self, code):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "60", "code": "        if self.debug:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "61", "code": "            print >>sys.stderr, 'decode: %r, %r' % (self, code)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "62", "code": "        d = self.code2cid\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "63", "code": "        for c in code:\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "64", "code": "            c = ord(c)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "65", "code": "            if c in d:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "66", "code": "                d = d[c]\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "67", "code": "                if isinstance(d, int):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "68", "code": "                    yield d\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "69", "code": "                    d = self.code2cid\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "70", "code": "            else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "71", "code": "                d = self.code2cid\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "72", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "73", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "74", "code": "    def dump(self, out=sys.stdout, code2cid=None, code=None):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "75", "code": "        if code2cid is None:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "76", "code": "            code2cid = self.code2cid\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "77", "code": "            code = ()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "78", "code": "        for (k,v) in sorted(code2cid.iteritems()):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "79", "code": "            c = code+(k,)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "80", "code": "            if isinstance(v, int):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "81", "code": "                out.write('code %r = cid %d\\n' % (c,v))\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "82", "code": "            else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "83", "code": "                self.dump(out=out, code2cid=v, code=c)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "84", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "85", "code": "    \n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "86", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "87", "code": "##  IdentityCMap\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "88", "code": "##\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "89", "code": "class IdentityCMap(object):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "90", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "91", "code": "    def __init__(self, vertical):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "92", "code": "        self.vertical = vertical\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "93", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "94", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "95", "code": "    def is_vertical(self):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "96", "code": "        return self.vertical\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "97", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "98", "code": "    def decode(self, code):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "C", "line": "99", "code": "        n = len(code)/2\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "100", "code": "        if n:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "101", "code": "            return struct.unpack('>%dH' % n, code)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "102", "code": "        else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "103", "code": "            return ()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "104", "code": "        \n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "105", "code": "            \n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "106", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "107", "code": "##  UnicodeMap\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "108", "code": "##\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "109", "code": "class UnicodeMap(object):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "110", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "111", "code": "    debug = 0\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "112", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "113", "code": "    def __init__(self, cid2unichr=None):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "114", "code": "        self.cid2unichr = cid2unichr or {}\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "115", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "116", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "117", "code": "    def get_unichr(self, cid):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "118", "code": "        if self.debug:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "119", "code": "            print >>sys.stderr, 'get_unichr: %r, %r' % (self, cid)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "120", "code": "        return self.cid2unichr[cid]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "121", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "122", "code": "    def dump(self, out=sys.stdout):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "123", "code": "        for (k,v) in sorted(self.cid2unichr.iteritems()):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "124", "code": "            out.write('cid %d = unicode %r\\n' % (k,v))\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "125", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "126", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "127", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "128", "code": "##  FileCMap\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "129", "code": "##\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "130", "code": "class FileCMap(CMap):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "131", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "132", "code": "    def __init__(self):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "133", "code": "        CMap.__init__(self)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "134", "code": "        self.attrs = {}\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "135", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "136", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "137", "code": "    def __repr__(self):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "138", "code": "        return '<CMap: %s>' % self.attrs.get('CMapName')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "139", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "140", "code": "    def is_vertical(self):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "141", "code": "        return self.attrs.get('WMode', 0) != 0\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "142", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "143", "code": "    def set_attr(self, k, v):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "144", "code": "        self.attrs[k] = v\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "145", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "146", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "147", "code": "    def add_code2cid(self, code, cid):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "148", "code": "        assert isinstance(code, str) and isinstance(cid, int)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "149", "code": "        d = self.code2cid\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "150", "code": "        for c in code[:-1]:\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "151", "code": "            c = ord(c)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "152", "code": "            if c in d:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "153", "code": "                d = d[c]\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "154", "code": "            else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "155", "code": "                t = {}\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "156", "code": "                d[c] = t\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "157", "code": "                d =t\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "158", "code": "        c = ord(code[-1])\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "159", "code": "        d[c] = cid\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "160", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "161", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "162", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "163", "code": "##  FileUnicodeMap\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "164", "code": "##\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "165", "code": "class FileUnicodeMap(UnicodeMap):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "166", "code": "    \n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "167", "code": "    def __init__(self):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "168", "code": "        UnicodeMap.__init__(self)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "169", "code": "        self.attrs = {}\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "170", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "171", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "172", "code": "    def __repr__(self):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "173", "code": "        return '<UnicodeMap: %s>' % self.attrs.get('CMapName')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "174", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "175", "code": "    def set_attr(self, k, v):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "176", "code": "        self.attrs[k] = v\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "177", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "178", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "179", "code": "    def add_cid2unichr(self, cid, code):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "180", "code": "        assert isinstance(cid, int)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "181", "code": "        if isinstance(code, PSLiteral):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "182", "code": "            # Interpret as an Adobe glyph name.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "183", "code": "            self.cid2unichr[cid] = name2unicode(code.name)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "184", "code": "        elif isinstance(code, str):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "185", "code": "            # Interpret as UTF-16BE.\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "186", "code": "            self.cid2unichr[cid] = unicode(code, 'UTF-16BE', 'ignore')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "187", "code": "        elif isinstance(code, int):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "188", "code": "            self.cid2unichr[cid] = unichr(code)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "189", "code": "        else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "190", "code": "            raise TypeError(code)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "191", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "192", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "193", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "194", "code": "##  PyCMap\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "195", "code": "##\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "196", "code": "class PyCMap(CMap):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "197", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "198", "code": "    def __init__(self, name, module):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "199", "code": "        CMap.__init__(self, module.CODE2CID)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "200", "code": "        self.name = name\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "201", "code": "        self._is_vertical = module.IS_VERTICAL\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "202", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "203", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "204", "code": "    def __repr__(self):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "205", "code": "        return '<PyCMap: %s>' % (self.name)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "206", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "207", "code": "    def is_vertical(self):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "208", "code": "        return self._is_vertical\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "209", "code": "    \n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "210", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "211", "code": "##  PyUnicodeMap\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "212", "code": "##\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "213", "code": "class PyUnicodeMap(UnicodeMap):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "214", "code": "    \n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "215", "code": "    def __init__(self, name, module, vertical):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "216", "code": "        if vertical:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "217", "code": "            cid2unichr = module.CID2UNICHR_V\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "218", "code": "        else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "219", "code": "            cid2unichr = module.CID2UNICHR_H\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "220", "code": "        UnicodeMap.__init__(self, cid2unichr)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "221", "code": "        self.name = name\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "222", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "223", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "224", "code": "    def __repr__(self):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "225", "code": "        return '<PyUnicodeMap: %s>' % (self.name)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "226", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "227", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "228", "code": "##  CMapDB\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "229", "code": "##\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "230", "code": "class CMapDB(object):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "231", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "232", "code": "    debug = 0\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "233", "code": "    _cmap_cache = {}\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "234", "code": "    _umap_cache = {}\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "235", "code": "    \n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "236", "code": "    class CMapNotFound(CMapError): pass\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "237", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "238", "code": "    @classmethod\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "239", "code": "    def _load_data(klass, name):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "240", "code": "        filename = '%s.pickle.gz' % name\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "241", "code": "        if klass.debug:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "242", "code": "            print >>sys.stderr, 'loading:', name\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "243", "code": "        default_path = os.environ.get('CMAP_PATH', '/usr/share/pdfminer/')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "244", "code": "        for directory in (os.path.dirname(cmap.__file__), default_path):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "245", "code": "            path = os.path.join(directory, filename)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "246", "code": "            if os.path.exists(path):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "247", "code": "                gzfile = gzip.open(path)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "248", "code": "                try:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "249", "code": "                    return type(name, (), pickle.loads(gzfile.read()))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "250", "code": "                finally:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "251", "code": "                    gzfile.close()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "252", "code": "        else:\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "253", "code": "            raise CMapDB.CMapNotFound(name)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "254", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "255", "code": "    @classmethod\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "256", "code": "    def get_cmap(klass, name):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "257", "code": "        if name == 'Identity-H':\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "258", "code": "            return IdentityCMap(False)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "259", "code": "        elif name == 'Identity-V':\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "260", "code": "            return IdentityCMap(True)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "261", "code": "        try:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "262", "code": "            return klass._cmap_cache[name]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "263", "code": "        except KeyError:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "264", "code": "            pass\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "265", "code": "        data = klass._load_data(name)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "266", "code": "        klass._cmap_cache[name] = cmap = PyCMap(name, data)\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "267", "code": "        return cmap\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "268", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "269", "code": "    @classmethod\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "270", "code": "    def get_unicode_map(klass, name, vertical=False):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "271", "code": "        try:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "272", "code": "            return klass._umap_cache[name][vertical]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "273", "code": "        except KeyError:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "274", "code": "            pass\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "275", "code": "        data = klass._load_data('to-unicode-%s' % name)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "276", "code": "        klass._umap_cache[name] = umaps = [PyUnicodeMap(name, data, v) for v in (False, True)]\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "277", "code": "        return umaps[vertical]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "278", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "279", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "280", "code": "##  CMapParser\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "281", "code": "##\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "282", "code": "class CMapParser(PSStackParser):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "283", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "284", "code": "    def __init__(self, cmap, fp):\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "285", "code": "        PSStackParser.__init__(self, fp)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "286", "code": "        self.cmap = cmap\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "287", "code": "        self._in_cmap = False\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "288", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "289", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "290", "code": "    def run(self):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "291", "code": "        try:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "292", "code": "            self.nextobject()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "293", "code": "        except PSEOF:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "294", "code": "            pass\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "295", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "296", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "297", "code": "    def do_keyword(self, pos, token):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "298", "code": "        name = token.name\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "299", "code": "        if name == 'begincmap':\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "300", "code": "            self._in_cmap = True\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "301", "code": "            self.popall()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "302", "code": "            return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "303", "code": "        elif name == 'endcmap':\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "304", "code": "            self._in_cmap = False\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "305", "code": "            return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "306", "code": "        if not self._in_cmap: return\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "307", "code": "        #\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "308", "code": "        if name == 'def':\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "309", "code": "            try:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "310", "code": "                ((_,k),(_,v)) = self.pop(2)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "311", "code": "                self.cmap.set_attr(literal_name(k), v)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "312", "code": "            except PSSyntaxError:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "313", "code": "                pass\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "314", "code": "            return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "315", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "316", "code": "        if name == 'usecmap':\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "317", "code": "            try:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "318", "code": "                ((_,cmapname),) = self.pop(1)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "319", "code": "                self.cmap.use_cmap(CMapDB.get_cmap(literal_name(cmapname)))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "320", "code": "            except PSSyntaxError:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "321", "code": "                pass\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "322", "code": "            except CMapDB.CMapNotFound:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "323", "code": "                pass\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "324", "code": "            return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "325", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "326", "code": "        if name == 'begincodespacerange':\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "327", "code": "            self.popall()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "328", "code": "            return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "329", "code": "        if name == 'endcodespacerange':\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "330", "code": "            self.popall()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "331", "code": "            return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "332", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "333", "code": "        if name == 'begincidrange':\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "334", "code": "            self.popall()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "335", "code": "            return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "336", "code": "        if name == 'endcidrange':\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "337", "code": "            objs = [ obj for (_,obj) in self.popall() ]\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "338", "code": "            for (s,e,cid) in choplist(3, objs):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "339", "code": "                if (not isinstance(s, str) or not isinstance(e, str) or\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "340", "code": "                    not isinstance(cid, int) or len(s) != len(e)): continue\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "341", "code": "                sprefix = s[:-4]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "342", "code": "                eprefix = e[:-4]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "343", "code": "                if sprefix != eprefix: continue\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "344", "code": "                svar = s[-4:]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "345", "code": "                evar = e[-4:]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "346", "code": "                s1 = nunpack(svar)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "347", "code": "                e1 = nunpack(evar)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "348", "code": "                vlen = len(svar)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "349", "code": "                #assert s1 <= e1\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "350", "code": "                for i in xrange(e1-s1+1):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "351", "code": "                    x = sprefix+struct.pack('>L',s1+i)[-vlen:]\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "352", "code": "                    self.cmap.add_code2cid(x, cid+i)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "353", "code": "            return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "354", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "355", "code": "        if name == 'begincidchar':\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "356", "code": "            self.popall()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "357", "code": "            return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "358", "code": "        if name == 'endcidchar':\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "359", "code": "            objs = [ obj for (_,obj) in self.popall() ]\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "360", "code": "            for (cid,code) in choplist(2, objs):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "361", "code": "                if isinstance(code, str) and isinstance(cid, str):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "362", "code": "                    self.cmap.add_code2cid(code, nunpack(cid))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "363", "code": "            return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "364", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "365", "code": "        if name == 'beginbfrange':\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "366", "code": "            self.popall()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "367", "code": "            return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "368", "code": "        if name == 'endbfrange':\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "369", "code": "            objs = [ obj for (_,obj) in self.popall() ]\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "370", "code": "            for (s,e,code) in choplist(3, objs):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "371", "code": "                if (not isinstance(s, str) or not isinstance(e, str) or\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "372", "code": "                    len(s) != len(e)): continue\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "373", "code": "                s1 = nunpack(s)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "374", "code": "                e1 = nunpack(e)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "375", "code": "                #assert s1 <= e1\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "376", "code": "                if isinstance(code, list):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "377", "code": "                    for i in xrange(e1-s1+1):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "378", "code": "                        self.cmap.add_cid2unichr(s1+i, code[i])\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "379", "code": "                else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "380", "code": "                    var = code[-4:]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "381", "code": "                    base = nunpack(var)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "382", "code": "                    prefix = code[:-4]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "383", "code": "                    vlen = len(var)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "384", "code": "                    for i in xrange(e1-s1+1):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "385", "code": "                        x = prefix+struct.pack('>L',base+i)[-vlen:]\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "386", "code": "                        self.cmap.add_cid2unichr(s1+i, x)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "387", "code": "            return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "388", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "389", "code": "        if name == 'beginbfchar':\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "390", "code": "            self.popall()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "391", "code": "            return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "392", "code": "        if name == 'endbfchar':\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "393", "code": "            objs = [ obj for (_,obj) in self.popall() ]\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "394", "code": "            for (cid,code) in choplist(2, objs):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "395", "code": "                if isinstance(cid, str) and isinstance(code, str):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "396", "code": "                    self.cmap.add_cid2unichr(nunpack(cid), code)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "397", "code": "            return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "398", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "399", "code": "        if name == 'beginnotdefrange':\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "400", "code": "            self.popall()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "401", "code": "            return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "402", "code": "        if name == 'endnotdefrange':\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "403", "code": "            self.popall()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "404", "code": "            return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "405", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "406", "code": "        self.push((pos, token))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "407", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "408", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "409", "code": "# test\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "410", "code": "def main(argv):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "411", "code": "    args = argv[1:]\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "412", "code": "    for fname in args:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "W", "line": "413", "code": "        fp = file(fname, 'rb')\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "414", "code": "        cmap = FileUnicodeMap()\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "415", "code": "        #cmap = FileCMap()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "416", "code": "        CMapParser(cmap, fp).run()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "417", "code": "        fp.close()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "418", "code": "        cmap.dump()\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "419", "code": "    return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "420", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "421", "code": "if __name__ == '__main__': sys.exit(main(sys.argv))\n", "colour": "blue", "author": "tom@organisms.be"}]]}