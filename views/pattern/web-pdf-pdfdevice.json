{"path": "/home/asumal/git/cs410/pattern/pattern/web/pdf/pdfdevice.py", "lines": [[{"error": "C", "line": "1", "code": "#!/usr/bin/env python2\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "W", "line": "2", "code": "import sys\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "3", "code": "from utils import mult_matrix, translate_matrix\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "4", "code": "from utils import enc, bbox2str\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "W", "line": "5", "code": "from pdffont import PDFUnicodeNotDefined\n", "colour": "purple", "author": "tom@organisms.be"}, {"error": "none", "line": "6", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "7", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "8", "code": "##  PDFDevice\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "9", "code": "##\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "10", "code": "class PDFDevice(object):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "11", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "12", "code": "    debug = 0\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "13", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "14", "code": "    def __init__(self, rsrcmgr):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "15", "code": "        self.rsrcmgr = rsrcmgr\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "16", "code": "        self.ctm = None\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "17", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "18", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "19", "code": "    def __repr__(self):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "20", "code": "        return '<PDFDevice>'\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "21", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "22", "code": "    def close(self):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "23", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "24", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "25", "code": "    def set_ctm(self, ctm):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "26", "code": "        self.ctm = ctm\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "27", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "28", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "29", "code": "    def begin_tag(self, tag, props=None):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "30", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "31", "code": "    def end_tag(self):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "32", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "33", "code": "    def do_tag(self, tag, props=None):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "34", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "35", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "36", "code": "    def begin_page(self, page, ctm):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "37", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "38", "code": "    def end_page(self, page):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "39", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "40", "code": "    def begin_figure(self, name, bbox, matrix):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "41", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "42", "code": "    def end_figure(self, name):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "43", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "44", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "45", "code": "    def paint_path(self, graphicstate, stroke, fill, evenodd, path):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "46", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "47", "code": "    def render_image(self, name, stream):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "48", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "49", "code": "    def render_string(self, textstate, seq):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "50", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "51", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "52", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "53", "code": "##  PDFTextDevice\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "54", "code": "##\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "55", "code": "class PDFTextDevice(PDFDevice):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "56", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "57", "code": "    def render_string(self, textstate, seq):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "58", "code": "        matrix = mult_matrix(textstate.matrix, self.ctm)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "59", "code": "        font = textstate.font\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "60", "code": "        fontsize = textstate.fontsize\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "61", "code": "        scaling = textstate.scaling * .01\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "62", "code": "        charspace = textstate.charspace * scaling\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "63", "code": "        wordspace = textstate.wordspace * scaling\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "64", "code": "        rise = textstate.rise\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "65", "code": "        if font.is_multibyte():\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "66", "code": "            wordspace = 0\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "67", "code": "        dxscale = .001 * fontsize * scaling\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "68", "code": "        if font.is_vertical():\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "69", "code": "            textstate.linematrix = self.render_string_vertical(\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "70", "code": "                seq, matrix, textstate.linematrix, font, fontsize,\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "71", "code": "                scaling, charspace, wordspace, rise, dxscale)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "72", "code": "        else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "73", "code": "            textstate.linematrix = self.render_string_horizontal(\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "74", "code": "                seq, matrix, textstate.linematrix, font, fontsize,\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "75", "code": "                scaling, charspace, wordspace, rise, dxscale)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "76", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "77", "code": "    \n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "R", "line": "78", "code": "    def render_string_horizontal(self, seq, matrix, (x,y), \n", "colour": "green", "author": "tom@organisms.be"}, {"error": "C", "line": "79", "code": "                                 font, fontsize, scaling, charspace, wordspace, rise, dxscale):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "80", "code": "        needcharspace = False\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "81", "code": "        for obj in seq:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "82", "code": "            if isinstance(obj, int) or isinstance(obj, float):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "83", "code": "                x -= obj*dxscale\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "84", "code": "                needcharspace = True\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "85", "code": "            else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "86", "code": "                for cid in font.decode(obj):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "87", "code": "                    if needcharspace:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "88", "code": "                        x += charspace\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "89", "code": "                    x += self.render_char(translate_matrix(matrix, (x,y)),\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "90", "code": "                                          font, fontsize, scaling, rise, cid)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "91", "code": "                    if cid == 32 and wordspace:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "92", "code": "                        x += wordspace\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "93", "code": "                    needcharspace = True\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "94", "code": "        return (x, y)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "95", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "96", "code": "    def render_string_vertical(self, seq, matrix, (x,y), \n", "colour": "green", "author": "tom@organisms.be"}, {"error": "C", "line": "97", "code": "                               font, fontsize, scaling, charspace, wordspace, rise, dxscale):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "98", "code": "        needcharspace = False\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "99", "code": "        for obj in seq:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "100", "code": "            if isinstance(obj, int) or isinstance(obj, float):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "101", "code": "                y -= obj*dxscale\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "102", "code": "                needcharspace = True\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "103", "code": "            else:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "104", "code": "                for cid in font.decode(obj):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "105", "code": "                    if needcharspace:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "106", "code": "                        y += charspace\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "107", "code": "                    y += self.render_char(translate_matrix(matrix, (x,y)), \n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "108", "code": "                                          font, fontsize, scaling, rise, cid)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "109", "code": "                    if cid == 32 and wordspace:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "110", "code": "                        y += wordspace\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "111", "code": "                    needcharspace = True\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "112", "code": "        return (x, y)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "113", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "R", "line": "114", "code": "    def render_char(self, matrix, font, fontsize, scaling, rise, cid):\n", "colour": "green", "author": "tom@organisms.be"}, {"error": "none", "line": "115", "code": "        return 0\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "116", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "117", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "118", "code": "##  TagExtractor\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "119", "code": "##\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "120", "code": "class TagExtractor(PDFDevice):\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "121", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "122", "code": "    def __init__(self, rsrcmgr, outfp, codec='utf-8', debug=0):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "123", "code": "        PDFDevice.__init__(self, rsrcmgr)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "124", "code": "        self.outfp = outfp\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "125", "code": "        self.codec = codec\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "126", "code": "        self.debug = debug\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "127", "code": "        self.pageno = 0\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "128", "code": "        self._stack = []\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "129", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "130", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "131", "code": "    def render_string(self, textstate, seq):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "132", "code": "        font = textstate.font\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "133", "code": "        text = ''\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "134", "code": "        for obj in seq:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "135", "code": "            if not isinstance(obj, str): continue\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "136", "code": "            chars = font.decode(obj)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "137", "code": "            for cid in chars:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "138", "code": "                try:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "139", "code": "                    char = font.to_unichr(cid)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "140", "code": "                    text += char\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "141", "code": "                except PDFUnicodeNotDefined:\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "142", "code": "                    pass\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "143", "code": "        self.outfp.write(enc(text, self.codec))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "144", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "145", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "146", "code": "    def begin_page(self, page, ctm):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "147", "code": "        self.outfp.write('<page id=\"%s\" bbox=\"%s\" rotate=\"%d\">' %\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "148", "code": "                         (self.pageno, bbox2str(page.mediabox), page.rotate))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "149", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "150", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "151", "code": "    def end_page(self, page):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "152", "code": "        self.outfp.write('</page>\\n')\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "153", "code": "        self.pageno += 1\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "154", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "155", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "156", "code": "    def begin_tag(self, tag, props=None):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "157", "code": "        s = ''\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "158", "code": "        if isinstance(props, dict):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "C", "line": "159", "code": "            s = ''.join( ' %s=\"%s\"' % (enc(k), enc(str(v))) for (k,v)\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "C", "line": "160", "code": "                         in sorted(props.iteritems()) )\n", "colour": "blue", "author": "tom@organisms.be"}, {"error": "none", "line": "161", "code": "        self.outfp.write('<%s%s>' % (enc(tag.name), s))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "162", "code": "        self._stack.append(tag)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "163", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "164", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "165", "code": "    def end_tag(self):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "166", "code": "        assert self._stack\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "167", "code": "        tag = self._stack.pop(-1)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "168", "code": "        self.outfp.write('</%s>' % enc(tag.name))\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "169", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "170", "code": "\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "171", "code": "    def do_tag(self, tag, props=None):\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "172", "code": "        self.begin_tag(tag, props)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "173", "code": "        self._stack.pop(-1)\n", "colour": "black", "author": "tom@organisms.be"}, {"error": "none", "line": "174", "code": "        return\n", "colour": "black", "author": "tom@organisms.be"}]]}