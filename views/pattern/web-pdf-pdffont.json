{"path": "/home/asumal/git/cs410/pattern/pattern/web/pdf/pdffont.py", "lines": [{"index": "1", "colour": "orange", "code": "#!/usr/bin/env python2\n", "error": "none", "author": "tom@organisms.be"}, {"index": "2", "colour": "orange", "code": "import sys\n", "error": "none", "author": "tom@organisms.be"}, {"index": "3", "colour": "orange", "code": "import struct\n", "error": "none", "author": "tom@organisms.be"}, {"index": "4", "colour": "orange", "code": "try:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "5", "colour": "orange", "code": "    from cStringIO import StringIO\n", "error": "none", "author": "tom@organisms.be"}, {"index": "6", "colour": "orange", "code": "except ImportError:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "7", "colour": "orange", "code": "    from StringIO import StringIO\n", "error": "none", "author": "tom@organisms.be"}, {"index": "8", "colour": "green", "code": "from cmapdb import CMapDB, CMapParser, FileUnicodeMap, CMap\n", "error": "W", "author": "tom@organisms.be"}, {"index": "9", "colour": "green", "code": "from encodingdb import EncodingDB, name2unicode\n", "error": "W", "author": "tom@organisms.be"}, {"index": "10", "colour": "green", "code": "from psparser import PSStackParser\n", "error": "W", "author": "tom@organisms.be"}, {"index": "11", "colour": "green", "code": "from psparser import PSSyntaxError, PSEOF\n", "error": "W", "author": "tom@organisms.be"}, {"index": "12", "colour": "green", "code": "from psparser import LIT, KWD, STRICT\n", "error": "W", "author": "tom@organisms.be"}, {"index": "13", "colour": "green", "code": "from psparser import PSLiteral, literal_name\n", "error": "W", "author": "tom@organisms.be"}, {"index": "14", "colour": "green", "code": "from pdftypes import PDFException, resolve1\n", "error": "W", "author": "tom@organisms.be"}, {"index": "15", "colour": "green", "code": "from pdftypes import int_value, float_value, num_value\n", "error": "W", "author": "tom@organisms.be"}, {"index": "16", "colour": "green", "code": "from pdftypes import str_value, list_value, dict_value, stream_value\n", "error": "W", "author": "tom@organisms.be"}, {"index": "17", "colour": "green", "code": "from fontmetrics import FONT_METRICS\n", "error": "W", "author": "tom@organisms.be"}, {"index": "18", "colour": "green", "code": "from utils import apply_matrix_norm, nunpack, choplist\n", "error": "W", "author": "tom@organisms.be"}, {"index": "19", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "20", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "21", "colour": "orange", "code": "def get_widths(seq):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "22", "colour": "orange", "code": "    widths = {}\n", "error": "none", "author": "tom@organisms.be"}, {"index": "23", "colour": "orange", "code": "    r = []\n", "error": "none", "author": "tom@organisms.be"}, {"index": "24", "colour": "orange", "code": "    for v in seq:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "25", "colour": "orange", "code": "        if isinstance(v, list):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "26", "colour": "orange", "code": "            if r:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "27", "colour": "orange", "code": "                char1 = r[-1]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "28", "colour": "orange", "code": "                for (i,w) in enumerate(v):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "29", "colour": "orange", "code": "                    widths[char1+i] = w\n", "error": "none", "author": "tom@organisms.be"}, {"index": "30", "colour": "orange", "code": "                r = []\n", "error": "none", "author": "tom@organisms.be"}, {"index": "31", "colour": "orange", "code": "        elif isinstance(v, int):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "32", "colour": "orange", "code": "            r.append(v)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "33", "colour": "orange", "code": "            if len(r) == 3:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "34", "colour": "green", "code": "                (char1,char2,w) = r\n", "error": "W", "author": "tom@organisms.be"}, {"index": "35", "colour": "orange", "code": "                for i in xrange(char1, char2+1):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "36", "colour": "orange", "code": "                    widths[i] = w\n", "error": "none", "author": "tom@organisms.be"}, {"index": "37", "colour": "orange", "code": "                r = []\n", "error": "none", "author": "tom@organisms.be"}, {"index": "38", "colour": "orange", "code": "    return widths\n", "error": "none", "author": "tom@organisms.be"}, {"index": "39", "colour": "orange", "code": "#assert get_widths([1]) == {}\n", "error": "none", "author": "tom@organisms.be"}, {"index": "40", "colour": "orange", "code": "#assert get_widths([1,2,3]) == {1:3, 2:3}\n", "error": "none", "author": "tom@organisms.be"}, {"index": "41", "colour": "orange", "code": "#assert get_widths([1,[2,3],6,[7,8]]) == {1:2,2:3, 6:7,7:8}\n", "error": "none", "author": "tom@organisms.be"}, {"index": "42", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "43", "colour": "orange", "code": "def get_widths2(seq):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "44", "colour": "orange", "code": "    widths = {}\n", "error": "none", "author": "tom@organisms.be"}, {"index": "45", "colour": "orange", "code": "    r = []\n", "error": "none", "author": "tom@organisms.be"}, {"index": "46", "colour": "orange", "code": "    for v in seq:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "47", "colour": "orange", "code": "        if isinstance(v, list):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "48", "colour": "orange", "code": "            if r:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "49", "colour": "orange", "code": "                char1 = r[-1]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "50", "colour": "orange", "code": "                for (i,(w,vx,vy)) in enumerate(choplist(3,v)):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "51", "colour": "orange", "code": "                    widths[char1+i] = (w,(vx,vy))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "52", "colour": "orange", "code": "                r = []\n", "error": "none", "author": "tom@organisms.be"}, {"index": "53", "colour": "orange", "code": "        elif isinstance(v, int):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "54", "colour": "orange", "code": "            r.append(v)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "55", "colour": "orange", "code": "            if len(r) == 5:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "56", "colour": "green", "code": "                (char1,char2,w,vx,vy) = r\n", "error": "W", "author": "tom@organisms.be"}, {"index": "57", "colour": "orange", "code": "                for i in xrange(char1, char2+1):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "58", "colour": "orange", "code": "                    widths[i] = (w,(vx,vy))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "59", "colour": "orange", "code": "                r = []\n", "error": "none", "author": "tom@organisms.be"}, {"index": "60", "colour": "orange", "code": "    return widths\n", "error": "none", "author": "tom@organisms.be"}, {"index": "61", "colour": "orange", "code": "#assert get_widths2([1]) == {}\n", "error": "none", "author": "tom@organisms.be"}, {"index": "62", "colour": "orange", "code": "#assert get_widths2([1,2,3,4,5]) == {1:(3,(4,5)), 2:(3,(4,5))}\n", "error": "none", "author": "tom@organisms.be"}, {"index": "63", "colour": "orange", "code": "#assert get_widths2([1,[2,3,4,5],6,[7,8,9]]) == {1:(2,(3,4)), 6:(7,(8,9))}\n", "error": "none", "author": "tom@organisms.be"}, {"index": "64", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "65", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "66", "colour": "orange", "code": "##  FontMetricsDB\n", "error": "none", "author": "tom@organisms.be"}, {"index": "67", "colour": "orange", "code": "##\n", "error": "none", "author": "tom@organisms.be"}, {"index": "68", "colour": "blue", "code": "class FontMetricsDB(object):\n", "error": "R", "author": "tom@organisms.be"}, {"index": "69", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "70", "colour": "orange", "code": "    @classmethod\n", "error": "none", "author": "tom@organisms.be"}, {"index": "71", "colour": "orange", "code": "    def get_metrics(klass, fontname):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "72", "colour": "orange", "code": "        return FONT_METRICS[fontname]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "73", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "74", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "75", "colour": "orange", "code": "##  Type1FontHeaderParser\n", "error": "none", "author": "tom@organisms.be"}, {"index": "76", "colour": "orange", "code": "##\n", "error": "none", "author": "tom@organisms.be"}, {"index": "77", "colour": "orange", "code": "class Type1FontHeaderParser(PSStackParser):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "78", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "79", "colour": "orange", "code": "    KEYWORD_BEGIN = KWD('begin')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "80", "colour": "orange", "code": "    KEYWORD_END = KWD('end')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "81", "colour": "orange", "code": "    KEYWORD_DEF = KWD('def')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "82", "colour": "orange", "code": "    KEYWORD_PUT = KWD('put')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "83", "colour": "orange", "code": "    KEYWORD_DICT = KWD('dict')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "84", "colour": "orange", "code": "    KEYWORD_ARRAY = KWD('array')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "85", "colour": "orange", "code": "    KEYWORD_READONLY = KWD('readonly')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "86", "colour": "orange", "code": "    KEYWORD_FOR = KWD('for')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "87", "colour": "orange", "code": "    KEYWORD_FOR = KWD('for')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "88", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "89", "colour": "orange", "code": "    def __init__(self, data):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "90", "colour": "orange", "code": "        PSStackParser.__init__(self, data)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "91", "colour": "orange", "code": "        self._cid2unicode = {}\n", "error": "none", "author": "tom@organisms.be"}, {"index": "92", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "93", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "94", "colour": "orange", "code": "    def get_encoding(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "95", "colour": "orange", "code": "        while 1:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "96", "colour": "orange", "code": "            try:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "97", "colour": "orange", "code": "                (cid,name) = self.nextobject()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "98", "colour": "orange", "code": "            except PSEOF:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "99", "colour": "orange", "code": "                break\n", "error": "none", "author": "tom@organisms.be"}, {"index": "100", "colour": "orange", "code": "            try:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "101", "colour": "orange", "code": "                self._cid2unicode[cid] = name2unicode(name)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "102", "colour": "orange", "code": "            except KeyError:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "103", "colour": "orange", "code": "                pass\n", "error": "none", "author": "tom@organisms.be"}, {"index": "104", "colour": "orange", "code": "        return self._cid2unicode\n", "error": "none", "author": "tom@organisms.be"}, {"index": "105", "colour": "orange", "code": "    \n", "error": "none", "author": "tom@organisms.be"}, {"index": "106", "colour": "orange", "code": "    def do_keyword(self, pos, token):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "107", "colour": "orange", "code": "        if token is self.KEYWORD_PUT:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "108", "colour": "orange", "code": "            ((_,key),(_,value)) = self.pop(2)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "109", "colour": "orange", "code": "            if (isinstance(key, int) and\n", "error": "none", "author": "tom@organisms.be"}, {"index": "110", "colour": "orange", "code": "                isinstance(value, PSLiteral)):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "111", "colour": "orange", "code": "                self.add_results((key, literal_name(value)))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "112", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "113", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "114", "colour": "orange", "code": "    \n", "error": "none", "author": "tom@organisms.be"}, {"index": "115", "colour": "orange", "code": "##  CFFFont\n", "error": "none", "author": "tom@organisms.be"}, {"index": "116", "colour": "orange", "code": "##  (Format specified in Adobe Technical Note: #5176\n", "error": "none", "author": "tom@organisms.be"}, {"index": "117", "colour": "orange", "code": "##   \"The Compact Font Format Specification\")\n", "error": "none", "author": "tom@organisms.be"}, {"index": "118", "colour": "orange", "code": "##\n", "error": "none", "author": "tom@organisms.be"}, {"index": "119", "colour": "orange", "code": "NIBBLES = ('0','1','2','3','4','5','6','7','8','9','.','e','e-',None,'-')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "120", "colour": "blue", "code": "def getdict(data):\n", "error": "R", "author": "tom@organisms.be"}, {"index": "121", "colour": "orange", "code": "    d = {}\n", "error": "none", "author": "tom@organisms.be"}, {"index": "122", "colour": "orange", "code": "    fp = StringIO(data)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "123", "colour": "orange", "code": "    stack = []\n", "error": "none", "author": "tom@organisms.be"}, {"index": "124", "colour": "orange", "code": "    while 1:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "125", "colour": "orange", "code": "        c = fp.read(1)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "126", "colour": "orange", "code": "        if not c: break\n", "error": "none", "author": "tom@organisms.be"}, {"index": "127", "colour": "orange", "code": "        b0 = ord(c)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "128", "colour": "orange", "code": "        if b0 <= 21:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "129", "colour": "orange", "code": "            d[b0] = stack\n", "error": "none", "author": "tom@organisms.be"}, {"index": "130", "colour": "orange", "code": "            stack = []\n", "error": "none", "author": "tom@organisms.be"}, {"index": "131", "colour": "orange", "code": "            continue\n", "error": "none", "author": "tom@organisms.be"}, {"index": "132", "colour": "orange", "code": "        if b0 == 30:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "133", "colour": "orange", "code": "            s = ''\n", "error": "none", "author": "tom@organisms.be"}, {"index": "134", "colour": "orange", "code": "            loop = True\n", "error": "none", "author": "tom@organisms.be"}, {"index": "135", "colour": "orange", "code": "            while loop:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "136", "colour": "orange", "code": "                b = ord(fp.read(1))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "137", "colour": "orange", "code": "                for n in (b >> 4, b & 15):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "138", "colour": "orange", "code": "                    if n == 15:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "139", "colour": "orange", "code": "                        loop = False\n", "error": "none", "author": "tom@organisms.be"}, {"index": "140", "colour": "orange", "code": "                    else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "141", "colour": "orange", "code": "                        s += NIBBLES[n]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "142", "colour": "orange", "code": "            value = float(s)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "143", "colour": "orange", "code": "        elif 32 <= b0 and b0 <= 246:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "144", "colour": "orange", "code": "            value = b0-139\n", "error": "none", "author": "tom@organisms.be"}, {"index": "145", "colour": "orange", "code": "        else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "146", "colour": "orange", "code": "            b1 = ord(fp.read(1))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "147", "colour": "orange", "code": "            if 247 <= b0 and b0 <= 250:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "148", "colour": "orange", "code": "                value = ((b0-247)<<8)+b1+108\n", "error": "none", "author": "tom@organisms.be"}, {"index": "149", "colour": "orange", "code": "            elif 251 <= b0 and b0 <= 254:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "150", "colour": "orange", "code": "                value = -((b0-251)<<8)-b1-108\n", "error": "none", "author": "tom@organisms.be"}, {"index": "151", "colour": "orange", "code": "            else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "152", "colour": "orange", "code": "                b2 = ord(fp.read(1))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "153", "colour": "orange", "code": "                if 128 <= b1: b1 -= 256\n", "error": "none", "author": "tom@organisms.be"}, {"index": "154", "colour": "orange", "code": "                if b0 == 28:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "155", "colour": "orange", "code": "                    value = b1<<8 | b2\n", "error": "none", "author": "tom@organisms.be"}, {"index": "156", "colour": "orange", "code": "                else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "157", "colour": "orange", "code": "                    value = b1<<24 | b2<<16 | struct.unpack('>H', fp.read(2))[0]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "158", "colour": "orange", "code": "        stack.append(value)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "159", "colour": "orange", "code": "    return d\n", "error": "none", "author": "tom@organisms.be"}, {"index": "160", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "161", "colour": "blue", "code": "class CFFFont(object):\n", "error": "R", "author": "tom@organisms.be"}, {"index": "162", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "163", "colour": "orange", "code": "    STANDARD_STRINGS = (\n", "error": "none", "author": "tom@organisms.be"}, {"index": "164", "colour": "orange", "code": "      '.notdef', 'space', 'exclam', 'quotedbl', 'numbersign',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "165", "colour": "orange", "code": "      'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "166", "colour": "orange", "code": "      'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "167", "colour": "orange", "code": "      'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "168", "colour": "orange", "code": "      'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "169", "colour": "orange", "code": "      'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "170", "colour": "orange", "code": "      'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "171", "colour": "orange", "code": "      'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "172", "colour": "orange", "code": "      'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "173", "colour": "orange", "code": "      'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "174", "colour": "orange", "code": "      'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "175", "colour": "orange", "code": "      'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "176", "colour": "orange", "code": "      'cent', 'sterling', 'fraction', 'yen', 'florin', 'section',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "177", "colour": "orange", "code": "      'currency', 'quotesingle', 'quotedblleft', 'guillemotleft',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "178", "colour": "orange", "code": "      'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "179", "colour": "orange", "code": "      'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "180", "colour": "orange", "code": "      'quotesinglbase', 'quotedblbase', 'quotedblright',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "181", "colour": "orange", "code": "      'guillemotright', 'ellipsis', 'perthousand', 'questiondown',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "182", "colour": "orange", "code": "      'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "183", "colour": "orange", "code": "      'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "184", "colour": "orange", "code": "      'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "185", "colour": "orange", "code": "      'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "186", "colour": "orange", "code": "      'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "187", "colour": "orange", "code": "      'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "188", "colour": "orange", "code": "      'onequarter', 'divide', 'brokenbar', 'degree', 'thorn',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "189", "colour": "orange", "code": "      'threequarters', 'twosuperior', 'registered', 'minus', 'eth',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "190", "colour": "orange", "code": "      'multiply', 'threesuperior', 'copyright', 'Aacute',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "191", "colour": "orange", "code": "      'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "192", "colour": "orange", "code": "      'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "193", "colour": "orange", "code": "      'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "194", "colour": "orange", "code": "      'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "195", "colour": "orange", "code": "      'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "196", "colour": "orange", "code": "      'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "197", "colour": "orange", "code": "      'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "198", "colour": "orange", "code": "      'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "199", "colour": "orange", "code": "      'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "200", "colour": "orange", "code": "      'odieresis', 'ograve', 'otilde', 'scaron', 'uacute',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "201", "colour": "orange", "code": "      'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "202", "colour": "orange", "code": "      'zcaron', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "203", "colour": "orange", "code": "      'dollarsuperior', 'ampersandsmall', 'Acutesmall',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "204", "colour": "orange", "code": "      'parenleftsuperior', 'parenrightsuperior', 'twodotenleader',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "205", "colour": "orange", "code": "      'onedotenleader', 'zerooldstyle', 'oneoldstyle', 'twooldstyle',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "206", "colour": "orange", "code": "      'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "207", "colour": "orange", "code": "      'sevenoldstyle', 'eightoldstyle', 'nineoldstyle',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "208", "colour": "orange", "code": "      'commasuperior', 'threequartersemdash', 'periodsuperior',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "209", "colour": "orange", "code": "      'questionsmall', 'asuperior', 'bsuperior', 'centsuperior',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "210", "colour": "orange", "code": "      'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "211", "colour": "orange", "code": "      'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "212", "colour": "orange", "code": "      'ff', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "213", "colour": "orange", "code": "      'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "214", "colour": "orange", "code": "      'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "215", "colour": "orange", "code": "      'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "216", "colour": "orange", "code": "      'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "217", "colour": "orange", "code": "      'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "218", "colour": "orange", "code": "      'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "219", "colour": "orange", "code": "      'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "220", "colour": "orange", "code": "      'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "221", "colour": "orange", "code": "      'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "222", "colour": "orange", "code": "      'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'questiondownsmall',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "223", "colour": "orange", "code": "      'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "224", "colour": "orange", "code": "      'onethird', 'twothirds', 'zerosuperior', 'foursuperior',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "225", "colour": "orange", "code": "      'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "226", "colour": "orange", "code": "      'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "227", "colour": "orange", "code": "      'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "228", "colour": "orange", "code": "      'seveninferior', 'eightinferior', 'nineinferior',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "229", "colour": "orange", "code": "      'centinferior', 'dollarinferior', 'periodinferior',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "230", "colour": "orange", "code": "      'commainferior', 'Agravesmall', 'Aacutesmall',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "231", "colour": "orange", "code": "      'Acircumflexsmall', 'Atildesmall', 'Adieresissmall',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "232", "colour": "orange", "code": "      'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "233", "colour": "orange", "code": "      'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "234", "colour": "orange", "code": "      'Igravesmall', 'Iacutesmall', 'Icircumflexsmall',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "235", "colour": "orange", "code": "      'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "236", "colour": "orange", "code": "      'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "237", "colour": "orange", "code": "      'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "238", "colour": "orange", "code": "      'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "239", "colour": "orange", "code": "      'Yacutesmall', 'Thornsmall', 'Ydieresissmall', '001.000',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "240", "colour": "orange", "code": "      '001.001', '001.002', '001.003', 'Black', 'Bold', 'Book',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "241", "colour": "orange", "code": "      'Light', 'Medium', 'Regular', 'Roman', 'Semibold',\n", "error": "none", "author": "tom@organisms.be"}, {"index": "242", "colour": "orange", "code": "      )\n", "error": "none", "author": "tom@organisms.be"}, {"index": "243", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "244", "colour": "blue", "code": "    class INDEX(object):\n", "error": "R", "author": "tom@organisms.be"}, {"index": "245", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "246", "colour": "orange", "code": "        def __init__(self, fp):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "247", "colour": "orange", "code": "            self.fp = fp\n", "error": "none", "author": "tom@organisms.be"}, {"index": "248", "colour": "orange", "code": "            self.offsets = []\n", "error": "none", "author": "tom@organisms.be"}, {"index": "249", "colour": "orange", "code": "            (count, offsize) = struct.unpack('>HB', self.fp.read(3))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "250", "colour": "green", "code": "            for i in xrange(count+1):\n", "error": "W", "author": "tom@organisms.be"}, {"index": "251", "colour": "orange", "code": "                self.offsets.append(nunpack(self.fp.read(offsize)))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "252", "colour": "orange", "code": "            self.base = self.fp.tell()-1\n", "error": "none", "author": "tom@organisms.be"}, {"index": "253", "colour": "orange", "code": "            self.fp.seek(self.base+self.offsets[-1])\n", "error": "none", "author": "tom@organisms.be"}, {"index": "254", "colour": "orange", "code": "            return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "255", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "256", "colour": "orange", "code": "        def __repr__(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "257", "colour": "orange", "code": "            return '<INDEX: size=%d>' % len(self)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "258", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "259", "colour": "orange", "code": "        def __len__(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "260", "colour": "orange", "code": "            return len(self.offsets)-1\n", "error": "none", "author": "tom@organisms.be"}, {"index": "261", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "262", "colour": "orange", "code": "        def __getitem__(self, i):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "263", "colour": "orange", "code": "            self.fp.seek(self.base+self.offsets[i])\n", "error": "none", "author": "tom@organisms.be"}, {"index": "264", "colour": "orange", "code": "            return self.fp.read(self.offsets[i+1]-self.offsets[i])\n", "error": "none", "author": "tom@organisms.be"}, {"index": "265", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "266", "colour": "orange", "code": "        def __iter__(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "267", "colour": "orange", "code": "            return iter( self[i] for i in xrange(len(self)) )\n", "error": "none", "author": "tom@organisms.be"}, {"index": "268", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "269", "colour": "blue", "code": "    def __init__(self, name, fp):\n", "error": "R", "author": "tom@organisms.be"}, {"index": "270", "colour": "orange", "code": "        self.name = name\n", "error": "none", "author": "tom@organisms.be"}, {"index": "271", "colour": "orange", "code": "        self.fp = fp\n", "error": "none", "author": "tom@organisms.be"}, {"index": "272", "colour": "orange", "code": "        # Header\n", "error": "none", "author": "tom@organisms.be"}, {"index": "273", "colour": "green", "code": "        (_major,_minor,hdrsize,offsize) = struct.unpack('BBBB', self.fp.read(4))\n", "error": "W", "author": "tom@organisms.be"}, {"index": "274", "colour": "orange", "code": "        self.fp.read(hdrsize-4)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "275", "colour": "orange", "code": "        # Name INDEX\n", "error": "none", "author": "tom@organisms.be"}, {"index": "276", "colour": "orange", "code": "        self.name_index = self.INDEX(self.fp)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "277", "colour": "orange", "code": "        # Top DICT INDEX\n", "error": "none", "author": "tom@organisms.be"}, {"index": "278", "colour": "orange", "code": "        self.dict_index = self.INDEX(self.fp)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "279", "colour": "orange", "code": "        # String INDEX\n", "error": "none", "author": "tom@organisms.be"}, {"index": "280", "colour": "orange", "code": "        self.string_index = self.INDEX(self.fp)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "281", "colour": "orange", "code": "        # Global Subr INDEX\n", "error": "none", "author": "tom@organisms.be"}, {"index": "282", "colour": "orange", "code": "        self.subr_index = self.INDEX(self.fp)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "283", "colour": "orange", "code": "        # Top DICT DATA\n", "error": "none", "author": "tom@organisms.be"}, {"index": "284", "colour": "orange", "code": "        self.top_dict = getdict(self.dict_index[0])\n", "error": "none", "author": "tom@organisms.be"}, {"index": "285", "colour": "orange", "code": "        (charset_pos,) = self.top_dict.get(15, [0])\n", "error": "none", "author": "tom@organisms.be"}, {"index": "286", "colour": "orange", "code": "        (encoding_pos,) = self.top_dict.get(16, [0])\n", "error": "none", "author": "tom@organisms.be"}, {"index": "287", "colour": "orange", "code": "        (charstring_pos,) = self.top_dict.get(17, [0])\n", "error": "none", "author": "tom@organisms.be"}, {"index": "288", "colour": "orange", "code": "        # CharStrings\n", "error": "none", "author": "tom@organisms.be"}, {"index": "289", "colour": "orange", "code": "        self.fp.seek(charstring_pos)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "290", "colour": "orange", "code": "        self.charstring = self.INDEX(self.fp)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "291", "colour": "orange", "code": "        self.nglyphs = len(self.charstring)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "292", "colour": "orange", "code": "        # Encodings\n", "error": "none", "author": "tom@organisms.be"}, {"index": "293", "colour": "orange", "code": "        self.code2gid = {}\n", "error": "none", "author": "tom@organisms.be"}, {"index": "294", "colour": "orange", "code": "        self.gid2code = {}\n", "error": "none", "author": "tom@organisms.be"}, {"index": "295", "colour": "orange", "code": "        self.fp.seek(encoding_pos)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "296", "colour": "green", "code": "        format = self.fp.read(1)\n", "error": "W", "author": "tom@organisms.be"}, {"index": "297", "colour": "orange", "code": "        if format == '\\x00':\n", "error": "none", "author": "tom@organisms.be"}, {"index": "298", "colour": "orange", "code": "            # Format 0\n", "error": "none", "author": "tom@organisms.be"}, {"index": "299", "colour": "orange", "code": "            (n,) = struct.unpack('B', self.fp.read(1))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "300", "colour": "orange", "code": "            for (code,gid) in enumerate(struct.unpack('B'*n, self.fp.read(n))):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "301", "colour": "orange", "code": "                self.code2gid[code] = gid\n", "error": "none", "author": "tom@organisms.be"}, {"index": "302", "colour": "orange", "code": "                self.gid2code[gid] = code\n", "error": "none", "author": "tom@organisms.be"}, {"index": "303", "colour": "orange", "code": "        elif format == '\\x01':\n", "error": "none", "author": "tom@organisms.be"}, {"index": "304", "colour": "orange", "code": "            # Format 1\n", "error": "none", "author": "tom@organisms.be"}, {"index": "305", "colour": "orange", "code": "            (n,) = struct.unpack('B', self.fp.read(1))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "306", "colour": "orange", "code": "            code = 0\n", "error": "none", "author": "tom@organisms.be"}, {"index": "307", "colour": "green", "code": "            for i in xrange(n):\n", "error": "W", "author": "tom@organisms.be"}, {"index": "308", "colour": "orange", "code": "                (first,nleft) = struct.unpack('BB', self.fp.read(2))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "309", "colour": "orange", "code": "                for gid in xrange(first,first+nleft+1):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "310", "colour": "orange", "code": "                    self.code2gid[code] = gid\n", "error": "none", "author": "tom@organisms.be"}, {"index": "311", "colour": "orange", "code": "                    self.gid2code[gid] = code\n", "error": "none", "author": "tom@organisms.be"}, {"index": "312", "colour": "orange", "code": "                    code += 1\n", "error": "none", "author": "tom@organisms.be"}, {"index": "313", "colour": "orange", "code": "        else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "314", "colour": "orange", "code": "            raise ValueError('unsupported encoding format: %r' % format)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "315", "colour": "orange", "code": "        # Charsets\n", "error": "none", "author": "tom@organisms.be"}, {"index": "316", "colour": "orange", "code": "        self.name2gid = {}\n", "error": "none", "author": "tom@organisms.be"}, {"index": "317", "colour": "orange", "code": "        self.gid2name = {}\n", "error": "none", "author": "tom@organisms.be"}, {"index": "318", "colour": "orange", "code": "        self.fp.seek(charset_pos)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "319", "colour": "orange", "code": "        format = self.fp.read(1)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "320", "colour": "orange", "code": "        if format == '\\x00':\n", "error": "none", "author": "tom@organisms.be"}, {"index": "321", "colour": "orange", "code": "            # Format 0\n", "error": "none", "author": "tom@organisms.be"}, {"index": "322", "colour": "orange", "code": "            n = self.nglyphs-1\n", "error": "none", "author": "tom@organisms.be"}, {"index": "323", "colour": "orange", "code": "            for (gid,sid) in enumerate(struct.unpack('>'+'H'*n, self.fp.read(2*n))):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "324", "colour": "orange", "code": "                gid += 1\n", "error": "none", "author": "tom@organisms.be"}, {"index": "325", "colour": "orange", "code": "                name = self.getstr(sid)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "326", "colour": "orange", "code": "                self.name2gid[name] = gid\n", "error": "none", "author": "tom@organisms.be"}, {"index": "327", "colour": "orange", "code": "                self.gid2name[gid] = name\n", "error": "none", "author": "tom@organisms.be"}, {"index": "328", "colour": "orange", "code": "        elif format == '\\x01':\n", "error": "none", "author": "tom@organisms.be"}, {"index": "329", "colour": "orange", "code": "            # Format 1\n", "error": "none", "author": "tom@organisms.be"}, {"index": "330", "colour": "orange", "code": "            (n,) = struct.unpack('B', self.fp.read(1))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "331", "colour": "orange", "code": "            sid = 0\n", "error": "none", "author": "tom@organisms.be"}, {"index": "332", "colour": "orange", "code": "            for i in xrange(n):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "333", "colour": "orange", "code": "                (first,nleft) = struct.unpack('BB', self.fp.read(2))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "334", "colour": "orange", "code": "                for gid in xrange(first,first+nleft+1):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "335", "colour": "orange", "code": "                    name = self.getstr(sid)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "336", "colour": "orange", "code": "                    self.name2gid[name] = gid\n", "error": "none", "author": "tom@organisms.be"}, {"index": "337", "colour": "orange", "code": "                    self.gid2name[gid] = name\n", "error": "none", "author": "tom@organisms.be"}, {"index": "338", "colour": "orange", "code": "                    sid += 1\n", "error": "none", "author": "tom@organisms.be"}, {"index": "339", "colour": "orange", "code": "        elif format == '\\x02':\n", "error": "none", "author": "tom@organisms.be"}, {"index": "340", "colour": "orange", "code": "            # Format 2\n", "error": "none", "author": "tom@organisms.be"}, {"index": "341", "colour": "orange", "code": "            assert 0\n", "error": "none", "author": "tom@organisms.be"}, {"index": "342", "colour": "orange", "code": "        else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "343", "colour": "orange", "code": "            raise ValueError('unsupported charset format: %r' % format)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "344", "colour": "orange", "code": "        #print self.code2gid\n", "error": "none", "author": "tom@organisms.be"}, {"index": "345", "colour": "orange", "code": "        #print self.name2gid\n", "error": "none", "author": "tom@organisms.be"}, {"index": "346", "colour": "orange", "code": "        #assert 0\n", "error": "none", "author": "tom@organisms.be"}, {"index": "347", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "348", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "349", "colour": "orange", "code": "    def getstr(self, sid):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "350", "colour": "orange", "code": "        if sid < len(self.STANDARD_STRINGS):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "351", "colour": "orange", "code": "            return self.STANDARD_STRINGS[sid]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "352", "colour": "orange", "code": "        return self.string_index[sid-len(self.STANDARD_STRINGS)]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "353", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "354", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "355", "colour": "orange", "code": "##  TrueTypeFont\n", "error": "none", "author": "tom@organisms.be"}, {"index": "356", "colour": "orange", "code": "##\n", "error": "none", "author": "tom@organisms.be"}, {"index": "357", "colour": "blue", "code": "class TrueTypeFont(object):\n", "error": "R", "author": "tom@organisms.be"}, {"index": "358", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "359", "colour": "orange", "code": "    class CMapNotFound(Exception): pass\n", "error": "none", "author": "tom@organisms.be"}, {"index": "360", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "361", "colour": "orange", "code": "    def __init__(self, name, fp):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "362", "colour": "orange", "code": "        self.name = name\n", "error": "none", "author": "tom@organisms.be"}, {"index": "363", "colour": "orange", "code": "        self.fp = fp\n", "error": "none", "author": "tom@organisms.be"}, {"index": "364", "colour": "orange", "code": "        self.tables = {}\n", "error": "none", "author": "tom@organisms.be"}, {"index": "365", "colour": "orange", "code": "        self.fonttype = fp.read(4)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "366", "colour": "green", "code": "        (ntables, _1, _2, _3) = struct.unpack('>HHHH', fp.read(8))\n", "error": "W", "author": "tom@organisms.be"}, {"index": "367", "colour": "orange", "code": "        for _ in xrange(ntables):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "368", "colour": "green", "code": "            (name, tsum, offset, length) = struct.unpack('>4sLLL', fp.read(16))\n", "error": "W", "author": "tom@organisms.be"}, {"index": "369", "colour": "orange", "code": "            self.tables[name] = (offset, length)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "370", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "371", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "372", "colour": "blue", "code": "    def create_unicode_map(self):\n", "error": "R", "author": "tom@organisms.be"}, {"index": "373", "colour": "orange", "code": "        if 'cmap' not in self.tables:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "374", "colour": "orange", "code": "            raise TrueTypeFont.CMapNotFound\n", "error": "none", "author": "tom@organisms.be"}, {"index": "375", "colour": "green", "code": "        (base_offset, length) = self.tables['cmap']\n", "error": "W", "author": "tom@organisms.be"}, {"index": "376", "colour": "orange", "code": "        fp = self.fp\n", "error": "none", "author": "tom@organisms.be"}, {"index": "377", "colour": "orange", "code": "        fp.seek(base_offset)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "378", "colour": "green", "code": "        (version, nsubtables) = struct.unpack('>HH', fp.read(4))\n", "error": "W", "author": "tom@organisms.be"}, {"index": "379", "colour": "orange", "code": "        subtables = []\n", "error": "none", "author": "tom@organisms.be"}, {"index": "380", "colour": "orange", "code": "        for i in xrange(nsubtables):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "381", "colour": "orange", "code": "            subtables.append(struct.unpack('>HHL', fp.read(8)))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "382", "colour": "orange", "code": "        char2gid = {}\n", "error": "none", "author": "tom@organisms.be"}, {"index": "383", "colour": "orange", "code": "        # Only supports subtable type 0, 2 and 4.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "384", "colour": "green", "code": "        for (_1, _2, st_offset) in subtables:\n", "error": "W", "author": "tom@organisms.be"}, {"index": "385", "colour": "orange", "code": "            fp.seek(base_offset+st_offset)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "386", "colour": "green", "code": "            (fmttype, fmtlen, fmtlang) = struct.unpack('>HHH', fp.read(6))\n", "error": "W", "author": "tom@organisms.be"}, {"index": "387", "colour": "orange", "code": "            if fmttype == 0:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "388", "colour": "orange", "code": "                char2gid.update(enumerate(struct.unpack('>256B', fp.read(256))))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "389", "colour": "orange", "code": "            elif fmttype == 2:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "390", "colour": "orange", "code": "                subheaderkeys = struct.unpack('>256H', fp.read(512))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "391", "colour": "orange", "code": "                firstbytes = [0]*8192\n", "error": "none", "author": "tom@organisms.be"}, {"index": "392", "colour": "orange", "code": "                for (i,k) in enumerate(subheaderkeys):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "393", "colour": "orange", "code": "                    firstbytes[k/8] = i\n", "error": "none", "author": "tom@organisms.be"}, {"index": "394", "colour": "orange", "code": "                nhdrs = max(subheaderkeys)/8 + 1\n", "error": "none", "author": "tom@organisms.be"}, {"index": "395", "colour": "orange", "code": "                hdrs = []\n", "error": "none", "author": "tom@organisms.be"}, {"index": "396", "colour": "orange", "code": "                for i in xrange(nhdrs):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "397", "colour": "orange", "code": "                    (firstcode,entcount,delta,offset) = struct.unpack('>HHhH', fp.read(8))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "398", "colour": "orange", "code": "                    hdrs.append((i,firstcode,entcount,delta,fp.tell()-2+offset))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "399", "colour": "orange", "code": "                for (i,firstcode,entcount,delta,pos) in hdrs:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "400", "colour": "orange", "code": "                    if not entcount: continue\n", "error": "none", "author": "tom@organisms.be"}, {"index": "401", "colour": "orange", "code": "                    first = firstcode + (firstbytes[i] << 8)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "402", "colour": "orange", "code": "                    fp.seek(pos)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "403", "colour": "orange", "code": "                    for c in xrange(entcount):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "404", "colour": "orange", "code": "                        gid = struct.unpack('>H', fp.read(2))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "405", "colour": "orange", "code": "                        if gid:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "406", "colour": "orange", "code": "                            gid += delta\n", "error": "none", "author": "tom@organisms.be"}, {"index": "407", "colour": "orange", "code": "                        char2gid[first+c] = gid\n", "error": "none", "author": "tom@organisms.be"}, {"index": "408", "colour": "orange", "code": "            elif fmttype == 4:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "409", "colour": "green", "code": "                (segcount, _1, _2, _3) = struct.unpack('>HHHH', fp.read(8))\n", "error": "W", "author": "tom@organisms.be"}, {"index": "410", "colour": "orange", "code": "                segcount /= 2\n", "error": "none", "author": "tom@organisms.be"}, {"index": "411", "colour": "orange", "code": "                ecs = struct.unpack('>%dH' % segcount, fp.read(2*segcount))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "412", "colour": "orange", "code": "                fp.read(2)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "413", "colour": "orange", "code": "                scs = struct.unpack('>%dH' % segcount, fp.read(2*segcount))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "414", "colour": "orange", "code": "                idds = struct.unpack('>%dh' % segcount, fp.read(2*segcount))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "415", "colour": "orange", "code": "                pos = fp.tell()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "416", "colour": "orange", "code": "                idrs = struct.unpack('>%dH' % segcount, fp.read(2*segcount))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "417", "colour": "orange", "code": "                for (ec,sc,idd,idr) in zip(ecs, scs, idds, idrs):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "418", "colour": "orange", "code": "                    if idr:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "419", "colour": "orange", "code": "                        fp.seek(pos+idr)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "420", "colour": "orange", "code": "                        for c in xrange(sc, ec+1):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "421", "colour": "orange", "code": "                            char2gid[c] = (struct.unpack('>H', fp.read(2))[0] + idd) & 0xffff\n", "error": "none", "author": "tom@organisms.be"}, {"index": "422", "colour": "orange", "code": "                    else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "423", "colour": "orange", "code": "                        for c in xrange(sc, ec+1):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "424", "colour": "orange", "code": "                            char2gid[c] = (c + idd) & 0xffff\n", "error": "none", "author": "tom@organisms.be"}, {"index": "425", "colour": "orange", "code": "            else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "426", "colour": "orange", "code": "                assert 0\n", "error": "none", "author": "tom@organisms.be"}, {"index": "427", "colour": "orange", "code": "        # create unicode map\n", "error": "none", "author": "tom@organisms.be"}, {"index": "428", "colour": "orange", "code": "        unicode_map = FileUnicodeMap()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "429", "colour": "orange", "code": "        for (char,gid) in char2gid.iteritems():\n", "error": "none", "author": "tom@organisms.be"}, {"index": "430", "colour": "orange", "code": "            unicode_map.add_cid2unichr(gid, char)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "431", "colour": "orange", "code": "        return unicode_map\n", "error": "none", "author": "tom@organisms.be"}, {"index": "432", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "433", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "434", "colour": "orange", "code": "##  Fonts\n", "error": "none", "author": "tom@organisms.be"}, {"index": "435", "colour": "orange", "code": "##\n", "error": "none", "author": "tom@organisms.be"}, {"index": "436", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "437", "colour": "orange", "code": "class PDFFontError(PDFException): pass\n", "error": "none", "author": "tom@organisms.be"}, {"index": "438", "colour": "orange", "code": "class PDFUnicodeNotDefined(PDFFontError): pass\n", "error": "none", "author": "tom@organisms.be"}, {"index": "439", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "440", "colour": "orange", "code": "LITERAL_STANDARD_ENCODING = LIT('StandardEncoding')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "441", "colour": "orange", "code": "LITERAL_TYPE1C = LIT('Type1C')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "442", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "443", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "444", "colour": "orange", "code": "# PDFFont\n", "error": "none", "author": "tom@organisms.be"}, {"index": "445", "colour": "blue", "code": "class PDFFont(object):\n", "error": "R", "author": "tom@organisms.be"}, {"index": "446", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "447", "colour": "orange", "code": "    def __init__(self, descriptor, widths, default_width=None):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "448", "colour": "orange", "code": "        self.descriptor = descriptor\n", "error": "none", "author": "tom@organisms.be"}, {"index": "449", "colour": "orange", "code": "        self.widths = widths\n", "error": "none", "author": "tom@organisms.be"}, {"index": "450", "colour": "orange", "code": "        self.fontname = resolve1(descriptor.get('FontName', 'unknown'))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "451", "colour": "orange", "code": "        if isinstance(self.fontname, PSLiteral):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "452", "colour": "orange", "code": "            self.fontname = literal_name(self.fontname)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "453", "colour": "orange", "code": "        self.flags = int_value(descriptor.get('Flags', 0))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "454", "colour": "orange", "code": "        self.ascent = num_value(descriptor.get('Ascent', 0))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "455", "colour": "orange", "code": "        self.descent = num_value(descriptor.get('Descent', 0))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "456", "colour": "orange", "code": "        self.italic_angle = num_value(descriptor.get('ItalicAngle', 0))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "457", "colour": "orange", "code": "        self.default_width = default_width or num_value(descriptor.get('MissingWidth', 0))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "458", "colour": "orange", "code": "        self.leading = num_value(descriptor.get('Leading', 0))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "459", "colour": "orange", "code": "        self.bbox = list_value(descriptor.get('FontBBox', (0,0,0,0)))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "460", "colour": "orange", "code": "        self.hscale = self.vscale = .001\n", "error": "none", "author": "tom@organisms.be"}, {"index": "461", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "462", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "463", "colour": "orange", "code": "    def __repr__(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "464", "colour": "orange", "code": "        return '<PDFFont>'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "465", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "466", "colour": "blue", "code": "    def is_vertical(self):\n", "error": "R", "author": "tom@organisms.be"}, {"index": "467", "colour": "orange", "code": "        return False\n", "error": "none", "author": "tom@organisms.be"}, {"index": "468", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "469", "colour": "blue", "code": "    def is_multibyte(self):\n", "error": "R", "author": "tom@organisms.be"}, {"index": "470", "colour": "orange", "code": "        return False\n", "error": "none", "author": "tom@organisms.be"}, {"index": "471", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "472", "colour": "blue", "code": "    def decode(self, bytes):\n", "error": "R", "author": "tom@organisms.be"}, {"index": "473", "colour": "green", "code": "        return map(ord, bytes)\n", "error": "W", "author": "tom@organisms.be"}, {"index": "474", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "475", "colour": "orange", "code": "    def get_ascent(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "476", "colour": "orange", "code": "        return self.ascent * self.vscale\n", "error": "none", "author": "tom@organisms.be"}, {"index": "477", "colour": "orange", "code": "    def get_descent(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "478", "colour": "orange", "code": "        return self.descent * self.vscale\n", "error": "none", "author": "tom@organisms.be"}, {"index": "479", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "480", "colour": "orange", "code": "    def get_width(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "481", "colour": "orange", "code": "        w = self.bbox[2]-self.bbox[0]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "482", "colour": "orange", "code": "        if w == 0:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "483", "colour": "orange", "code": "            w = -self.default_width\n", "error": "none", "author": "tom@organisms.be"}, {"index": "484", "colour": "orange", "code": "        return w * self.hscale\n", "error": "none", "author": "tom@organisms.be"}, {"index": "485", "colour": "orange", "code": "    def get_height(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "486", "colour": "orange", "code": "        h = self.bbox[3]-self.bbox[1]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "487", "colour": "orange", "code": "        if h == 0:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "488", "colour": "orange", "code": "            h = self.ascent - self.descent\n", "error": "none", "author": "tom@organisms.be"}, {"index": "489", "colour": "orange", "code": "        return h * self.vscale\n", "error": "none", "author": "tom@organisms.be"}, {"index": "490", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "491", "colour": "orange", "code": "    def char_width(self, cid):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "492", "colour": "orange", "code": "        return self.widths.get(cid, self.default_width) * self.hscale\n", "error": "none", "author": "tom@organisms.be"}, {"index": "493", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "494", "colour": "blue", "code": "    def char_disp(self, cid):\n", "error": "R", "author": "tom@organisms.be"}, {"index": "495", "colour": "orange", "code": "        return 0\n", "error": "none", "author": "tom@organisms.be"}, {"index": "496", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "497", "colour": "orange", "code": "    def string_width(self, s):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "498", "colour": "orange", "code": "        return sum( self.char_width(cid) for cid in self.decode(s) )\n", "error": "none", "author": "tom@organisms.be"}, {"index": "499", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "500", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "501", "colour": "orange", "code": "# PDFSimpleFont\n", "error": "none", "author": "tom@organisms.be"}, {"index": "502", "colour": "orange", "code": "class PDFSimpleFont(PDFFont):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "503", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "504", "colour": "orange", "code": "    def __init__(self, descriptor, widths, spec):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "505", "colour": "orange", "code": "        # Font encoding is specified either by a name of\n", "error": "none", "author": "tom@organisms.be"}, {"index": "506", "colour": "orange", "code": "        # built-in encoding or a dictionary that describes\n", "error": "none", "author": "tom@organisms.be"}, {"index": "507", "colour": "orange", "code": "        # the differences.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "508", "colour": "orange", "code": "        if 'Encoding' in spec:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "509", "colour": "orange", "code": "            encoding = resolve1(spec['Encoding'])\n", "error": "none", "author": "tom@organisms.be"}, {"index": "510", "colour": "orange", "code": "        else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "511", "colour": "orange", "code": "            encoding = LITERAL_STANDARD_ENCODING\n", "error": "none", "author": "tom@organisms.be"}, {"index": "512", "colour": "orange", "code": "        if isinstance(encoding, dict):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "513", "colour": "orange", "code": "            name = literal_name(encoding.get('BaseEncoding', LITERAL_STANDARD_ENCODING))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "514", "colour": "orange", "code": "            diff = list_value(encoding.get('Differences', None))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "515", "colour": "orange", "code": "            self.cid2unicode = EncodingDB.get_encoding(name, diff)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "516", "colour": "orange", "code": "        else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "517", "colour": "orange", "code": "            self.cid2unicode = EncodingDB.get_encoding(literal_name(encoding))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "518", "colour": "orange", "code": "        self.unicode_map = None\n", "error": "none", "author": "tom@organisms.be"}, {"index": "519", "colour": "orange", "code": "        if 'ToUnicode' in spec:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "520", "colour": "orange", "code": "            strm = stream_value(spec['ToUnicode'])\n", "error": "none", "author": "tom@organisms.be"}, {"index": "521", "colour": "orange", "code": "            self.unicode_map = FileUnicodeMap()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "522", "colour": "orange", "code": "            CMapParser(self.unicode_map, StringIO(strm.get_data())).run()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "523", "colour": "orange", "code": "        PDFFont.__init__(self, descriptor, widths)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "524", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "525", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "526", "colour": "orange", "code": "    def to_unichr(self, cid):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "527", "colour": "orange", "code": "        if self.unicode_map:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "528", "colour": "orange", "code": "            try:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "529", "colour": "orange", "code": "                return self.unicode_map.get_unichr(cid)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "530", "colour": "orange", "code": "            except KeyError:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "531", "colour": "orange", "code": "                pass\n", "error": "none", "author": "tom@organisms.be"}, {"index": "532", "colour": "orange", "code": "        try:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "533", "colour": "orange", "code": "            return self.cid2unicode[cid]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "534", "colour": "orange", "code": "        except KeyError:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "535", "colour": "orange", "code": "            raise PDFUnicodeNotDefined(None, cid)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "536", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "537", "colour": "orange", "code": "# PDFType1Font\n", "error": "none", "author": "tom@organisms.be"}, {"index": "538", "colour": "orange", "code": "class PDFType1Font(PDFSimpleFont):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "539", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "540", "colour": "green", "code": "    def __init__(self, rsrcmgr, spec):\n", "error": "W", "author": "tom@organisms.be"}, {"index": "541", "colour": "orange", "code": "        try:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "542", "colour": "orange", "code": "            self.basefont = literal_name(spec['BaseFont'])\n", "error": "none", "author": "tom@organisms.be"}, {"index": "543", "colour": "orange", "code": "        except KeyError:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "544", "colour": "orange", "code": "            if STRICT:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "545", "colour": "orange", "code": "                raise PDFFontError('BaseFont is missing')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "546", "colour": "orange", "code": "            self.basefont = 'unknown'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "547", "colour": "orange", "code": "        try:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "548", "colour": "orange", "code": "            (descriptor, widths) = FontMetricsDB.get_metrics(self.basefont)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "549", "colour": "orange", "code": "        except KeyError:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "550", "colour": "orange", "code": "            descriptor = dict_value(spec.get('FontDescriptor', {}))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "551", "colour": "orange", "code": "            firstchar = int_value(spec.get('FirstChar', 0))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "552", "colour": "green", "code": "            lastchar = int_value(spec.get('LastChar', 255))\n", "error": "W", "author": "tom@organisms.be"}, {"index": "553", "colour": "orange", "code": "            widths = list_value(spec.get('Widths', [0]*256))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "554", "colour": "orange", "code": "            widths = dict( (i+firstchar,w) for (i,w) in enumerate(widths) )\n", "error": "none", "author": "tom@organisms.be"}, {"index": "555", "colour": "orange", "code": "        PDFSimpleFont.__init__(self, descriptor, widths, spec)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "556", "colour": "orange", "code": "        if 'Encoding' not in spec and 'FontFile' in descriptor:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "557", "colour": "orange", "code": "            # try to recover the missing encoding info from the font file.\n", "error": "none", "author": "tom@organisms.be"}, {"index": "558", "colour": "orange", "code": "            self.fontfile = stream_value(descriptor.get('FontFile'))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "559", "colour": "orange", "code": "            length1 = int_value(self.fontfile['Length1'])\n", "error": "none", "author": "tom@organisms.be"}, {"index": "560", "colour": "orange", "code": "            data = self.fontfile.get_data()[:length1]\n", "error": "none", "author": "tom@organisms.be"}, {"index": "561", "colour": "orange", "code": "            parser = Type1FontHeaderParser(StringIO(data))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "562", "colour": "orange", "code": "            self.cid2unicode = parser.get_encoding()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "563", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "564", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "565", "colour": "orange", "code": "    def __repr__(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "566", "colour": "orange", "code": "        return '<PDFType1Font: basefont=%r>' % self.basefont\n", "error": "none", "author": "tom@organisms.be"}, {"index": "567", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "568", "colour": "orange", "code": "# PDFTrueTypeFont\n", "error": "none", "author": "tom@organisms.be"}, {"index": "569", "colour": "orange", "code": "class PDFTrueTypeFont(PDFType1Font):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "570", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "571", "colour": "orange", "code": "    def __repr__(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "572", "colour": "orange", "code": "        return '<PDFTrueTypeFont: basefont=%r>' % self.basefont\n", "error": "none", "author": "tom@organisms.be"}, {"index": "573", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "574", "colour": "orange", "code": "# PDFType3Font\n", "error": "none", "author": "tom@organisms.be"}, {"index": "575", "colour": "orange", "code": "class PDFType3Font(PDFSimpleFont):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "576", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "577", "colour": "green", "code": "    def __init__(self, rsrcmgr, spec):\n", "error": "W", "author": "tom@organisms.be"}, {"index": "578", "colour": "orange", "code": "        firstchar = int_value(spec.get('FirstChar', 0))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "579", "colour": "green", "code": "        lastchar = int_value(spec.get('LastChar', 0))\n", "error": "W", "author": "tom@organisms.be"}, {"index": "580", "colour": "orange", "code": "        widths = list_value(spec.get('Widths', [0]*256))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "581", "colour": "orange", "code": "        widths = dict( (i+firstchar,w) for (i,w) in enumerate(widths))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "582", "colour": "orange", "code": "        if 'FontDescriptor' in spec:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "583", "colour": "orange", "code": "            descriptor = dict_value(spec['FontDescriptor'])\n", "error": "none", "author": "tom@organisms.be"}, {"index": "584", "colour": "orange", "code": "        else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "585", "colour": "orange", "code": "            descriptor = {'Ascent':0, 'Descent':0,\n", "error": "none", "author": "tom@organisms.be"}, {"index": "586", "colour": "orange", "code": "                          'FontBBox':spec['FontBBox']}\n", "error": "none", "author": "tom@organisms.be"}, {"index": "587", "colour": "orange", "code": "        PDFSimpleFont.__init__(self, descriptor, widths, spec)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "588", "colour": "orange", "code": "        self.matrix = tuple(list_value(spec.get('FontMatrix')))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "589", "colour": "green", "code": "        (_,self.descent,_,self.ascent) = self.bbox\n", "error": "W", "author": "tom@organisms.be"}, {"index": "590", "colour": "orange", "code": "        (self.hscale,self.vscale) = apply_matrix_norm(self.matrix, (1,1))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "591", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "592", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "593", "colour": "orange", "code": "    def __repr__(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "594", "colour": "orange", "code": "        return '<PDFType3Font>'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "595", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "596", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "597", "colour": "orange", "code": "# PDFCIDFont\n", "error": "none", "author": "tom@organisms.be"}, {"index": "598", "colour": "blue", "code": "class PDFCIDFont(PDFFont):\n", "error": "R", "author": "tom@organisms.be"}, {"index": "599", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "600", "colour": "blue", "code": "    def __init__(self, rsrcmgr, spec):\n", "error": "R", "author": "tom@organisms.be"}, {"index": "601", "colour": "orange", "code": "        try:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "602", "colour": "orange", "code": "            self.basefont = literal_name(spec['BaseFont'])\n", "error": "none", "author": "tom@organisms.be"}, {"index": "603", "colour": "orange", "code": "        except KeyError:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "604", "colour": "orange", "code": "            if STRICT:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "605", "colour": "orange", "code": "                raise PDFFontError('BaseFont is missing')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "606", "colour": "orange", "code": "            self.basefont = 'unknown'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "607", "colour": "orange", "code": "        self.cidsysteminfo = dict_value(spec.get('CIDSystemInfo', {}))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "608", "colour": "orange", "code": "        self.cidcoding = '%s-%s' % (self.cidsysteminfo.get('Registry', 'unknown'),\n", "error": "none", "author": "tom@organisms.be"}, {"index": "609", "colour": "orange", "code": "                                    self.cidsysteminfo.get('Ordering', 'unknown'))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "610", "colour": "orange", "code": "        try:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "611", "colour": "orange", "code": "            name = literal_name(spec['Encoding'])\n", "error": "none", "author": "tom@organisms.be"}, {"index": "612", "colour": "orange", "code": "        except KeyError:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "613", "colour": "orange", "code": "            if STRICT:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "614", "colour": "orange", "code": "                raise PDFFontError('Encoding is unspecified')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "615", "colour": "orange", "code": "            name = 'unknown'\n", "error": "none", "author": "tom@organisms.be"}, {"index": "616", "colour": "orange", "code": "        try:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "617", "colour": "orange", "code": "            self.cmap = CMapDB.get_cmap(name)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "618", "colour": "orange", "code": "        except CMapDB.CMapNotFound as e:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "619", "colour": "orange", "code": "            if STRICT:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "620", "colour": "orange", "code": "                raise PDFFontError(e)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "621", "colour": "orange", "code": "            self.cmap = CMap()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "622", "colour": "orange", "code": "        try:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "623", "colour": "orange", "code": "            descriptor = dict_value(spec['FontDescriptor'])\n", "error": "none", "author": "tom@organisms.be"}, {"index": "624", "colour": "orange", "code": "        except KeyError:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "625", "colour": "orange", "code": "            if STRICT:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "626", "colour": "orange", "code": "                raise PDFFontError('FontDescriptor is missing')\n", "error": "none", "author": "tom@organisms.be"}, {"index": "627", "colour": "orange", "code": "            descriptor = {}\n", "error": "none", "author": "tom@organisms.be"}, {"index": "628", "colour": "orange", "code": "        ttf = None\n", "error": "none", "author": "tom@organisms.be"}, {"index": "629", "colour": "orange", "code": "        if 'FontFile2' in descriptor:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "630", "colour": "orange", "code": "            self.fontfile = stream_value(descriptor.get('FontFile2'))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "631", "colour": "orange", "code": "            ttf = TrueTypeFont(self.basefont,\n", "error": "none", "author": "tom@organisms.be"}, {"index": "632", "colour": "orange", "code": "                               StringIO(self.fontfile.get_data()))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "633", "colour": "orange", "code": "        self.unicode_map = None\n", "error": "none", "author": "tom@organisms.be"}, {"index": "634", "colour": "orange", "code": "        if 'ToUnicode' in spec:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "635", "colour": "orange", "code": "            strm = stream_value(spec['ToUnicode'])\n", "error": "none", "author": "tom@organisms.be"}, {"index": "636", "colour": "orange", "code": "            self.unicode_map = FileUnicodeMap()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "637", "colour": "orange", "code": "            CMapParser(self.unicode_map, StringIO(strm.get_data())).run()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "638", "colour": "orange", "code": "        elif self.cidcoding == 'Adobe-Identity':\n", "error": "none", "author": "tom@organisms.be"}, {"index": "639", "colour": "orange", "code": "            if ttf:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "640", "colour": "orange", "code": "                try:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "641", "colour": "orange", "code": "                    self.unicode_map = ttf.create_unicode_map()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "642", "colour": "orange", "code": "                except TrueTypeFont.CMapNotFound:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "643", "colour": "orange", "code": "                    pass\n", "error": "none", "author": "tom@organisms.be"}, {"index": "644", "colour": "orange", "code": "        else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "645", "colour": "orange", "code": "            try:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "646", "colour": "orange", "code": "                self.unicode_map = CMapDB.get_unicode_map(self.cidcoding, self.cmap.is_vertical())\n", "error": "none", "author": "tom@organisms.be"}, {"index": "647", "colour": "orange", "code": "            except CMapDB.CMapNotFound as e:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "648", "colour": "orange", "code": "                pass\n", "error": "none", "author": "tom@organisms.be"}, {"index": "649", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "650", "colour": "orange", "code": "        self.vertical = self.cmap.is_vertical()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "651", "colour": "orange", "code": "        if self.vertical:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "652", "colour": "orange", "code": "            # writing mode: vertical\n", "error": "none", "author": "tom@organisms.be"}, {"index": "653", "colour": "orange", "code": "            widths = get_widths2(list_value(spec.get('W2', [])))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "654", "colour": "orange", "code": "            self.disps = dict( (cid,(vx,vy)) for (cid,(_,(vx,vy))) in widths.iteritems() )\n", "error": "none", "author": "tom@organisms.be"}, {"index": "655", "colour": "orange", "code": "            (vy,w) = spec.get('DW2', [880, -1000])\n", "error": "none", "author": "tom@organisms.be"}, {"index": "656", "colour": "orange", "code": "            self.default_disp = (None,vy)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "657", "colour": "orange", "code": "            widths = dict( (cid,w) for (cid,(w,_)) in widths.iteritems() )\n", "error": "none", "author": "tom@organisms.be"}, {"index": "658", "colour": "orange", "code": "            default_width = w\n", "error": "none", "author": "tom@organisms.be"}, {"index": "659", "colour": "orange", "code": "        else:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "660", "colour": "orange", "code": "            # writing mode: horizontal\n", "error": "none", "author": "tom@organisms.be"}, {"index": "661", "colour": "orange", "code": "            self.disps = {}\n", "error": "none", "author": "tom@organisms.be"}, {"index": "662", "colour": "orange", "code": "            self.default_disp = 0\n", "error": "none", "author": "tom@organisms.be"}, {"index": "663", "colour": "orange", "code": "            widths = get_widths(list_value(spec.get('W', [])))\n", "error": "none", "author": "tom@organisms.be"}, {"index": "664", "colour": "orange", "code": "            default_width = spec.get('DW', 1000)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "665", "colour": "orange", "code": "        PDFFont.__init__(self, descriptor, widths, default_width=default_width)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "666", "colour": "orange", "code": "        return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "667", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "668", "colour": "orange", "code": "    def __repr__(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "669", "colour": "orange", "code": "        return '<PDFCIDFont: basefont=%r, cidcoding=%r>' % (self.basefont, self.cidcoding)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "670", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "671", "colour": "orange", "code": "    def is_vertical(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "672", "colour": "orange", "code": "        return self.vertical\n", "error": "none", "author": "tom@organisms.be"}, {"index": "673", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "674", "colour": "orange", "code": "    def is_multibyte(self):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "675", "colour": "orange", "code": "        return True\n", "error": "none", "author": "tom@organisms.be"}, {"index": "676", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "677", "colour": "green", "code": "    def decode(self, bytes):\n", "error": "W", "author": "tom@organisms.be"}, {"index": "678", "colour": "orange", "code": "        return self.cmap.decode(bytes)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "679", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "680", "colour": "orange", "code": "    def char_disp(self, cid):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "681", "colour": "orange", "code": "        \"Returns an integer for horizontal fonts, a tuple for vertical fonts.\"\n", "error": "none", "author": "tom@organisms.be"}, {"index": "682", "colour": "orange", "code": "        return self.disps.get(cid, self.default_disp)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "683", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "684", "colour": "orange", "code": "    def to_unichr(self, cid):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "685", "colour": "orange", "code": "        try:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "686", "colour": "orange", "code": "            if not self.unicode_map: raise KeyError(cid)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "687", "colour": "orange", "code": "            return self.unicode_map.get_unichr(cid)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "688", "colour": "orange", "code": "        except KeyError:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "689", "colour": "orange", "code": "            raise PDFUnicodeNotDefined(self.cidcoding, cid)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "690", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "691", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "692", "colour": "orange", "code": "# main\n", "error": "none", "author": "tom@organisms.be"}, {"index": "693", "colour": "orange", "code": "def main(argv):\n", "error": "none", "author": "tom@organisms.be"}, {"index": "694", "colour": "orange", "code": "    for fname in argv[1:]:\n", "error": "none", "author": "tom@organisms.be"}, {"index": "695", "colour": "green", "code": "        fp = file(fname, 'rb')\n", "error": "W", "author": "tom@organisms.be"}, {"index": "696", "colour": "orange", "code": "        #font = TrueTypeFont(fname, fp)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "697", "colour": "orange", "code": "        font = CFFFont(fname, fp)\n", "error": "none", "author": "tom@organisms.be"}, {"index": "698", "colour": "orange", "code": "        print font\n", "error": "none", "author": "tom@organisms.be"}, {"index": "699", "colour": "orange", "code": "        fp.close()\n", "error": "none", "author": "tom@organisms.be"}, {"index": "700", "colour": "orange", "code": "    return\n", "error": "none", "author": "tom@organisms.be"}, {"index": "701", "colour": "orange", "code": "\n", "error": "none", "author": "tom@organisms.be"}, {"index": "702", "colour": "orange", "code": "if __name__ == '__main__': sys.exit(main(sys.argv))\n", "error": "none", "author": "tom@organisms.be"}]}